{"id":"node_modules/url-join/lib/url-join.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/url-join/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"var define;\n(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/url-join/lib/url-join.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/url-join/lib/url-join.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}}],"sources":{"node_modules/url-join/lib/url-join.js":"(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n"},"lineCount":80}},"error":null,"hash":"747d6812d8aca29255771b0c32733f71","cacheData":{"env":{}}}