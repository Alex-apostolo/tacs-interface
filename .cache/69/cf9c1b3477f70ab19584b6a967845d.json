{"id":"node_modules/danfojs-node/dist/preprocessing/scalers.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/package.json","includedInParent":true,"mtime":499162500000},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":3,"column":38},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/preprocessing/scalers.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/@babel/runtime/helpers/interopRequireWildcard.js"},{"name":"@tensorflow/tfjs-node","loc":{"line":10,"column":41},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/preprocessing/scalers.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/@tensorflow/tfjs-node/dist/index.js"},{"name":"../core/series","loc":{"line":12,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/preprocessing/scalers.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/series.js"},{"name":"../core/frame","loc":{"line":14,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/preprocessing/scalers.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js"},{"name":"../core/utils","loc":{"line":16,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/preprocessing/scalers.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/utils.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardScaler = exports.MinMaxScaler = void 0;\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs-node\"));\n\nvar _series = require(\"../core/series\");\n\nvar _frame = require(\"../core/frame\");\n\nvar _utils = require(\"../core/utils\");\n\nconst utils = new _utils.Utils();\n\nclass MinMaxScaler {\n  fit(data) {\n    let tensor_data = null;\n\n    if (Array.isArray(data)) {\n      tensor_data = tf.tensor(data);\n    } else if (data instanceof _frame.DataFrame || data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      tensor_data = tf.tensor(data.values);\n    } else {\n      throw new Error(\"data must either be an Array, DataFrame or Series\");\n    }\n\n    this.max = tensor_data.max(0);\n    this.min = tensor_data.min(0);\n    let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n\n    if (data instanceof _series.Series || Array.isArray(data)) {\n      return new _series.Series(output_data);\n    } else {\n      return new _frame.DataFrame(output_data);\n    }\n  }\n\n  transform(data) {\n    if (data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n      return new _series.Series(output_data);\n    } else if (Array.isArray(data)) {\n      let tensor_data = tf.tensor(data);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n\n      if (utils.__is_1D_array(data)) {\n        return new _series.Series(output_data);\n      } else {\n        return new _frame.DataFrame(output_data);\n      }\n    } else if (data instanceof _frame.DataFrame) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n      return new _frame.DataFrame(output_data);\n    } else {\n      throw Error(\"Value Error: Data type not supoorted\");\n    }\n  }\n\n}\n\nexports.MinMaxScaler = MinMaxScaler;\n\nclass StandardScaler {\n  fit(data) {\n    let tensor_data = null;\n\n    if (Array.isArray(data)) {\n      tensor_data = tf.tensor(data);\n    } else if (data instanceof _frame.DataFrame || data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      tensor_data = tf.tensor(data.values);\n    } else {\n      throw new Error(\"data must either be an Array, DataFrame or Series\");\n    }\n\n    this.std = tf.moments(tensor_data, 0).variance.sqrt();\n    this.mean = tensor_data.mean(0);\n    let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n\n    if (data instanceof _series.Series || Array.isArray(data)) {\n      return new _series.Series(data = output_data);\n    } else {\n      return new _frame.DataFrame(data = output_data);\n    }\n  }\n\n  transform(data) {\n    if (data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n      return new _series.Series(output_data);\n    } else if (Array.isArray(data)) {\n      let tensor_data = tf.tensor(data);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n\n      if (utils.__is_1D_array(data)) {\n        return new _series.Series(output_data);\n      } else {\n        return new _frame.DataFrame(output_data);\n      }\n    } else if (data instanceof _frame.DataFrame) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n      return new _frame.DataFrame(output_data);\n    } else {\n      throw Error(\"Value Error: Data type not supoorted\");\n    }\n  }\n\n}\n\nexports.StandardScaler = StandardScaler;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/danfojs-node/dist/preprocessing/scalers.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}}],"sources":{"node_modules/danfojs-node/dist/preprocessing/scalers.js":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardScaler = exports.MinMaxScaler = void 0;\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs-node\"));\n\nvar _series = require(\"../core/series\");\n\nvar _frame = require(\"../core/frame\");\n\nvar _utils = require(\"../core/utils\");\n\nconst utils = new _utils.Utils();\n\nclass MinMaxScaler {\n  fit(data) {\n    let tensor_data = null;\n\n    if (Array.isArray(data)) {\n      tensor_data = tf.tensor(data);\n    } else if (data instanceof _frame.DataFrame || data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      tensor_data = tf.tensor(data.values);\n    } else {\n      throw new Error(\"data must either be an Array, DataFrame or Series\");\n    }\n\n    this.max = tensor_data.max(0);\n    this.min = tensor_data.min(0);\n    let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n\n    if (data instanceof _series.Series || Array.isArray(data)) {\n      return new _series.Series(output_data);\n    } else {\n      return new _frame.DataFrame(output_data);\n    }\n  }\n\n  transform(data) {\n    if (data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n      return new _series.Series(output_data);\n    } else if (Array.isArray(data)) {\n      let tensor_data = tf.tensor(data);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n\n      if (utils.__is_1D_array(data)) {\n        return new _series.Series(output_data);\n      } else {\n        return new _frame.DataFrame(output_data);\n      }\n    } else if (data instanceof _frame.DataFrame) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.min).div(this.max.sub(this.min)).arraySync();\n      return new _frame.DataFrame(output_data);\n    } else {\n      throw Error(\"Value Error: Data type not supoorted\");\n    }\n  }\n\n}\n\nexports.MinMaxScaler = MinMaxScaler;\n\nclass StandardScaler {\n  fit(data) {\n    let tensor_data = null;\n\n    if (Array.isArray(data)) {\n      tensor_data = tf.tensor(data);\n    } else if (data instanceof _frame.DataFrame || data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      tensor_data = tf.tensor(data.values);\n    } else {\n      throw new Error(\"data must either be an Array, DataFrame or Series\");\n    }\n\n    this.std = tf.moments(tensor_data, 0).variance.sqrt();\n    this.mean = tensor_data.mean(0);\n    let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n\n    if (data instanceof _series.Series || Array.isArray(data)) {\n      return new _series.Series(data = output_data);\n    } else {\n      return new _frame.DataFrame(data = output_data);\n    }\n  }\n\n  transform(data) {\n    if (data instanceof _series.Series) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n      return new _series.Series(output_data);\n    } else if (Array.isArray(data)) {\n      let tensor_data = tf.tensor(data);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n\n      if (utils.__is_1D_array(data)) {\n        return new _series.Series(output_data);\n      } else {\n        return new _frame.DataFrame(output_data);\n      }\n    } else if (data instanceof _frame.DataFrame) {\n      if (data.dtypes.includes(\"string\")) {\n        throw Error(\"Dtype Error: Cannot perform operation on string dtypes\");\n      }\n\n      let tensor_data = tf.tensor(data.values);\n      let output_data = tensor_data.sub(this.mean).div(this.std).arraySync();\n      return new _frame.DataFrame(output_data);\n    } else {\n      throw Error(\"Value Error: Data type not supoorted\");\n    }\n  }\n\n}\n\nexports.StandardScaler = StandardScaler;"},"lineCount":142}},"error":null,"hash":"42630f821372665b62a8775b83d5addd","cacheData":{"env":{}}}