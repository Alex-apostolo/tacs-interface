{"id":"node_modules/chardet/lib/encoding/unicode.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/chardet/lib/encoding/unicode.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/chardet/package.json","includedInParent":true,"mtime":499162500000},{"name":"../match","loc":{"line":7,"column":40},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/chardet/lib/encoding/unicode.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/chardet/lib/match.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UTF_32LE = exports.UTF_32BE = exports.UTF_16LE = exports.UTF_16BE = void 0;\nconst match_1 = __importDefault(require(\"../match\"));\nclass UTF_16BE {\n    name() {\n        return 'UTF-16BE';\n    }\n    match(det) {\n        const input = det.fRawInput;\n        if (input.length >= 2 &&\n            (input[0] & 0xff) == 0xfe &&\n            (input[1] & 0xff) == 0xff) {\n            return match_1.default(det, this, 100);\n        }\n        return null;\n    }\n}\nexports.UTF_16BE = UTF_16BE;\nclass UTF_16LE {\n    name() {\n        return 'UTF-16LE';\n    }\n    match(det) {\n        const input = det.fRawInput;\n        if (input.length >= 2 &&\n            (input[0] & 0xff) == 0xff &&\n            (input[1] & 0xff) == 0xfe) {\n            if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00) {\n                return null;\n            }\n            return match_1.default(det, this, 100);\n        }\n        return null;\n    }\n}\nexports.UTF_16LE = UTF_16LE;\nclass UTF_32 {\n    name() {\n        return 'UTF-32';\n    }\n    getChar(input, index) {\n        return -1;\n    }\n    match(det) {\n        let numValid = 0, numInvalid = 0, hasBOM = false, confidence = 0;\n        const limit = (det.fRawLength / 4) * 4;\n        const input = det.fRawInput;\n        if (limit == 0) {\n            return null;\n        }\n        if (this.getChar(input, 0) == 0x0000feff) {\n            hasBOM = true;\n        }\n        for (let i = 0; i < limit; i += 4) {\n            const ch = this.getChar(input, i);\n            if (ch < 0 || ch >= 0x10ffff || (ch >= 0xd800 && ch <= 0xdfff)) {\n                numInvalid += 1;\n            }\n            else {\n                numValid += 1;\n            }\n        }\n        if (hasBOM && numInvalid == 0) {\n            confidence = 100;\n        }\n        else if (hasBOM && numValid > numInvalid * 10) {\n            confidence = 80;\n        }\n        else if (numValid > 3 && numInvalid == 0) {\n            confidence = 100;\n        }\n        else if (numValid > 0 && numInvalid == 0) {\n            confidence = 80;\n        }\n        else if (numValid > numInvalid * 10) {\n            confidence = 25;\n        }\n        return confidence == 0 ? null : match_1.default(det, this, confidence);\n    }\n}\nclass UTF_32BE extends UTF_32 {\n    name() {\n        return 'UTF-32BE';\n    }\n    getChar(input, index) {\n        return (((input[index + 0] & 0xff) << 24) |\n            ((input[index + 1] & 0xff) << 16) |\n            ((input[index + 2] & 0xff) << 8) |\n            (input[index + 3] & 0xff));\n    }\n}\nexports.UTF_32BE = UTF_32BE;\nclass UTF_32LE extends UTF_32 {\n    name() {\n        return 'UTF-32LE';\n    }\n    getChar(input, index) {\n        return (((input[index + 3] & 0xff) << 24) |\n            ((input[index + 2] & 0xff) << 16) |\n            ((input[index + 1] & 0xff) << 8) |\n            (input[index + 0] & 0xff));\n    }\n}\nexports.UTF_32LE = UTF_32LE;\n"},"sourceMaps":{"js":{"version":3,"file":"unicode.js","sourceRoot":"","sources":["../../src/encoding/unicode.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"459c915bc1e6126f916dc0711ad5eaae","cacheData":{"env":{}}}