{"id":"node_modules/dataframe-js/lib/modules/stat.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/Frontend/package.json","includedInParent":true,"mtime":1617198465933},{"name":"/Users/alex/SoftwareDevelopment/Web/Frontend/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"core-js/modules/es.array.filter","loc":{"line":3,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/core-js/modules/es.array.filter.js"},{"name":"core-js/modules/es.array.reduce","loc":{"line":5,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/core-js/modules/es.array.reduce.js"},{"name":"core-js/modules/es.function.name","loc":{"line":7,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/core-js/modules/es.function.name.js"},{"name":"core-js/modules/es.number.constructor","loc":{"line":9,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/core-js/modules/es.number.constructor.js"},{"name":"core-js/modules/es.number.is-nan","loc":{"line":11,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/core-js/modules/es.number.is-nan.js"},{"name":"../reusables","loc":{"line":18,"column":25},"parent":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/modules/stat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/Frontend/node_modules/dataframe-js/lib/reusables.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.is-nan\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reusables = require(\"../reusables\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Stat = function () {\n  function Stat(df) {\n    _classCallCheck(this, Stat);\n\n    this.df = df;\n    this.name = \"stat\";\n  }\n\n  _createClass(Stat, [{\n    key: \"_castAsNumber\",\n    value: function _castAsNumber(columnName) {\n      return this.df.withColumn(columnName, function (row) {\n        return Number(row.get(columnName));\n      }).filter(function (row) {\n        return !Number.isNaN(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"sum\",\n    value: function sum(columnName) {\n      return Number(this.df.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return n.get(columnName) > p.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"min\",\n    value: function min(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return p.get(columnName) > n.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(columnName) {\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      return Number(numericDF.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0)) / numericDF.count();\n    }\n  }, {\n    key: \"average\",\n    value: function average(columnName) {\n      return this.mean(columnName);\n    }\n  }, {\n    key: \"var\",\n    value: function _var(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      var mean = this.mean(columnName);\n      return Number(numericDF.reduce(function (p, n) {\n        return p + Math.pow(n.get(columnName) - mean, 2);\n      }, 0)) / (numericDF.count() - (population ? 0 : 1));\n    }\n  }, {\n    key: \"sd\",\n    value: function sd(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return Math.sqrt(this.var(columnName, population));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats(columnName) {\n      return {\n        sum: this.sum(columnName),\n        mean: this.mean(columnName),\n        min: this.min(columnName),\n        max: this.max(columnName),\n        var: this.var(columnName),\n        varpop: this.var(columnName, true),\n        sd: this.sd(columnName),\n        sdpop: this.sd(columnName, true)\n      };\n    }\n  }]);\n\n  return Stat;\n}();\n\nvar _default = Stat;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/dataframe-js/lib/modules/stat.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"node_modules/dataframe-js/lib/modules/stat.js":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.is-nan\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reusables = require(\"../reusables\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Stat = function () {\n  function Stat(df) {\n    _classCallCheck(this, Stat);\n\n    this.df = df;\n    this.name = \"stat\";\n  }\n\n  _createClass(Stat, [{\n    key: \"_castAsNumber\",\n    value: function _castAsNumber(columnName) {\n      return this.df.withColumn(columnName, function (row) {\n        return Number(row.get(columnName));\n      }).filter(function (row) {\n        return !Number.isNaN(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"sum\",\n    value: function sum(columnName) {\n      return Number(this.df.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return n.get(columnName) > p.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"min\",\n    value: function min(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return p.get(columnName) > n.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(columnName) {\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      return Number(numericDF.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0)) / numericDF.count();\n    }\n  }, {\n    key: \"average\",\n    value: function average(columnName) {\n      return this.mean(columnName);\n    }\n  }, {\n    key: \"var\",\n    value: function _var(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      var mean = this.mean(columnName);\n      return Number(numericDF.reduce(function (p, n) {\n        return p + Math.pow(n.get(columnName) - mean, 2);\n      }, 0)) / (numericDF.count() - (population ? 0 : 1));\n    }\n  }, {\n    key: \"sd\",\n    value: function sd(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return Math.sqrt(this.var(columnName, population));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats(columnName) {\n      return {\n        sum: this.sum(columnName),\n        mean: this.mean(columnName),\n        min: this.min(columnName),\n        max: this.max(columnName),\n        var: this.var(columnName),\n        varpop: this.var(columnName, true),\n        sd: this.sd(columnName),\n        sdpop: this.sd(columnName, true)\n      };\n    }\n  }]);\n\n  return Stat;\n}();\n\nvar _default = Stat;\nexports.default = _default;"},"lineCount":117}},"error":null,"hash":"4d6f1d252a9165bcdf73c2ac7c14d7f0","cacheData":{"env":{}}}