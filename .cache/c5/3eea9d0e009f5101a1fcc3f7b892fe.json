{"id":"node_modules/dataframe-js/lib/dataframe.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1616698125685},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"core-js/modules/es.symbol","loc":{"line":3,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.symbol.js"},{"name":"core-js/modules/es.symbol.description","loc":{"line":5,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.symbol.description.js"},{"name":"core-js/modules/es.symbol.iterator","loc":{"line":7,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.symbol.iterator.js"},{"name":"core-js/modules/es.array.concat","loc":{"line":9,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.concat.js"},{"name":"core-js/modules/es.array.filter","loc":{"line":11,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.filter.js"},{"name":"core-js/modules/es.array.for-each","loc":{"line":13,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.for-each.js"},{"name":"core-js/modules/es.array.from","loc":{"line":15,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.from.js"},{"name":"core-js/modules/es.array.includes","loc":{"line":17,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.includes.js"},{"name":"core-js/modules/es.array.iterator","loc":{"line":19,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.iterator.js"},{"name":"core-js/modules/es.array.join","loc":{"line":21,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.join.js"},{"name":"core-js/modules/es.array.map","loc":{"line":23,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.map.js"},{"name":"core-js/modules/es.array.reduce","loc":{"line":25,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.reduce.js"},{"name":"core-js/modules/es.array.reduce-right","loc":{"line":27,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.reduce-right.js"},{"name":"core-js/modules/es.array.slice","loc":{"line":29,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.slice.js"},{"name":"core-js/modules/es.array.sort","loc":{"line":31,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.array.sort.js"},{"name":"core-js/modules/es.date.to-json","loc":{"line":33,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.date.to-json.js"},{"name":"core-js/modules/es.date.to-string","loc":{"line":35,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.date.to-string.js"},{"name":"core-js/modules/es.function.name","loc":{"line":37,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.function.name.js"},{"name":"core-js/modules/es.object.assign","loc":{"line":39,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.assign.js"},{"name":"core-js/modules/es.object.entries","loc":{"line":41,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.entries.js"},{"name":"core-js/modules/es.object.get-own-property-descriptor","loc":{"line":43,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.get-own-property-descriptor.js"},{"name":"core-js/modules/es.object.is","loc":{"line":45,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.is.js"},{"name":"core-js/modules/es.object.keys","loc":{"line":47,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.keys.js"},{"name":"core-js/modules/es.object.to-string","loc":{"line":49,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.to-string.js"},{"name":"core-js/modules/es.object.values","loc":{"line":51,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.object.values.js"},{"name":"core-js/modules/es.regexp.exec","loc":{"line":53,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.regexp.exec.js"},{"name":"core-js/modules/es.regexp.to-string","loc":{"line":55,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.regexp.to-string.js"},{"name":"core-js/modules/es.set","loc":{"line":57,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.set.js"},{"name":"core-js/modules/es.string.includes","loc":{"line":59,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.string.includes.js"},{"name":"core-js/modules/es.string.iterator","loc":{"line":61,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.string.iterator.js"},{"name":"core-js/modules/es.string.replace","loc":{"line":63,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/es.string.replace.js"},{"name":"core-js/modules/esnext.set.add-all","loc":{"line":65,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.add-all.js"},{"name":"core-js/modules/esnext.set.delete-all","loc":{"line":67,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.delete-all.js"},{"name":"core-js/modules/esnext.set.difference","loc":{"line":69,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.difference.js"},{"name":"core-js/modules/esnext.set.every","loc":{"line":71,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.every.js"},{"name":"core-js/modules/esnext.set.filter","loc":{"line":73,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.filter.js"},{"name":"core-js/modules/esnext.set.find","loc":{"line":75,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.find.js"},{"name":"core-js/modules/esnext.set.intersection","loc":{"line":77,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.intersection.js"},{"name":"core-js/modules/esnext.set.is-disjoint-from","loc":{"line":79,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.is-disjoint-from.js"},{"name":"core-js/modules/esnext.set.is-subset-of","loc":{"line":81,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.is-subset-of.js"},{"name":"core-js/modules/esnext.set.is-superset-of","loc":{"line":83,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.is-superset-of.js"},{"name":"core-js/modules/esnext.set.join","loc":{"line":85,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.join.js"},{"name":"core-js/modules/esnext.set.map","loc":{"line":87,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.map.js"},{"name":"core-js/modules/esnext.set.reduce","loc":{"line":89,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.reduce.js"},{"name":"core-js/modules/esnext.set.some","loc":{"line":91,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.some.js"},{"name":"core-js/modules/esnext.set.symmetric-difference","loc":{"line":93,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.symmetric-difference.js"},{"name":"core-js/modules/esnext.set.union","loc":{"line":95,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/esnext.set.union.js"},{"name":"core-js/modules/web.dom-collections.for-each","loc":{"line":97,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/web.dom-collections.for-each.js"},{"name":"core-js/modules/web.dom-collections.iterator","loc":{"line":99,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/web.dom-collections.iterator.js"},{"name":"core-js/modules/web.url.to-json","loc":{"line":101,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/core-js/modules/web.url.to-json.js"},{"name":"regenerator-runtime/runtime","loc":{"line":108,"column":8},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/regenerator-runtime/runtime.js"},{"name":"./reusables","loc":{"line":110,"column":25},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/reusables.js"},{"name":"./errors","loc":{"line":112,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/errors.js"},{"name":"./row","loc":{"line":114,"column":42},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/row.js"},{"name":"./group","loc":{"line":116,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/group.js"},{"name":"./symbol","loc":{"line":118,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/symbol.js"},{"name":"./io","loc":{"line":120,"column":41},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/dataframe.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/dataframe-js/lib/io.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.array.reduce-right\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.date.to-json\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.entries\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.is\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.set\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/esnext.set.add-all\");\n\nrequire(\"core-js/modules/esnext.set.delete-all\");\n\nrequire(\"core-js/modules/esnext.set.difference\");\n\nrequire(\"core-js/modules/esnext.set.every\");\n\nrequire(\"core-js/modules/esnext.set.filter\");\n\nrequire(\"core-js/modules/esnext.set.find\");\n\nrequire(\"core-js/modules/esnext.set.intersection\");\n\nrequire(\"core-js/modules/esnext.set.is-disjoint-from\");\n\nrequire(\"core-js/modules/esnext.set.is-subset-of\");\n\nrequire(\"core-js/modules/esnext.set.is-superset-of\");\n\nrequire(\"core-js/modules/esnext.set.join\");\n\nrequire(\"core-js/modules/esnext.set.map\");\n\nrequire(\"core-js/modules/esnext.set.reduce\");\n\nrequire(\"core-js/modules/esnext.set.some\");\n\nrequire(\"core-js/modules/esnext.set.symmetric-difference\");\n\nrequire(\"core-js/modules/esnext.set.union\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _reusables = require(\"./reusables\");\n\nvar _errors = require(\"./errors\");\n\nvar _row = _interopRequireDefault(require(\"./row\"));\n\nvar _group = require(\"./group\");\n\nvar _symbol = require(\"./symbol\");\n\nvar io = _interopRequireWildcard(require(\"./io\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataFrame = function () {\n  _createClass(DataFrame, null, [{\n    key: \"setDefaultModules\",\n    value: function setDefaultModules() {\n      for (var _len = arguments.length, defaultModules = new Array(_len), _key = 0; _key < _len; _key++) {\n        defaultModules[_key] = arguments[_key];\n      }\n\n      DataFrame.defaultModules = defaultModules;\n    }\n  }, {\n    key: \"fromDSV\",\n    value: function fromDSV() {\n      return io.fromDSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromText\",\n    value: function fromText() {\n      return io.fromText.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromCSV\",\n    value: function fromCSV() {\n      return io.fromCSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromTSV\",\n    value: function fromTSV() {\n      return io.fromTSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromPSV\",\n    value: function fromPSV() {\n      return io.fromPSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON() {\n      return io.fromJSON.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }]);\n\n  function DataFrame(data, columns) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, DataFrame);\n\n    var _this$_build = this._build(data, columns);\n\n    var _this$_build2 = _slicedToArray(_this$_build, 2);\n\n    this[_symbol.__rows__] = _this$_build2[0];\n    this[_symbol.__columns__] = _this$_build2[1];\n    this.options = options;\n    this.options.modules = [].concat(_toConsumableArray(DataFrame.defaultModules), _toConsumableArray(this.options.modules || []));\n    Object.assign.apply(Object, [this].concat(_toConsumableArray(this.__instanciateModules__(this.options.modules))));\n  }\n\n  _createClass(DataFrame, [{\n    key: Symbol.iterator,\n    value: regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, row;\n\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[_symbol.__rows__][Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              row = _step.value;\n              _context.next = 9;\n              return row;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n  }, {\n    key: \"_columnsAreEquals\",\n    value: function _columnsAreEquals(columns) {\n      var columns2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[_symbol.__columns__];\n\n      for (var _i2 = 0, _Object$keys = Object.keys(columns); _i2 < _Object$keys.length; _i2++) {\n        var key = _Object$keys[_i2];\n        if (columns[key] !== columns2[key]) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"__newInstance__\",\n    value: function __newInstance__(data, columns) {\n      if (!this._columnsAreEquals(columns) || !(data[0] instanceof _row.default)) {\n        return new DataFrame(data, columns, this.options);\n      }\n\n      var firstRowColumns = Object.keys(data[0].toDict());\n\n      if (!(0, _reusables.arrayEqual)(firstRowColumns, this[_symbol.__columns__], true)) {\n        return new DataFrame(data, firstRowColumns, this.options);\n      }\n\n      var newInstance = new DataFrame([], [], this.options);\n      newInstance[_symbol.__rows__] = _toConsumableArray(data);\n      newInstance[_symbol.__columns__] = _toConsumableArray(columns);\n      return newInstance;\n    }\n  }, {\n    key: \"__instanciateModules__\",\n    value: function __instanciateModules__(modules) {\n      var _this = this;\n\n      var df = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      return modules.map(function (Plugin) {\n        var pluginInstance = new Plugin(df ? df : _this);\n        return _defineProperty({}, pluginInstance.name, pluginInstance);\n      });\n    }\n  }, {\n    key: \"_build\",\n    value: function _build(data, columns) {\n      if (data instanceof DataFrame) {\n        return this._fromArray(Array.from(data[_symbol.__rows__]), columns || data[_symbol.__columns__]);\n      }\n\n      if (data instanceof Array && data.length > 0) {\n        return this._fromArray(data, columns || Array.from(new Set(data.slice(0, 10).concat(data.slice(-10, -1)).map(function (row) {\n          return Object.keys(row);\n        }).reduce(function (p, n) {\n          return p.concat(n);\n        }))));\n      }\n\n      if (data instanceof Array && data.length === 0) {\n        return this._fromArray(data, columns ? columns : []);\n      }\n\n      if (data instanceof Object) {\n        return this._fromDict(data, columns || Object.keys(data));\n      }\n\n      throw new _errors.ArgumentTypeError(data, \"DataFrame | Array | Object\");\n    }\n  }, {\n    key: \"_fromDict\",\n    value: function _fromDict(dict, columns) {\n      return [(0, _reusables.transpose)(Object.values(dict)).map(function (row) {\n        return new _row.default(row, columns);\n      }), columns];\n    }\n  }, {\n    key: \"_fromArray\",\n    value: function _fromArray(array, columns) {\n      return [array.map(function (row) {\n        return new _row.default(row, columns);\n      }), columns];\n    }\n  }, {\n    key: \"_joinByType\",\n    value: function _joinByType(gdf1, gdf2, type, newColumns) {\n      var _this2 = this;\n\n      var gdf2Hashs = gdf2.listHashs();\n      return gdf1.toCollection().map(function (_ref2) {\n        var group = _ref2.group,\n            hash = _ref2.hash;\n        var isContained = gdf2Hashs.includes(hash);\n        var modifiedGroup = group;\n\n        if (gdf2.get(hash)) {\n          var gdf2Collection = gdf2.get(hash).group.toCollection();\n          var combinedGroup = group.toCollection().map(function (row) {\n            return gdf2Collection.map(function (row2) {\n              return Object.assign({}, row2, row);\n            });\n          }).reduce(function (p, n) {\n            return [].concat(_toConsumableArray(p), _toConsumableArray(n));\n          }, []);\n          modifiedGroup = _this2.__newInstance__(combinedGroup, newColumns);\n        }\n\n        var filterCondition = function filterCondition(bool) {\n          return bool ? modifiedGroup : false;\n        };\n\n        if (type === \"full\") return modifiedGroup;\n        return type === \"out\" ? filterCondition(!isContained) : filterCondition(isContained);\n      }).filter(function (group) {\n        return group;\n      });\n    }\n  }, {\n    key: \"_join\",\n    value: function _join(dfToJoin, columnNames, types) {\n      if (!(dfToJoin instanceof DataFrame)) throw new _errors.ArgumentTypeError(dfToJoin, \"DataFrame\");\n\n      var newColumns = _toConsumableArray(new Set([].concat(_toConsumableArray(this.listColumns()), _toConsumableArray(dfToJoin.listColumns()))));\n\n      var columns = Array.isArray(columnNames) ? columnNames : [columnNames];\n      var gdf = this.groupBy.apply(this, _toConsumableArray(columns));\n      var gdfToJoin = dfToJoin.groupBy.apply(dfToJoin, _toConsumableArray(columns));\n      return [this.__newInstance__([], newColumns)].concat(_toConsumableArray((0, _reusables.iter)([].concat(_toConsumableArray(types[0] ? this._joinByType(gdf, gdfToJoin, types[0], newColumns) : []), _toConsumableArray(types[1] ? this._joinByType(gdfToJoin, gdf, types[1], newColumns) : [])), function (group) {\n        return group.restructure(newColumns);\n      }))).reduce(function (p, n) {\n        return p.union(n);\n      }).dropDuplicates();\n    }\n  }, {\n    key: \"_cleanSavePath\",\n    value: function _cleanSavePath(path) {\n      return path.replace(\"file://\", \"/\");\n    }\n  }, {\n    key: \"toDSV\",\n    value: function toDSV() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return io.toDSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toCSV\",\n    value: function toCSV() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return io.toCSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toTSV\",\n    value: function toTSV() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return io.toTSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toPSV\",\n    value: function toPSV() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return io.toPSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toText\",\n    value: function toText() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return io.toText.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return io.toJSON.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toDict\",\n    value: function toDict() {\n      var _this3 = this;\n\n      return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(this.transpose().toArray()).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            index = _ref4[0],\n            column = _ref4[1];\n\n        return _defineProperty({}, _this3[_symbol.__columns__][index], column);\n      }))));\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray(columnName) {\n      return columnName ? Array.from(this).map(function (row) {\n        return row.get(columnName);\n      }) : Array.from(this).map(function (row) {\n        return row.toArray();\n      });\n    }\n  }, {\n    key: \"toCollection\",\n    value: function toCollection(ofRows) {\n      return ofRows ? Array.from(this) : Array.from(this).map(function (row) {\n        return row.toDict();\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var quiet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var makeRow = function makeRow(row) {\n        return \"| \".concat(row.map(function (column) {\n          var columnAsString = String(column);\n          return columnAsString.length > 9 ? columnAsString.substring(0, 6) + \"...\" : columnAsString + Array(10 - columnAsString.length).join(\" \");\n        }).join(\" | \"), \" |\");\n      };\n\n      var header = makeRow(this[_symbol.__columns__]);\n      var token = 0;\n      var toShow = [header, Array(header.length).join(\"-\")].concat(_toConsumableArray((0, _reusables.iter)(this[_symbol.__rows__], function (row) {\n        token++;\n        return makeRow(row.toArray());\n      }, function () {\n        return token >= rows;\n      }))).join(\"\\n\");\n\n      if (!quiet) {\n        console.log(toShow);\n      }\n\n      return toShow;\n    }\n  }, {\n    key: \"dim\",\n    value: function dim() {\n      return [this.count(), this[_symbol.__columns__].length];\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(tranposeColumnNames) {\n      var newColumns = [].concat(_toConsumableArray(tranposeColumnNames ? [\"rowNames\"] : []), _toConsumableArray(_toConsumableArray(Array(this.count()).keys()).reverse()));\n      var transposedRows = (0, _reusables.transpose)((tranposeColumnNames ? this.push(this[_symbol.__columns__]) : this).toArray());\n      return this.__newInstance__(transposedRows, newColumns.reverse()).restructure(newColumns);\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      return this[_symbol.__rows__].length;\n    }\n  }, {\n    key: \"countValue\",\n    value: function countValue(valueToCount) {\n      var columnName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[_symbol.__columns__][0];\n      return this.filter(function (row) {\n        return row.get(columnName) === valueToCount;\n      }).count();\n    }\n  }, {\n    key: \"push\",\n    value: function push() {\n      for (var _len8 = arguments.length, rows = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        rows[_key8] = arguments[_key8];\n      }\n\n      return this.union(new DataFrame(rows, this[_symbol.__columns__]));\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(value, replacement, columnNames) {\n      var _this4 = this;\n\n      var columns = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      var values = Array.isArray(value) ? value : [value];\n      return this.map(function (row) {\n        return (columns.length > 0 ? columns : _this4[_symbol.__columns__]).reduce(function (p, n) {\n          return values.includes(p.get(n)) ? p.set(n, replacement) : p;\n        }, row);\n      });\n    }\n  }, {\n    key: \"distinct\",\n    value: function distinct(columnName) {\n      return this.__newInstance__(_defineProperty({}, columnName, _toConsumableArray(new Set(this.toArray(columnName)))), [columnName]);\n    }\n  }, {\n    key: \"unique\",\n    value: function unique(columnName) {\n      return this.distinct(columnName);\n    }\n  }, {\n    key: \"listColumns\",\n    value: function listColumns() {\n      return _toConsumableArray(this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      for (var _len9 = arguments.length, columnNames = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        columnNames[_key9] = arguments[_key9];\n      }\n\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row) {\n        return row.select.apply(row, columnNames);\n      }), columnNames);\n    }\n  }, {\n    key: \"withColumn\",\n    value: function withColumn(columnName) {\n      var func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return undefined;\n      };\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row, index) {\n        return row.set(columnName, func(row, index));\n      }), this[_symbol.__columns__].includes(columnName) ? this[_symbol.__columns__] : [].concat(_toConsumableArray(this[_symbol.__columns__]), [columnName]));\n    }\n  }, {\n    key: \"restructure\",\n    value: function restructure(newColumnNames) {\n      return this.__newInstance__(this[_symbol.__rows__], newColumnNames);\n    }\n  }, {\n    key: \"renameAll\",\n    value: function renameAll(newColumnNames) {\n      if (newColumnNames.length !== this[_symbol.__columns__].length) {\n        throw new _errors.WrongSchemaError(newColumnNames, this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__(this.toArray(), newColumnNames);\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(columnName, replacement) {\n      var newColumnNames = this[_symbol.__columns__].map(function (column) {\n        return column === columnName ? replacement : column;\n      });\n\n      return this.renameAll(newColumnNames);\n    }\n  }, {\n    key: \"castAll\",\n    value: function castAll(typeFunctions) {\n      var _this5 = this;\n\n      if (typeFunctions.length !== this[_symbol.__columns__].length) {\n        throw new _errors.WrongSchemaError(typeFunctions, this[_symbol.__columns__]);\n      }\n\n      return this.map(function (row) {\n        return new _row.default(row.toArray().map(function (column, index) {\n          return typeFunctions[index](column);\n        }), _this5[_symbol.__columns__]);\n      });\n    }\n  }, {\n    key: \"cast\",\n    value: function cast(columnName, typeFunction) {\n      return this.withColumn(columnName, function (row) {\n        return typeFunction(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(columnName) {\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row) {\n        return row.delete(columnName);\n      }), this[_symbol.__columns__].filter(function (column) {\n        return column !== columnName;\n      }));\n    }\n  }, {\n    key: \"chain\",\n    value: function chain() {\n      for (var _len10 = arguments.length, funcs = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        funcs[_key10] = arguments[_key10];\n      }\n\n      return this.__newInstance__(_toConsumableArray(_reusables.chain.apply(void 0, [this[_symbol.__rows__]].concat(funcs))), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(condition) {\n      var func = _typeof(condition) === \"object\" ? function (row) {\n        return Object.entries(condition).map(function (_ref6) {\n          var _ref7 = _slicedToArray(_ref6, 2),\n              column = _ref7[0],\n              value = _ref7[1];\n\n          return Object.is(row.get(column), value);\n        }).reduce(function (p, n) {\n          return p && n;\n        });\n      } : condition;\n      var filteredRows = (0, _reusables.iter)(this[_symbol.__rows__], function (row, i) {\n        return func(row, i) ? row : false;\n      });\n      return this.__newInstance__(filteredRows, this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"where\",\n    value: function where(condition) {\n      return this.filter(condition);\n    }\n  }, {\n    key: \"find\",\n    value: function find(condition) {\n      return this.filter(condition)[_symbol.__rows__][0];\n    }\n  }, {\n    key: \"map\",\n    value: function map(func) {\n      return this.__newInstance__((0, _reusables.iter)(this[_symbol.__rows__], function (row, i) {\n        return func(row, i);\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(func, init) {\n      return typeof init === \"undefined\" ? this[_symbol.__rows__].reduce(function (p, n) {\n        return func(p, n);\n      }) : this[_symbol.__rows__].reduce(function (p, n) {\n        return func(p, n);\n      }, init);\n    }\n  }, {\n    key: \"reduceRight\",\n    value: function reduceRight(func, init) {\n      return typeof init === \"undefined\" ? this[_symbol.__rows__].reduceRight(function (p, n) {\n        return func(p, n);\n      }) : this[_symbol.__rows__].reduceRight(function (p, n) {\n        return func(p, n);\n      }, init);\n    }\n  }, {\n    key: \"dropDuplicates\",\n    value: function dropDuplicates() {\n      for (var _len11 = arguments.length, columnNames = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        columnNames[_key11] = arguments[_key11];\n      }\n\n      var groupCols = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      return this.groupBy.apply(this, _toConsumableArray(groupCols)).filter(function (row, i) {\n        return i === 0;\n      });\n    }\n  }, {\n    key: \"dropMissingValues\",\n    value: function dropMissingValues(columnNames) {\n      var cols = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      return this.filter(function (row) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = cols[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var col = _step2.value;\n\n            if ([NaN, undefined, null].includes(row.get(col))) {\n              return false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"fillMissingValues\",\n    value: function fillMissingValues(replacement, columnNames) {\n      return this.replace([NaN, undefined, null], replacement, columnNames);\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle() {\n      if (this.count() < 2) return this;\n      return this.__newInstance__(this.reduce(function (p, n) {\n        var index = Math.floor(Math.random() * (p.length - 1) + 1);\n        return Array.isArray(p) ? [].concat(_toConsumableArray(p.slice(index, p.length + 1)), [n], _toConsumableArray(p.slice(0, index))) : [p, n];\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"sample\",\n    value: function sample(percentage) {\n      var nRows = this.count() * percentage;\n      var token = 0;\n      return this.__newInstance__((0, _reusables.iter)(this.shuffle()[_symbol.__rows__], function (row) {\n        token++;\n        return row;\n      }, function () {\n        return token >= nRows;\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"bisect\",\n    value: function bisect(percentage) {\n      var nRows = this.count() * percentage;\n      var token = 0;\n      var restRows = [];\n      return [this.__newInstance__((0, _reusables.iter)(this.shuffle()[_symbol.__rows__], function (row) {\n        if (token < nRows) {\n          token++;\n          return row;\n        }\n\n        restRows.push(row);\n      }), this[_symbol.__columns__]), this.__newInstance__(restRows, this[_symbol.__columns__])];\n    }\n  }, {\n    key: \"groupBy\",\n    value: function groupBy() {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n\n      return (0, _group.groupBy)(this, args);\n    }\n  }, {\n    key: \"sortBy\",\n    value: function sortBy(columnNames) {\n      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var missingValuesPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"first\";\n\n      if (!Array.isArray(columnNames)) {\n        columnNames = [columnNames];\n      }\n\n      var _columnNames = columnNames;\n\n      var _missingValuesPosition = [\"first\", \"last\"].includes(missingValuesPosition) ? missingValuesPosition : \"first\";\n\n      var _checkMissingValue = function _checkMissingValue(v) {\n        return [NaN, null, undefined].includes(v);\n      };\n\n      var sortedRows = this[_symbol.__rows__].sort(function (p, n) {\n        return _columnNames.map(function (col) {\n          var _ref8 = [p.get(col), n.get(col)],\n              pValue = _ref8[0],\n              nValue = _ref8[1];\n\n          if (_checkMissingValue(pValue)) {\n            return _missingValuesPosition === \"last\" ? 1 : -1;\n          } else if (_checkMissingValue(nValue)) {\n            return _missingValuesPosition === \"last\" ? -1 : 1;\n          } else if (_typeof(pValue) !== _typeof(nValue)) {\n            throw new _errors.MixedTypeError([_typeof(pValue), _typeof(nValue)]);\n          } else if (pValue > nValue) {\n            return reverse ? -1 : 1;\n          } else if (pValue < nValue) {\n            return reverse ? 1 : -1;\n          }\n\n          return 0;\n        }).reduce(function (acc, curr) {\n          return acc || curr;\n        });\n      });\n\n      if (_columnNames.length > 1) {\n        var sortedRowsWithMissingValues = [];\n        var sortedRowsWithoutMissingValues = [];\n        sortedRows.forEach(function (row) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _columnNames[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var col = _step3.value;\n\n              if (_checkMissingValue(row.get(col))) {\n                sortedRowsWithMissingValues.push(row);\n                return;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          sortedRowsWithoutMissingValues.push(row);\n        });\n        return this.__newInstance__(missingValuesPosition === \"last\" ? sortedRowsWithoutMissingValues.concat(sortedRowsWithMissingValues) : sortedRowsWithMissingValues.concat(sortedRowsWithoutMissingValues), this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__(sortedRows, this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"union\",\n    value: function union(dfToUnion) {\n      if (!(dfToUnion instanceof DataFrame)) throw new _errors.ArgumentTypeError(dfToUnion, \"DataFrame\");\n\n      if (!(0, _reusables.arrayEqual)(this[_symbol.__columns__], dfToUnion[_symbol.__columns__])) {\n        throw new _errors.WrongSchemaError(dfToUnion[_symbol.__columns__], this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__([].concat(_toConsumableArray(this), _toConsumableArray(dfToUnion.restructure(this[_symbol.__columns__]))), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"join\",\n    value: function join(dfToJoin, columnNames) {\n      var _this6 = this;\n\n      var how = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"inner\";\n      var joinMethods = {\n        inner: function inner() {\n          return _this6.innerJoin(dfToJoin, columnNames);\n        },\n        full: function full() {\n          return _this6.fullJoin(dfToJoin, columnNames);\n        },\n        outer: function outer() {\n          return _this6.outerJoin(dfToJoin, columnNames);\n        },\n        left: function left() {\n          return _this6.leftJoin(dfToJoin, columnNames);\n        },\n        right: function right() {\n          return _this6.rightJoin(dfToJoin, columnNames);\n        }\n      };\n      return joinMethods[how]();\n    }\n  }, {\n    key: \"innerJoin\",\n    value: function innerJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"in\"]);\n    }\n  }, {\n    key: \"fullJoin\",\n    value: function fullJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"full\", \"full\"]);\n    }\n  }, {\n    key: \"outerJoin\",\n    value: function outerJoin(dfToJoin, columnNames) {\n      return this.fullJoin(dfToJoin, columnNames);\n    }\n  }, {\n    key: \"leftJoin\",\n    value: function leftJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"full\", \"in\"]);\n    }\n  }, {\n    key: \"rightJoin\",\n    value: function rightJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"in\", \"full\"]);\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(dfToDiff, columnNames) {\n      return this._join(dfToDiff, columnNames, [\"out\", \"out\"]);\n    }\n  }, {\n    key: \"head\",\n    value: function head() {\n      var nRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.slice(0, nRows);\n    }\n  }, {\n    key: \"tail\",\n    value: function tail() {\n      var nRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.slice(-nRows);\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(startIndex, endIndex) {\n      return this.__newInstance__(this[_symbol.__rows__].slice(startIndex || undefined, endIndex || undefined), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"getRow\",\n    value: function getRow(index) {\n      return this[_symbol.__rows__][index];\n    }\n  }, {\n    key: \"setRow\",\n    value: function setRow(index) {\n      var func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (row) {\n        return row;\n      };\n      var newRows = Array.from(this[_symbol.__rows__]);\n      newRows[index] = func(newRows[index]);\n      return this.__newInstance__(newRows, this[_symbol.__columns__]);\n    }\n  }]);\n\n  return DataFrame;\n}();\n\nDataFrame.defaultModules = [];\nvar _default = DataFrame;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/dataframe-js/lib/dataframe.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}}],"sources":{"node_modules/dataframe-js/lib/dataframe.js":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.join\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.array.reduce-right\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.date.to-json\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.entries\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor\");\n\nrequire(\"core-js/modules/es.object.is\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.set\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.replace\");\n\nrequire(\"core-js/modules/esnext.set.add-all\");\n\nrequire(\"core-js/modules/esnext.set.delete-all\");\n\nrequire(\"core-js/modules/esnext.set.difference\");\n\nrequire(\"core-js/modules/esnext.set.every\");\n\nrequire(\"core-js/modules/esnext.set.filter\");\n\nrequire(\"core-js/modules/esnext.set.find\");\n\nrequire(\"core-js/modules/esnext.set.intersection\");\n\nrequire(\"core-js/modules/esnext.set.is-disjoint-from\");\n\nrequire(\"core-js/modules/esnext.set.is-subset-of\");\n\nrequire(\"core-js/modules/esnext.set.is-superset-of\");\n\nrequire(\"core-js/modules/esnext.set.join\");\n\nrequire(\"core-js/modules/esnext.set.map\");\n\nrequire(\"core-js/modules/esnext.set.reduce\");\n\nrequire(\"core-js/modules/esnext.set.some\");\n\nrequire(\"core-js/modules/esnext.set.symmetric-difference\");\n\nrequire(\"core-js/modules/esnext.set.union\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _reusables = require(\"./reusables\");\n\nvar _errors = require(\"./errors\");\n\nvar _row = _interopRequireDefault(require(\"./row\"));\n\nvar _group = require(\"./group\");\n\nvar _symbol = require(\"./symbol\");\n\nvar io = _interopRequireWildcard(require(\"./io\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataFrame = function () {\n  _createClass(DataFrame, null, [{\n    key: \"setDefaultModules\",\n    value: function setDefaultModules() {\n      for (var _len = arguments.length, defaultModules = new Array(_len), _key = 0; _key < _len; _key++) {\n        defaultModules[_key] = arguments[_key];\n      }\n\n      DataFrame.defaultModules = defaultModules;\n    }\n  }, {\n    key: \"fromDSV\",\n    value: function fromDSV() {\n      return io.fromDSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromText\",\n    value: function fromText() {\n      return io.fromText.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromCSV\",\n    value: function fromCSV() {\n      return io.fromCSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromTSV\",\n    value: function fromTSV() {\n      return io.fromTSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromPSV\",\n    value: function fromPSV() {\n      return io.fromPSV.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON() {\n      return io.fromJSON.apply(io, arguments).then(function (content) {\n        return new DataFrame(content);\n      });\n    }\n  }]);\n\n  function DataFrame(data, columns) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, DataFrame);\n\n    var _this$_build = this._build(data, columns);\n\n    var _this$_build2 = _slicedToArray(_this$_build, 2);\n\n    this[_symbol.__rows__] = _this$_build2[0];\n    this[_symbol.__columns__] = _this$_build2[1];\n    this.options = options;\n    this.options.modules = [].concat(_toConsumableArray(DataFrame.defaultModules), _toConsumableArray(this.options.modules || []));\n    Object.assign.apply(Object, [this].concat(_toConsumableArray(this.__instanciateModules__(this.options.modules))));\n  }\n\n  _createClass(DataFrame, [{\n    key: Symbol.iterator,\n    value: regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, row;\n\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[_symbol.__rows__][Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              row = _step.value;\n              _context.next = 9;\n              return row;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n  }, {\n    key: \"_columnsAreEquals\",\n    value: function _columnsAreEquals(columns) {\n      var columns2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[_symbol.__columns__];\n\n      for (var _i2 = 0, _Object$keys = Object.keys(columns); _i2 < _Object$keys.length; _i2++) {\n        var key = _Object$keys[_i2];\n        if (columns[key] !== columns2[key]) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"__newInstance__\",\n    value: function __newInstance__(data, columns) {\n      if (!this._columnsAreEquals(columns) || !(data[0] instanceof _row.default)) {\n        return new DataFrame(data, columns, this.options);\n      }\n\n      var firstRowColumns = Object.keys(data[0].toDict());\n\n      if (!(0, _reusables.arrayEqual)(firstRowColumns, this[_symbol.__columns__], true)) {\n        return new DataFrame(data, firstRowColumns, this.options);\n      }\n\n      var newInstance = new DataFrame([], [], this.options);\n      newInstance[_symbol.__rows__] = _toConsumableArray(data);\n      newInstance[_symbol.__columns__] = _toConsumableArray(columns);\n      return newInstance;\n    }\n  }, {\n    key: \"__instanciateModules__\",\n    value: function __instanciateModules__(modules) {\n      var _this = this;\n\n      var df = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      return modules.map(function (Plugin) {\n        var pluginInstance = new Plugin(df ? df : _this);\n        return _defineProperty({}, pluginInstance.name, pluginInstance);\n      });\n    }\n  }, {\n    key: \"_build\",\n    value: function _build(data, columns) {\n      if (data instanceof DataFrame) {\n        return this._fromArray(Array.from(data[_symbol.__rows__]), columns || data[_symbol.__columns__]);\n      }\n\n      if (data instanceof Array && data.length > 0) {\n        return this._fromArray(data, columns || Array.from(new Set(data.slice(0, 10).concat(data.slice(-10, -1)).map(function (row) {\n          return Object.keys(row);\n        }).reduce(function (p, n) {\n          return p.concat(n);\n        }))));\n      }\n\n      if (data instanceof Array && data.length === 0) {\n        return this._fromArray(data, columns ? columns : []);\n      }\n\n      if (data instanceof Object) {\n        return this._fromDict(data, columns || Object.keys(data));\n      }\n\n      throw new _errors.ArgumentTypeError(data, \"DataFrame | Array | Object\");\n    }\n  }, {\n    key: \"_fromDict\",\n    value: function _fromDict(dict, columns) {\n      return [(0, _reusables.transpose)(Object.values(dict)).map(function (row) {\n        return new _row.default(row, columns);\n      }), columns];\n    }\n  }, {\n    key: \"_fromArray\",\n    value: function _fromArray(array, columns) {\n      return [array.map(function (row) {\n        return new _row.default(row, columns);\n      }), columns];\n    }\n  }, {\n    key: \"_joinByType\",\n    value: function _joinByType(gdf1, gdf2, type, newColumns) {\n      var _this2 = this;\n\n      var gdf2Hashs = gdf2.listHashs();\n      return gdf1.toCollection().map(function (_ref2) {\n        var group = _ref2.group,\n            hash = _ref2.hash;\n        var isContained = gdf2Hashs.includes(hash);\n        var modifiedGroup = group;\n\n        if (gdf2.get(hash)) {\n          var gdf2Collection = gdf2.get(hash).group.toCollection();\n          var combinedGroup = group.toCollection().map(function (row) {\n            return gdf2Collection.map(function (row2) {\n              return Object.assign({}, row2, row);\n            });\n          }).reduce(function (p, n) {\n            return [].concat(_toConsumableArray(p), _toConsumableArray(n));\n          }, []);\n          modifiedGroup = _this2.__newInstance__(combinedGroup, newColumns);\n        }\n\n        var filterCondition = function filterCondition(bool) {\n          return bool ? modifiedGroup : false;\n        };\n\n        if (type === \"full\") return modifiedGroup;\n        return type === \"out\" ? filterCondition(!isContained) : filterCondition(isContained);\n      }).filter(function (group) {\n        return group;\n      });\n    }\n  }, {\n    key: \"_join\",\n    value: function _join(dfToJoin, columnNames, types) {\n      if (!(dfToJoin instanceof DataFrame)) throw new _errors.ArgumentTypeError(dfToJoin, \"DataFrame\");\n\n      var newColumns = _toConsumableArray(new Set([].concat(_toConsumableArray(this.listColumns()), _toConsumableArray(dfToJoin.listColumns()))));\n\n      var columns = Array.isArray(columnNames) ? columnNames : [columnNames];\n      var gdf = this.groupBy.apply(this, _toConsumableArray(columns));\n      var gdfToJoin = dfToJoin.groupBy.apply(dfToJoin, _toConsumableArray(columns));\n      return [this.__newInstance__([], newColumns)].concat(_toConsumableArray((0, _reusables.iter)([].concat(_toConsumableArray(types[0] ? this._joinByType(gdf, gdfToJoin, types[0], newColumns) : []), _toConsumableArray(types[1] ? this._joinByType(gdfToJoin, gdf, types[1], newColumns) : [])), function (group) {\n        return group.restructure(newColumns);\n      }))).reduce(function (p, n) {\n        return p.union(n);\n      }).dropDuplicates();\n    }\n  }, {\n    key: \"_cleanSavePath\",\n    value: function _cleanSavePath(path) {\n      return path.replace(\"file://\", \"/\");\n    }\n  }, {\n    key: \"toDSV\",\n    value: function toDSV() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return io.toDSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toCSV\",\n    value: function toCSV() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return io.toCSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toTSV\",\n    value: function toTSV() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return io.toTSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toPSV\",\n    value: function toPSV() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return io.toPSV.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toText\",\n    value: function toText() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return io.toText.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return io.toJSON.apply(io, [this].concat(args));\n    }\n  }, {\n    key: \"toDict\",\n    value: function toDict() {\n      var _this3 = this;\n\n      return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(this.transpose().toArray()).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            index = _ref4[0],\n            column = _ref4[1];\n\n        return _defineProperty({}, _this3[_symbol.__columns__][index], column);\n      }))));\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray(columnName) {\n      return columnName ? Array.from(this).map(function (row) {\n        return row.get(columnName);\n      }) : Array.from(this).map(function (row) {\n        return row.toArray();\n      });\n    }\n  }, {\n    key: \"toCollection\",\n    value: function toCollection(ofRows) {\n      return ofRows ? Array.from(this) : Array.from(this).map(function (row) {\n        return row.toDict();\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var quiet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var makeRow = function makeRow(row) {\n        return \"| \".concat(row.map(function (column) {\n          var columnAsString = String(column);\n          return columnAsString.length > 9 ? columnAsString.substring(0, 6) + \"...\" : columnAsString + Array(10 - columnAsString.length).join(\" \");\n        }).join(\" | \"), \" |\");\n      };\n\n      var header = makeRow(this[_symbol.__columns__]);\n      var token = 0;\n      var toShow = [header, Array(header.length).join(\"-\")].concat(_toConsumableArray((0, _reusables.iter)(this[_symbol.__rows__], function (row) {\n        token++;\n        return makeRow(row.toArray());\n      }, function () {\n        return token >= rows;\n      }))).join(\"\\n\");\n\n      if (!quiet) {\n        console.log(toShow);\n      }\n\n      return toShow;\n    }\n  }, {\n    key: \"dim\",\n    value: function dim() {\n      return [this.count(), this[_symbol.__columns__].length];\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(tranposeColumnNames) {\n      var newColumns = [].concat(_toConsumableArray(tranposeColumnNames ? [\"rowNames\"] : []), _toConsumableArray(_toConsumableArray(Array(this.count()).keys()).reverse()));\n      var transposedRows = (0, _reusables.transpose)((tranposeColumnNames ? this.push(this[_symbol.__columns__]) : this).toArray());\n      return this.__newInstance__(transposedRows, newColumns.reverse()).restructure(newColumns);\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      return this[_symbol.__rows__].length;\n    }\n  }, {\n    key: \"countValue\",\n    value: function countValue(valueToCount) {\n      var columnName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[_symbol.__columns__][0];\n      return this.filter(function (row) {\n        return row.get(columnName) === valueToCount;\n      }).count();\n    }\n  }, {\n    key: \"push\",\n    value: function push() {\n      for (var _len8 = arguments.length, rows = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        rows[_key8] = arguments[_key8];\n      }\n\n      return this.union(new DataFrame(rows, this[_symbol.__columns__]));\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(value, replacement, columnNames) {\n      var _this4 = this;\n\n      var columns = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      var values = Array.isArray(value) ? value : [value];\n      return this.map(function (row) {\n        return (columns.length > 0 ? columns : _this4[_symbol.__columns__]).reduce(function (p, n) {\n          return values.includes(p.get(n)) ? p.set(n, replacement) : p;\n        }, row);\n      });\n    }\n  }, {\n    key: \"distinct\",\n    value: function distinct(columnName) {\n      return this.__newInstance__(_defineProperty({}, columnName, _toConsumableArray(new Set(this.toArray(columnName)))), [columnName]);\n    }\n  }, {\n    key: \"unique\",\n    value: function unique(columnName) {\n      return this.distinct(columnName);\n    }\n  }, {\n    key: \"listColumns\",\n    value: function listColumns() {\n      return _toConsumableArray(this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      for (var _len9 = arguments.length, columnNames = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        columnNames[_key9] = arguments[_key9];\n      }\n\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row) {\n        return row.select.apply(row, columnNames);\n      }), columnNames);\n    }\n  }, {\n    key: \"withColumn\",\n    value: function withColumn(columnName) {\n      var func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return undefined;\n      };\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row, index) {\n        return row.set(columnName, func(row, index));\n      }), this[_symbol.__columns__].includes(columnName) ? this[_symbol.__columns__] : [].concat(_toConsumableArray(this[_symbol.__columns__]), [columnName]));\n    }\n  }, {\n    key: \"restructure\",\n    value: function restructure(newColumnNames) {\n      return this.__newInstance__(this[_symbol.__rows__], newColumnNames);\n    }\n  }, {\n    key: \"renameAll\",\n    value: function renameAll(newColumnNames) {\n      if (newColumnNames.length !== this[_symbol.__columns__].length) {\n        throw new _errors.WrongSchemaError(newColumnNames, this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__(this.toArray(), newColumnNames);\n    }\n  }, {\n    key: \"rename\",\n    value: function rename(columnName, replacement) {\n      var newColumnNames = this[_symbol.__columns__].map(function (column) {\n        return column === columnName ? replacement : column;\n      });\n\n      return this.renameAll(newColumnNames);\n    }\n  }, {\n    key: \"castAll\",\n    value: function castAll(typeFunctions) {\n      var _this5 = this;\n\n      if (typeFunctions.length !== this[_symbol.__columns__].length) {\n        throw new _errors.WrongSchemaError(typeFunctions, this[_symbol.__columns__]);\n      }\n\n      return this.map(function (row) {\n        return new _row.default(row.toArray().map(function (column, index) {\n          return typeFunctions[index](column);\n        }), _this5[_symbol.__columns__]);\n      });\n    }\n  }, {\n    key: \"cast\",\n    value: function cast(columnName, typeFunction) {\n      return this.withColumn(columnName, function (row) {\n        return typeFunction(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(columnName) {\n      return this.__newInstance__(this[_symbol.__rows__].map(function (row) {\n        return row.delete(columnName);\n      }), this[_symbol.__columns__].filter(function (column) {\n        return column !== columnName;\n      }));\n    }\n  }, {\n    key: \"chain\",\n    value: function chain() {\n      for (var _len10 = arguments.length, funcs = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        funcs[_key10] = arguments[_key10];\n      }\n\n      return this.__newInstance__(_toConsumableArray(_reusables.chain.apply(void 0, [this[_symbol.__rows__]].concat(funcs))), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(condition) {\n      var func = _typeof(condition) === \"object\" ? function (row) {\n        return Object.entries(condition).map(function (_ref6) {\n          var _ref7 = _slicedToArray(_ref6, 2),\n              column = _ref7[0],\n              value = _ref7[1];\n\n          return Object.is(row.get(column), value);\n        }).reduce(function (p, n) {\n          return p && n;\n        });\n      } : condition;\n      var filteredRows = (0, _reusables.iter)(this[_symbol.__rows__], function (row, i) {\n        return func(row, i) ? row : false;\n      });\n      return this.__newInstance__(filteredRows, this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"where\",\n    value: function where(condition) {\n      return this.filter(condition);\n    }\n  }, {\n    key: \"find\",\n    value: function find(condition) {\n      return this.filter(condition)[_symbol.__rows__][0];\n    }\n  }, {\n    key: \"map\",\n    value: function map(func) {\n      return this.__newInstance__((0, _reusables.iter)(this[_symbol.__rows__], function (row, i) {\n        return func(row, i);\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(func, init) {\n      return typeof init === \"undefined\" ? this[_symbol.__rows__].reduce(function (p, n) {\n        return func(p, n);\n      }) : this[_symbol.__rows__].reduce(function (p, n) {\n        return func(p, n);\n      }, init);\n    }\n  }, {\n    key: \"reduceRight\",\n    value: function reduceRight(func, init) {\n      return typeof init === \"undefined\" ? this[_symbol.__rows__].reduceRight(function (p, n) {\n        return func(p, n);\n      }) : this[_symbol.__rows__].reduceRight(function (p, n) {\n        return func(p, n);\n      }, init);\n    }\n  }, {\n    key: \"dropDuplicates\",\n    value: function dropDuplicates() {\n      for (var _len11 = arguments.length, columnNames = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        columnNames[_key11] = arguments[_key11];\n      }\n\n      var groupCols = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      return this.groupBy.apply(this, _toConsumableArray(groupCols)).filter(function (row, i) {\n        return i === 0;\n      });\n    }\n  }, {\n    key: \"dropMissingValues\",\n    value: function dropMissingValues(columnNames) {\n      var cols = columnNames && columnNames.length > 0 ? columnNames : this[_symbol.__columns__];\n      return this.filter(function (row) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = cols[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var col = _step2.value;\n\n            if ([NaN, undefined, null].includes(row.get(col))) {\n              return false;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"fillMissingValues\",\n    value: function fillMissingValues(replacement, columnNames) {\n      return this.replace([NaN, undefined, null], replacement, columnNames);\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle() {\n      if (this.count() < 2) return this;\n      return this.__newInstance__(this.reduce(function (p, n) {\n        var index = Math.floor(Math.random() * (p.length - 1) + 1);\n        return Array.isArray(p) ? [].concat(_toConsumableArray(p.slice(index, p.length + 1)), [n], _toConsumableArray(p.slice(0, index))) : [p, n];\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"sample\",\n    value: function sample(percentage) {\n      var nRows = this.count() * percentage;\n      var token = 0;\n      return this.__newInstance__((0, _reusables.iter)(this.shuffle()[_symbol.__rows__], function (row) {\n        token++;\n        return row;\n      }, function () {\n        return token >= nRows;\n      }), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"bisect\",\n    value: function bisect(percentage) {\n      var nRows = this.count() * percentage;\n      var token = 0;\n      var restRows = [];\n      return [this.__newInstance__((0, _reusables.iter)(this.shuffle()[_symbol.__rows__], function (row) {\n        if (token < nRows) {\n          token++;\n          return row;\n        }\n\n        restRows.push(row);\n      }), this[_symbol.__columns__]), this.__newInstance__(restRows, this[_symbol.__columns__])];\n    }\n  }, {\n    key: \"groupBy\",\n    value: function groupBy() {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n\n      return (0, _group.groupBy)(this, args);\n    }\n  }, {\n    key: \"sortBy\",\n    value: function sortBy(columnNames) {\n      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var missingValuesPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"first\";\n\n      if (!Array.isArray(columnNames)) {\n        columnNames = [columnNames];\n      }\n\n      var _columnNames = columnNames;\n\n      var _missingValuesPosition = [\"first\", \"last\"].includes(missingValuesPosition) ? missingValuesPosition : \"first\";\n\n      var _checkMissingValue = function _checkMissingValue(v) {\n        return [NaN, null, undefined].includes(v);\n      };\n\n      var sortedRows = this[_symbol.__rows__].sort(function (p, n) {\n        return _columnNames.map(function (col) {\n          var _ref8 = [p.get(col), n.get(col)],\n              pValue = _ref8[0],\n              nValue = _ref8[1];\n\n          if (_checkMissingValue(pValue)) {\n            return _missingValuesPosition === \"last\" ? 1 : -1;\n          } else if (_checkMissingValue(nValue)) {\n            return _missingValuesPosition === \"last\" ? -1 : 1;\n          } else if (_typeof(pValue) !== _typeof(nValue)) {\n            throw new _errors.MixedTypeError([_typeof(pValue), _typeof(nValue)]);\n          } else if (pValue > nValue) {\n            return reverse ? -1 : 1;\n          } else if (pValue < nValue) {\n            return reverse ? 1 : -1;\n          }\n\n          return 0;\n        }).reduce(function (acc, curr) {\n          return acc || curr;\n        });\n      });\n\n      if (_columnNames.length > 1) {\n        var sortedRowsWithMissingValues = [];\n        var sortedRowsWithoutMissingValues = [];\n        sortedRows.forEach(function (row) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _columnNames[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var col = _step3.value;\n\n              if (_checkMissingValue(row.get(col))) {\n                sortedRowsWithMissingValues.push(row);\n                return;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          sortedRowsWithoutMissingValues.push(row);\n        });\n        return this.__newInstance__(missingValuesPosition === \"last\" ? sortedRowsWithoutMissingValues.concat(sortedRowsWithMissingValues) : sortedRowsWithMissingValues.concat(sortedRowsWithoutMissingValues), this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__(sortedRows, this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"union\",\n    value: function union(dfToUnion) {\n      if (!(dfToUnion instanceof DataFrame)) throw new _errors.ArgumentTypeError(dfToUnion, \"DataFrame\");\n\n      if (!(0, _reusables.arrayEqual)(this[_symbol.__columns__], dfToUnion[_symbol.__columns__])) {\n        throw new _errors.WrongSchemaError(dfToUnion[_symbol.__columns__], this[_symbol.__columns__]);\n      }\n\n      return this.__newInstance__([].concat(_toConsumableArray(this), _toConsumableArray(dfToUnion.restructure(this[_symbol.__columns__]))), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"join\",\n    value: function join(dfToJoin, columnNames) {\n      var _this6 = this;\n\n      var how = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"inner\";\n      var joinMethods = {\n        inner: function inner() {\n          return _this6.innerJoin(dfToJoin, columnNames);\n        },\n        full: function full() {\n          return _this6.fullJoin(dfToJoin, columnNames);\n        },\n        outer: function outer() {\n          return _this6.outerJoin(dfToJoin, columnNames);\n        },\n        left: function left() {\n          return _this6.leftJoin(dfToJoin, columnNames);\n        },\n        right: function right() {\n          return _this6.rightJoin(dfToJoin, columnNames);\n        }\n      };\n      return joinMethods[how]();\n    }\n  }, {\n    key: \"innerJoin\",\n    value: function innerJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"in\"]);\n    }\n  }, {\n    key: \"fullJoin\",\n    value: function fullJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"full\", \"full\"]);\n    }\n  }, {\n    key: \"outerJoin\",\n    value: function outerJoin(dfToJoin, columnNames) {\n      return this.fullJoin(dfToJoin, columnNames);\n    }\n  }, {\n    key: \"leftJoin\",\n    value: function leftJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"full\", \"in\"]);\n    }\n  }, {\n    key: \"rightJoin\",\n    value: function rightJoin(dfToJoin, columnNames) {\n      return this._join(dfToJoin, columnNames, [\"in\", \"full\"]);\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(dfToDiff, columnNames) {\n      return this._join(dfToDiff, columnNames, [\"out\", \"out\"]);\n    }\n  }, {\n    key: \"head\",\n    value: function head() {\n      var nRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.slice(0, nRows);\n    }\n  }, {\n    key: \"tail\",\n    value: function tail() {\n      var nRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this.slice(-nRows);\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(startIndex, endIndex) {\n      return this.__newInstance__(this[_symbol.__rows__].slice(startIndex || undefined, endIndex || undefined), this[_symbol.__columns__]);\n    }\n  }, {\n    key: \"getRow\",\n    value: function getRow(index) {\n      return this[_symbol.__rows__][index];\n    }\n  }, {\n    key: \"setRow\",\n    value: function setRow(index) {\n      var func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (row) {\n        return row;\n      };\n      var newRows = Array.from(this[_symbol.__rows__]);\n      newRows[index] = func(newRows[index]);\n      return this.__newInstance__(newRows, this[_symbol.__columns__]);\n    }\n  }]);\n\n  return DataFrame;\n}();\n\nDataFrame.defaultModules = [];\nvar _default = DataFrame;\nexports.default = _default;"},"lineCount":1022}},"error":null,"hash":"48c20251be66775fef05049df60707c1","cacheData":{"env":{}}}