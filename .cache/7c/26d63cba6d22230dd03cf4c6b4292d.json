{"id":"node_modules/readable-web-to-node-stream/lib/index.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/readable-web-to-node-stream/package.json","includedInParent":true,"mtime":499162500000},{"name":"stream","loc":{"line":3,"column":25},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/readable-web-to-node-stream/lib/index.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/stream-browserify/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n/**\n * Converts a Web-API stream into Node stream.Readable class\n * Node stream readable: https://nodejs.org/api/stream.html#stream_readable_streams\n * Web API readable-stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n * Node readable stream: https://nodejs.org/api/stream.html#stream_readable_streams\n */\nclass ReadableWebToNodeStream extends stream_1.Readable {\n    /**\n     *\n     * @param stream Readable​Stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n     */\n    constructor(stream) {\n        super();\n        this.bytesRead = 0;\n        this.released = false;\n        this.reader = stream.getReader();\n    }\n    /**\n     * Implementation of readable._read(size).\n     * When readable._read() is called, if data is available from the resource,\n     * the implementation should begin pushing that data into the read queue\n     * https://nodejs.org/api/stream.html#stream_readable_read_size_1\n     */\n    async _read() {\n        // Should start pushing data into the queue\n        // Read data from the underlying Web-API-readable-stream\n        if (this.released) {\n            this.push(null); // Signal EOF\n            return;\n        }\n        this.pendingRead = this.reader.read();\n        const data = await this.pendingRead;\n        // clear the promise before pushing pushing new data to the queue and allow sequential calls to _read()\n        delete this.pendingRead;\n        if (data.done || this.released) {\n            this.push(null); // Signal EOF\n        }\n        else {\n            this.bytesRead += data.value.length;\n            this.push(data.value); // Push new data to the queue\n        }\n    }\n    /**\n     * If there is no unresolved read call to Web-API Readable​Stream immediately returns;\n     * otherwise will wait until the read is resolved.\n     */\n    async waitForReadToComplete() {\n        if (this.pendingRead) {\n            await this.pendingRead;\n        }\n    }\n    /**\n     * Close wrapper\n     */\n    async close() {\n        await this.syncAndRelease();\n    }\n    async syncAndRelease() {\n        this.released = true;\n        await this.waitForReadToComplete();\n        await this.reader.releaseLock();\n    }\n}\nexports.ReadableWebToNodeStream = ReadableWebToNodeStream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/readable-web-to-node-stream/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/readable-web-to-node-stream/lib/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n/**\n * Converts a Web-API stream into Node stream.Readable class\n * Node stream readable: https://nodejs.org/api/stream.html#stream_readable_streams\n * Web API readable-stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n * Node readable stream: https://nodejs.org/api/stream.html#stream_readable_streams\n */\nclass ReadableWebToNodeStream extends stream_1.Readable {\n    /**\n     *\n     * @param stream Readable​Stream: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n     */\n    constructor(stream) {\n        super();\n        this.bytesRead = 0;\n        this.released = false;\n        this.reader = stream.getReader();\n    }\n    /**\n     * Implementation of readable._read(size).\n     * When readable._read() is called, if data is available from the resource,\n     * the implementation should begin pushing that data into the read queue\n     * https://nodejs.org/api/stream.html#stream_readable_read_size_1\n     */\n    async _read() {\n        // Should start pushing data into the queue\n        // Read data from the underlying Web-API-readable-stream\n        if (this.released) {\n            this.push(null); // Signal EOF\n            return;\n        }\n        this.pendingRead = this.reader.read();\n        const data = await this.pendingRead;\n        // clear the promise before pushing pushing new data to the queue and allow sequential calls to _read()\n        delete this.pendingRead;\n        if (data.done || this.released) {\n            this.push(null); // Signal EOF\n        }\n        else {\n            this.bytesRead += data.value.length;\n            this.push(data.value); // Push new data to the queue\n        }\n    }\n    /**\n     * If there is no unresolved read call to Web-API Readable​Stream immediately returns;\n     * otherwise will wait until the read is resolved.\n     */\n    async waitForReadToComplete() {\n        if (this.pendingRead) {\n            await this.pendingRead;\n        }\n    }\n    /**\n     * Close wrapper\n     */\n    async close() {\n        await this.syncAndRelease();\n    }\n    async syncAndRelease() {\n        this.released = true;\n        await this.waitForReadToComplete();\n        await this.reader.releaseLock();\n    }\n}\nexports.ReadableWebToNodeStream = ReadableWebToNodeStream;\n"},"lineCount":68}},"error":null,"hash":"961f5cbed8cd2eced232e795f158d003","cacheData":{"env":{}}}