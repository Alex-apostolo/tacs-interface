{"id":"node_modules/mathjs/es/expression/Parser.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615768440134},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"../utils/factory","loc":{"line":1,"column":24},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/expression/Parser.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/utils/factory.js"},{"name":"../utils/object","loc":{"line":2,"column":39},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/expression/Parser.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/utils/object.js"},{"name":"../utils/customs","loc":{"line":3,"column":49},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/expression/Parser.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/es/utils/customs.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createParserClass = void 0;\n\nvar _factory = require(\"../utils/factory\");\n\nvar _object = require(\"../utils/object\");\n\nvar _customs = require(\"../utils/customs\");\n\nvar name = 'Parser';\nvar dependencies = ['parse'];\nvar createParserClass =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, function (_ref) {\n  var parse = _ref.parse;\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    const result = parser.evaluate(expr)  // evaluate an expression\n   *    const value = parser.get(name)        // retrieve a variable from the parser\n   *    const values = parser.getAll()        // retrieve all defined variables\n   *    parser.set(name, value)               // set a variable in the parser\n   *    parser.remove(name)                   // clear a variable from the\n   *                                          // parsers scope\n   *    parser.clear()                        // clear the parsers scope\n   *\n   * Example usage:\n   *    const parser = new Parser()\n   *    // Note: there is a convenience method which can be used instead:\n   *    // const parser = new math.parser()\n   *\n   *    // evaluate expressions\n   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *    parser.evaluate('sqrt(-4)')               // 2i\n   *    parser.evaluate('2 inch in cm')           // 5.08 cm\n   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.evaluate('x = 7 / 2')              // 3.5\n   *    parser.evaluate('x + 3')                  // 6.5\n   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)\n   *    parser.evaluate('f(2, 3)')                // 8\n   *\n   *    // get and set variables and functions\n   *    const x = parser.get('x')                 // 7\n   *    const f = parser.get('f')                 // function\n   *    const g = f(3, 2)                         // 9\n   *    parser.set('h', 500)\n   *    const i = parser.evaluate('h / 2')        // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!'\n   *    })\n   *    parser.evaluate('hello(\"user\")')          // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear()\n   *\n   */\n\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.scope = {};\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Parser.prototype.type = 'Parser';\n  Parser.prototype.isParser = true;\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n\n  Parser.prototype.evaluate = function (expr) {\n    // TODO: validate arguments\n    return parse(expr).compile().evaluate(this.scope);\n  };\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {string} name\n   * @return {* | undefined} value\n   */\n\n\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return name in this.scope ? (0, _customs.getSafeProperty)(this.scope, name) : undefined;\n  };\n  /**\n   * Get a map with all defined variables\n   * @return {Object} values\n   */\n\n\n  Parser.prototype.getAll = function () {\n    return (0, _object.extend)({}, this.scope);\n  };\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {string} name\n   * @param {* | undefined} value\n   */\n\n\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return (0, _customs.setSafeProperty)(this.scope, name, value);\n  };\n  /**\n   * Remove a variable from the parsers scope\n   * @param {string} name\n   */\n\n\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n  /**\n   * Clear the scope with variables and functions\n   */\n\n\n  Parser.prototype.clear = function () {\n    for (var _name in this.scope) {\n      if ((0, _object.hasOwnProperty)(this.scope, _name)) {\n        delete this.scope[_name];\n      }\n    }\n  };\n\n  return Parser;\n}, {\n  isClass: true\n});\nexports.createParserClass = createParserClass;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0}},{"name":"name","generated":{"line":14,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":4}},{"generated":{"line":14,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":8}},{"generated":{"line":14,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":11}},{"generated":{"line":14,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":0}},{"name":"dependencies","generated":{"line":15,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":16}},{"generated":{"line":15,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":20}},{"generated":{"line":15,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":7}},{"name":"createParserClass","generated":{"line":16,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":28}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":31}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":46}},{"name":"name","generated":{"line":18,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":54}},{"generated":{"line":18,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":46}},{"name":"dependencies","generated":{"line":18,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":60}},{"generated":{"line":18,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":46}},{"generated":{"line":18,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":74}},{"name":"_ref","generated":{"line":18,"column":52},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":84}},{"generated":{"line":18,"column":56},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":74}},{"generated":{"line":18,"column":58},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":90}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":2}},{"name":"parse","generated":{"line":19,"column":6},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":6}},{"generated":{"line":19,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":11}},{"name":"_ref","generated":{"line":19,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":14}},{"generated":{"line":19,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":18}},{"name":"parse","generated":{"line":19,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":19}},{"generated":{"line":19,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":2}},{"generated":{"line":69,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":57,"column":2}},{"name":"Parser","generated":{"line":69,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":57,"column":11}},{"generated":{"line":69,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":57,"column":2}},{"generated":{"line":69,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":57,"column":20}},{"generated":{"line":70,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":4}},{"generated":{"line":70,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":8}},{"generated":{"line":70,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":10}},{"name":"Parser","generated":{"line":70,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":26}},{"generated":{"line":70,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":8}},{"generated":{"line":70,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":4}},{"generated":{"line":70,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":58,"column":35}},{"generated":{"line":71,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":6}},{"generated":{"line":71,"column":12},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":12}},{"name":"SyntaxError","generated":{"line":71,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":16}},{"generated":{"line":71,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":12}},{"generated":{"line":71,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":28}},{"generated":{"line":71,"column":78},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":12}},{"generated":{"line":71,"column":79},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":59,"column":6}},{"generated":{"line":72,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":60,"column":5}},{"generated":{"line":74,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":4}},{"name":"scope","generated":{"line":74,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":9}},{"generated":{"line":74,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":4}},{"generated":{"line":74,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":17}},{"generated":{"line":74,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":4}},{"generated":{"line":75,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":63,"column":3}},{"generated":{"line":76,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":64,"column":2}},{"name":"Parser","generated":{"line":81,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":2}},{"name":"Parser","generated":{"line":81,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":2}},{"generated":{"line":81,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":8}},{"name":"prototype","generated":{"line":81,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":9}},{"generated":{"line":81,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":2}},{"name":"type","generated":{"line":81,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":19}},{"generated":{"line":81,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":2}},{"generated":{"line":81,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":26}},{"generated":{"line":81,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":69,"column":2}},{"name":"Parser","generated":{"line":82,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":2}},{"name":"Parser","generated":{"line":82,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":2}},{"generated":{"line":82,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":8}},{"name":"prototype","generated":{"line":82,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":9}},{"generated":{"line":82,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":2}},{"name":"isParser","generated":{"line":82,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":19}},{"generated":{"line":82,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":2}},{"generated":{"line":82,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":30}},{"generated":{"line":82,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":70,"column":2}},{"generated":{"line":83,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":71,"column":2}},{"name":"Parser","generated":{"line":90,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":2}},{"name":"Parser","generated":{"line":90,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":2}},{"generated":{"line":90,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":8}},{"name":"prototype","generated":{"line":90,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":9}},{"generated":{"line":90,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":2}},{"name":"evaluate","generated":{"line":90,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":19}},{"generated":{"line":90,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":2}},{"generated":{"line":90,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":30}},{"name":"expr","generated":{"line":90,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":40}},{"generated":{"line":90,"column":44},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":30}},{"generated":{"line":90,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":46}},{"generated":{"line":91,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":79,"column":4}},{"generated":{"line":92,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":4}},{"name":"parse","generated":{"line":92,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":11}},{"generated":{"line":92,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":16}},{"name":"expr","generated":{"line":92,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":17}},{"generated":{"line":92,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":16}},{"generated":{"line":92,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":11}},{"name":"compile","generated":{"line":92,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":23}},{"generated":{"line":92,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":11}},{"name":"evaluate","generated":{"line":92,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":33}},{"generated":{"line":92,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":11}},{"generated":{"line":92,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":42}},{"name":"scope","generated":{"line":92,"column":47},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":47}},{"generated":{"line":92,"column":52},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":11}},{"generated":{"line":92,"column":53},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":80,"column":4}},{"generated":{"line":93,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":81,"column":3}},{"generated":{"line":93,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":78,"column":2}},{"generated":{"line":94,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":82,"column":2}},{"name":"Parser","generated":{"line":102,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":2}},{"name":"Parser","generated":{"line":102,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":2}},{"generated":{"line":102,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":8}},{"name":"prototype","generated":{"line":102,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":9}},{"generated":{"line":102,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":2}},{"name":"get","generated":{"line":102,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":19}},{"generated":{"line":102,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":2}},{"generated":{"line":102,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":25}},{"name":"name","generated":{"line":102,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":35}},{"generated":{"line":102,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":25}},{"generated":{"line":102,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":41}},{"generated":{"line":103,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":91,"column":4}},{"generated":{"line":104,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":4}},{"name":"name","generated":{"line":104,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":11}},{"generated":{"line":104,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":15}},{"generated":{"line":104,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":19}},{"name":"scope","generated":{"line":104,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":24}},{"generated":{"line":104,"column":29},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":11}},{"generated":{"line":104,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":32}},{"generated":{"line":104,"column":62},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":48}},{"name":"scope","generated":{"line":104,"column":67},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":53}},{"generated":{"line":104,"column":72},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":32}},{"name":"name","generated":{"line":104,"column":74},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":60}},{"generated":{"line":104,"column":78},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":32}},{"generated":{"line":104,"column":79},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":11}},{"name":"undefined","generated":{"line":104,"column":82},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":68}},{"generated":{"line":104,"column":91},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":92,"column":4}},{"generated":{"line":105,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":93,"column":3}},{"generated":{"line":105,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":90,"column":2}},{"generated":{"line":106,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":94,"column":2}},{"name":"Parser","generated":{"line":112,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":2}},{"name":"Parser","generated":{"line":112,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":2}},{"generated":{"line":112,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":8}},{"name":"prototype","generated":{"line":112,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":9}},{"generated":{"line":112,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":2}},{"name":"getAll","generated":{"line":112,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":19}},{"generated":{"line":112,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":2}},{"generated":{"line":112,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":28}},{"generated":{"line":112,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":40}},{"generated":{"line":113,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":4}},{"generated":{"line":113,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":11}},{"generated":{"line":113,"column":31},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":18}},{"generated":{"line":113,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":11}},{"generated":{"line":113,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":22}},{"name":"scope","generated":{"line":113,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":27}},{"generated":{"line":113,"column":45},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":11}},{"generated":{"line":113,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":101,"column":4}},{"generated":{"line":114,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":102,"column":3}},{"generated":{"line":114,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":100,"column":2}},{"generated":{"line":115,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":103,"column":2}},{"name":"Parser","generated":{"line":122,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"name":"Parser","generated":{"line":122,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"generated":{"line":122,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":8}},{"name":"prototype","generated":{"line":122,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":9}},{"generated":{"line":122,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"name":"set","generated":{"line":122,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":19}},{"generated":{"line":122,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"generated":{"line":122,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":25}},{"name":"name","generated":{"line":122,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":35}},{"generated":{"line":122,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":25}},{"name":"value","generated":{"line":122,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":41}},{"generated":{"line":122,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":25}},{"generated":{"line":122,"column":48},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":48}},{"generated":{"line":123,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":111,"column":4}},{"generated":{"line":124,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":4}},{"generated":{"line":124,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":11}},{"generated":{"line":124,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":27}},{"name":"scope","generated":{"line":124,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":32}},{"generated":{"line":124,"column":51},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":11}},{"name":"name","generated":{"line":124,"column":53},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":39}},{"generated":{"line":124,"column":57},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":11}},{"name":"value","generated":{"line":124,"column":59},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":45}},{"generated":{"line":124,"column":64},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":11}},{"generated":{"line":124,"column":65},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":112,"column":4}},{"generated":{"line":125,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":113,"column":3}},{"generated":{"line":125,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"generated":{"line":126,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":114,"column":2}},{"name":"Parser","generated":{"line":132,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":2}},{"name":"Parser","generated":{"line":132,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":2}},{"generated":{"line":132,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":8}},{"name":"prototype","generated":{"line":132,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":9}},{"generated":{"line":132,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":2}},{"name":"remove","generated":{"line":132,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":19}},{"generated":{"line":132,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":2}},{"generated":{"line":132,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":28}},{"name":"name","generated":{"line":132,"column":38},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":38}},{"generated":{"line":132,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":28}},{"generated":{"line":132,"column":44},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":44}},{"generated":{"line":133,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":4}},{"generated":{"line":134,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":4}},{"generated":{"line":134,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":11}},{"name":"scope","generated":{"line":134,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":16}},{"generated":{"line":134,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":11}},{"name":"name","generated":{"line":134,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":22}},{"generated":{"line":134,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":11}},{"generated":{"line":134,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":4}},{"generated":{"line":135,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":123,"column":3}},{"generated":{"line":135,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":2}},{"generated":{"line":136,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":124,"column":2}},{"name":"Parser","generated":{"line":141,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":2}},{"name":"Parser","generated":{"line":141,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":2}},{"generated":{"line":141,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":8}},{"name":"prototype","generated":{"line":141,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":9}},{"generated":{"line":141,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":2}},{"name":"clear","generated":{"line":141,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":19}},{"generated":{"line":141,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":2}},{"generated":{"line":141,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":27}},{"generated":{"line":141,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":39}},{"generated":{"line":142,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":4}},{"generated":{"line":142,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":9}},{"name":"_name","generated":{"line":142,"column":13},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":13}},{"generated":{"line":142,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":4}},{"generated":{"line":142,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":22}},{"name":"scope","generated":{"line":142,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":27}},{"generated":{"line":142,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":4}},{"generated":{"line":142,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":130,"column":34}},{"generated":{"line":143,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":6}},{"generated":{"line":143,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":10}},{"generated":{"line":143,"column":38},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":25}},{"name":"scope","generated":{"line":143,"column":43},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":30}},{"generated":{"line":143,"column":48},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":10}},{"name":"_name","generated":{"line":143,"column":50},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":37}},{"generated":{"line":143,"column":55},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":10}},{"generated":{"line":143,"column":56},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":6}},{"generated":{"line":143,"column":58},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":45}},{"generated":{"line":144,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":8}},{"generated":{"line":144,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":15}},{"name":"scope","generated":{"line":144,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":20}},{"generated":{"line":144,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":15}},{"name":"_name","generated":{"line":144,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":26}},{"generated":{"line":144,"column":31},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":15}},{"generated":{"line":144,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":8}},{"generated":{"line":145,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":7}},{"generated":{"line":146,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":134,"column":5}},{"generated":{"line":147,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":135,"column":3}},{"generated":{"line":147,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":129,"column":2}},{"generated":{"line":149,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":137,"column":2}},{"name":"Parser","generated":{"line":149,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":137,"column":9}},{"generated":{"line":149,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":137,"column":2}},{"generated":{"line":150,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":138,"column":1}},{"generated":{"line":150,"column":1},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":46}},{"generated":{"line":150,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":138,"column":3}},{"name":"isClass","generated":{"line":151,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":139,"column":2}},{"name":"isClass","generated":{"line":151,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":139,"column":2}},{"generated":{"line":151,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":139,"column":9}},{"generated":{"line":151,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":139,"column":11}},{"generated":{"line":152,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":138,"column":3}},{"generated":{"line":152,"column":1},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":46}},{"generated":{"line":152,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":7}}],"sources":{"node_modules/mathjs/es/expression/Parser.js":"import { factory } from '../utils/factory';\nimport { extend, hasOwnProperty } from '../utils/object';\nimport { getSafeProperty, setSafeProperty } from '../utils/customs';\nvar name = 'Parser';\nvar dependencies = ['parse'];\nexport var createParserClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var parse = _ref.parse;\n\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    const result = parser.evaluate(expr)  // evaluate an expression\n   *    const value = parser.get(name)        // retrieve a variable from the parser\n   *    const values = parser.getAll()        // retrieve all defined variables\n   *    parser.set(name, value)               // set a variable in the parser\n   *    parser.remove(name)                   // clear a variable from the\n   *                                          // parsers scope\n   *    parser.clear()                        // clear the parsers scope\n   *\n   * Example usage:\n   *    const parser = new Parser()\n   *    // Note: there is a convenience method which can be used instead:\n   *    // const parser = new math.parser()\n   *\n   *    // evaluate expressions\n   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *    parser.evaluate('sqrt(-4)')               // 2i\n   *    parser.evaluate('2 inch in cm')           // 5.08 cm\n   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.evaluate('x = 7 / 2')              // 3.5\n   *    parser.evaluate('x + 3')                  // 6.5\n   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)\n   *    parser.evaluate('f(2, 3)')                // 8\n   *\n   *    // get and set variables and functions\n   *    const x = parser.get('x')                 // 7\n   *    const f = parser.get('f')                 // function\n   *    const g = f(3, 2)                         // 9\n   *    parser.set('h', 500)\n   *    const i = parser.evaluate('h / 2')        // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!'\n   *    })\n   *    parser.evaluate('hello(\"user\")')          // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear()\n   *\n   */\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.scope = {};\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Parser.prototype.type = 'Parser';\n  Parser.prototype.isParser = true;\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n\n  Parser.prototype.evaluate = function (expr) {\n    // TODO: validate arguments\n    return parse(expr).compile().evaluate(this.scope);\n  };\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {string} name\n   * @return {* | undefined} value\n   */\n\n\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return name in this.scope ? getSafeProperty(this.scope, name) : undefined;\n  };\n  /**\n   * Get a map with all defined variables\n   * @return {Object} values\n   */\n\n\n  Parser.prototype.getAll = function () {\n    return extend({}, this.scope);\n  };\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {string} name\n   * @param {* | undefined} value\n   */\n\n\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return setSafeProperty(this.scope, name, value);\n  };\n  /**\n   * Remove a variable from the parsers scope\n   * @param {string} name\n   */\n\n\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n  /**\n   * Clear the scope with variables and functions\n   */\n\n\n  Parser.prototype.clear = function () {\n    for (var _name in this.scope) {\n      if (hasOwnProperty(this.scope, _name)) {\n        delete this.scope[_name];\n      }\n    }\n  };\n\n  return Parser;\n}, {\n  isClass: true\n});"},"lineCount":null}},"error":null,"hash":"b5d2752672a2be5270b12a5f1d528259","cacheData":{"env":{}}}