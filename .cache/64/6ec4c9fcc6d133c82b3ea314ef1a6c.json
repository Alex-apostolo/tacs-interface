{"id":"node_modules/danfojs-node/dist/core/concat.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/package.json","includedInParent":true,"mtime":499162500000},{"name":"./frame","loc":{"line":8,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/concat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js"},{"name":"./utils","loc":{"line":10,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/concat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/utils.js"},{"name":"./series","loc":{"line":12,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/concat.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/series.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concat = exports.Concat = void 0;\n\nvar _frame = require(\"./frame\");\n\nvar _utils = require(\"./utils\");\n\nvar _series = require(\"./series\");\n\nconst utils = new _utils.Utils();\n\nclass Concat {\n  constructor(kwargs) {\n    utils.__in_object(kwargs, \"df_list\", \"df_list not found: specify the list of dataframe\");\n\n    utils.__in_object(kwargs, \"axis\", \"axis not found: specify the axis\");\n\n    let df_list = null;\n    let axis = null;\n\n    if (Array.isArray(kwargs[\"df_list\"])) {\n      df_list = kwargs[\"df_list\"];\n    } else {\n      throw new Error(\"df_list must be an Array of dataFrames/Series\");\n    }\n\n    if (typeof kwargs[\"axis\"] === \"number\") {\n      if (kwargs[\"axis\"] == 0 || kwargs[\"axis\"] == 1) {\n        axis = kwargs[\"axis\"];\n      } else {\n        axis = 1;\n      }\n    } else {\n      throw new Error(\"axis must be a number\");\n    }\n\n    let df_object = Object.assign({}, df_list);\n\n    if (axis == 1) {\n      let columns = [];\n      let duplicate_col_count = {};\n      let max_length = 0;\n\n      for (let key in df_object) {\n        let column = df_object[key].columns;\n        let length = df_object[key].values.length;\n\n        if (length > max_length) {\n          max_length = length;\n        }\n\n        for (let index in column) {\n          let col_name = column[index];\n\n          if (col_name in duplicate_col_count) {\n            let count = duplicate_col_count[col_name];\n            let name = `${col_name}_${count + 1}`;\n            columns.push(name);\n            duplicate_col_count[col_name] = count + 1;\n          } else {\n            columns.push(col_name);\n            duplicate_col_count[col_name] = 1;\n          }\n        }\n      }\n\n      let data = new Array(max_length);\n\n      for (let key in df_list) {\n        let values = df_list[key].values;\n\n        for (let index = 0; index < values.length; index++) {\n          let val = values[index];\n\n          if (typeof data[index] === \"undefined\") {\n            if (Array.isArray(val)) {\n              data[index] = val;\n            } else {\n              data[index] = [val];\n            }\n          } else {\n            if (Array.isArray(val)) {\n              data[index].push(...val);\n            } else {\n              data[index].push(val);\n            }\n          }\n        }\n\n        if (values.length < max_length) {\n          let column_length = df_list[key].columns.length;\n          let null_array = Array(column_length);\n\n          for (let col = 0; col < column_length; col++) {\n            null_array[col] = NaN;\n          }\n\n          if (typeof data[max_length - 1] === \"undefined\") {\n            data[max_length - 1] = null_array;\n          } else {\n            data[max_length - 1].push(...null_array);\n          }\n        }\n      }\n\n      let df = new _frame.DataFrame(data, {\n        columns: columns\n      });\n      return df;\n    } else {\n      let columns = [];\n\n      for (let key in df_list) {\n        let column = df_list[key].columns;\n        columns.push(...column);\n      }\n\n      let column_set = new Set(columns);\n      columns = Array.from(column_set);\n      let data = [];\n\n      for (let key in df_list) {\n        let value = df_list[key].values;\n        let df_columns = df_list[key].columns;\n        let not_exist = [];\n\n        for (let col_index in columns) {\n          let col_name = columns[col_index];\n          let is_index = df_columns.indexOf(col_name);\n\n          if (is_index == -1) {\n            not_exist.push(col_name);\n          }\n        }\n\n        if (not_exist.length > 0) {\n          for (let i = 0; i < value.length; i++) {\n            let row_value = value[i];\n            let new_arr = Array(columns.length);\n\n            for (let j = 0; j < columns.length; j++) {\n              let col_name = columns[j];\n\n              if (not_exist.includes(col_name)) {\n                new_arr[j] = NaN;\n              } else {\n                let index = df_columns.indexOf(col_name);\n\n                if (Array.isArray(row_value)) {\n                  new_arr[j] = row_value[index];\n                } else {\n                  new_arr[j] = row_value;\n                }\n              }\n            }\n\n            data.push(new_arr);\n          }\n        } else {\n          data.push(...value);\n        }\n      }\n\n      if (Array.isArray(data[0])) {\n        let df = new _frame.DataFrame(data, {\n          columns: columns\n        });\n        return df;\n      } else {\n        let sf = new _series.Series(data);\n        return sf;\n      }\n    }\n  }\n\n}\n\nexports.Concat = Concat;\n\nconst concat = kwargs => {\n  let concat_sf = new Concat(kwargs);\n  return concat_sf;\n};\n\nexports.concat = concat;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/danfojs-node/dist/core/concat.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}}],"sources":{"node_modules/danfojs-node/dist/core/concat.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concat = exports.Concat = void 0;\n\nvar _frame = require(\"./frame\");\n\nvar _utils = require(\"./utils\");\n\nvar _series = require(\"./series\");\n\nconst utils = new _utils.Utils();\n\nclass Concat {\n  constructor(kwargs) {\n    utils.__in_object(kwargs, \"df_list\", \"df_list not found: specify the list of dataframe\");\n\n    utils.__in_object(kwargs, \"axis\", \"axis not found: specify the axis\");\n\n    let df_list = null;\n    let axis = null;\n\n    if (Array.isArray(kwargs[\"df_list\"])) {\n      df_list = kwargs[\"df_list\"];\n    } else {\n      throw new Error(\"df_list must be an Array of dataFrames/Series\");\n    }\n\n    if (typeof kwargs[\"axis\"] === \"number\") {\n      if (kwargs[\"axis\"] == 0 || kwargs[\"axis\"] == 1) {\n        axis = kwargs[\"axis\"];\n      } else {\n        axis = 1;\n      }\n    } else {\n      throw new Error(\"axis must be a number\");\n    }\n\n    let df_object = Object.assign({}, df_list);\n\n    if (axis == 1) {\n      let columns = [];\n      let duplicate_col_count = {};\n      let max_length = 0;\n\n      for (let key in df_object) {\n        let column = df_object[key].columns;\n        let length = df_object[key].values.length;\n\n        if (length > max_length) {\n          max_length = length;\n        }\n\n        for (let index in column) {\n          let col_name = column[index];\n\n          if (col_name in duplicate_col_count) {\n            let count = duplicate_col_count[col_name];\n            let name = `${col_name}_${count + 1}`;\n            columns.push(name);\n            duplicate_col_count[col_name] = count + 1;\n          } else {\n            columns.push(col_name);\n            duplicate_col_count[col_name] = 1;\n          }\n        }\n      }\n\n      let data = new Array(max_length);\n\n      for (let key in df_list) {\n        let values = df_list[key].values;\n\n        for (let index = 0; index < values.length; index++) {\n          let val = values[index];\n\n          if (typeof data[index] === \"undefined\") {\n            if (Array.isArray(val)) {\n              data[index] = val;\n            } else {\n              data[index] = [val];\n            }\n          } else {\n            if (Array.isArray(val)) {\n              data[index].push(...val);\n            } else {\n              data[index].push(val);\n            }\n          }\n        }\n\n        if (values.length < max_length) {\n          let column_length = df_list[key].columns.length;\n          let null_array = Array(column_length);\n\n          for (let col = 0; col < column_length; col++) {\n            null_array[col] = NaN;\n          }\n\n          if (typeof data[max_length - 1] === \"undefined\") {\n            data[max_length - 1] = null_array;\n          } else {\n            data[max_length - 1].push(...null_array);\n          }\n        }\n      }\n\n      let df = new _frame.DataFrame(data, {\n        columns: columns\n      });\n      return df;\n    } else {\n      let columns = [];\n\n      for (let key in df_list) {\n        let column = df_list[key].columns;\n        columns.push(...column);\n      }\n\n      let column_set = new Set(columns);\n      columns = Array.from(column_set);\n      let data = [];\n\n      for (let key in df_list) {\n        let value = df_list[key].values;\n        let df_columns = df_list[key].columns;\n        let not_exist = [];\n\n        for (let col_index in columns) {\n          let col_name = columns[col_index];\n          let is_index = df_columns.indexOf(col_name);\n\n          if (is_index == -1) {\n            not_exist.push(col_name);\n          }\n        }\n\n        if (not_exist.length > 0) {\n          for (let i = 0; i < value.length; i++) {\n            let row_value = value[i];\n            let new_arr = Array(columns.length);\n\n            for (let j = 0; j < columns.length; j++) {\n              let col_name = columns[j];\n\n              if (not_exist.includes(col_name)) {\n                new_arr[j] = NaN;\n              } else {\n                let index = df_columns.indexOf(col_name);\n\n                if (Array.isArray(row_value)) {\n                  new_arr[j] = row_value[index];\n                } else {\n                  new_arr[j] = row_value;\n                }\n              }\n            }\n\n            data.push(new_arr);\n          }\n        } else {\n          data.push(...value);\n        }\n      }\n\n      if (Array.isArray(data[0])) {\n        let df = new _frame.DataFrame(data, {\n          columns: columns\n        });\n        return df;\n      } else {\n        let sf = new _series.Series(data);\n        return sf;\n      }\n    }\n  }\n\n}\n\nexports.Concat = Concat;\n\nconst concat = kwargs => {\n  let concat_sf = new Concat(kwargs);\n  return concat_sf;\n};\n\nexports.concat = concat;"},"lineCount":189}},"error":null,"hash":"faff71e9fe6e1a20134c1e71d1c52d24","cacheData":{"env":{}}}