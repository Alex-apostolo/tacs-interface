{"id":"node_modules/danfojs-node/dist/core/indexing.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/package.json","includedInParent":true,"mtime":499162500000},{"name":"./utils","loc":{"line":8,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/indexing.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/utils.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexLoc = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst utils = new _utils.Utils();\n\nconst indexLoc = (ndframe, kwargs) => {\n  let rows = null;\n  let columns = null;\n  let isColumnSplit = false;\n\n  if (Object.prototype.hasOwnProperty.call(kwargs, \"rows\")) {\n    if (Array.isArray(kwargs[\"rows\"])) {\n      if (kwargs[\"rows\"].length == 1 && typeof kwargs[\"rows\"][0] == \"string\") {\n        if (kwargs[\"rows\"][0].includes(\":\")) {\n          let row_split = kwargs[\"rows\"][0].split(\":\");\n\n          if (kwargs['type'] == 'loc') {\n            let start, end;\n\n            if (isNaN(Number(row_split[0]))) {\n              start = ndframe.index.indexOf(row_split[0]);\n            } else {\n              start = Number(row_split[0]);\n            }\n\n            if (isNaN(Number(row_split[1]))) {\n              end = ndframe.index.lastIndexOf(row_split[1]) - 1 || ndframe.values.length - 1;\n            } else {\n              end = Number(row_split[1]) - 1 || ndframe.values.length - 1;\n            }\n\n            rows = utils.__range(start, end);\n          } else {\n            let start = parseInt(row_split[0]) || 0;\n            let end = parseInt(row_split[1]) - 1 || ndframe.values.length - 1;\n\n            if (typeof start == \"number\" && typeof end == \"number\") {\n              rows = utils.__range(start, end);\n            }\n          }\n        } else {\n          if (kwargs[\"type\"] == \"loc\") {\n            let row_idx = [];\n            ndframe.index.map((idx, i) => {\n              if (kwargs['rows'][0] == idx) {\n                row_idx.push(i);\n              }\n            });\n            rows = row_idx;\n          } else {\n            throw new Error(\"Slice index must be separated by ':'\");\n          }\n        }\n      } else {\n        if (kwargs[\"type\"] == \"loc\") {\n          let row_idx = [];\n          ndframe.index.map((idx, i) => {\n            if (kwargs['rows'].includes(idx)) {\n              row_idx.push(i);\n            }\n          });\n          rows = row_idx;\n        } else {\n          rows = kwargs[\"rows\"];\n        }\n      }\n    } else {\n      throw new Error(\"rows parameter must be a Array\");\n    }\n  } else {\n    if (kwargs[\"type\"] == \"loc\") {\n      rows = utils.__range(0, Number(ndframe.shape[0]) - 1);\n    } else {\n      rows = utils.__range(0, Number(ndframe.shape[0]) - 1);\n    }\n  }\n\n  if (Object.prototype.hasOwnProperty.call(kwargs, \"columns\")) {\n    if (Array.isArray(kwargs[\"columns\"])) {\n      if (kwargs[\"columns\"].length == 1 && kwargs[\"columns\"][0].includes(\":\")) {\n        let row_split = kwargs[\"columns\"][0].split(\":\");\n        let start, end;\n\n        if (kwargs[\"type\"] == \"iloc\" || row_split[0] == \"\") {\n          start = parseInt(row_split[0]) || 0;\n          end = parseInt(row_split[1]) - 1 || ndframe.values[0].length - 1;\n        } else {\n          start = parseInt(ndframe.columns.indexOf(row_split[0]));\n          end = parseInt(ndframe.columns.indexOf(row_split[1])) - 1;\n        }\n\n        if (typeof start == \"number\" && typeof end == \"number\") {\n          columns = utils.__range(start, end);\n          isColumnSplit = true;\n        }\n      } else {\n        columns = kwargs[\"columns\"];\n      }\n    } else {\n      throw new Error(\"columns must be a list\");\n    }\n  } else {\n    if (kwargs[\"type\"] == \"loc\") {\n      columns = ndframe.column_names;\n    } else {\n      columns = utils.__range(0, Number(ndframe.shape[1]) - 1);\n    }\n  }\n\n  let data_values = ndframe.values;\n  let new_data = [];\n\n  for (var index = 0; index < rows.length; index++) {\n    let row_val = rows[index];\n    let max_rowIndex = data_values.length - 1;\n\n    if (row_val > max_rowIndex) {\n      throw new Error(`Specified row index ${row_val} is bigger than maximum row index of ${max_rowIndex}`);\n    }\n\n    if (Array.isArray(data_values[0])) {\n      let value = data_values[row_val];\n      let row_data = [];\n\n      for (var i in columns) {\n        var col_index;\n\n        if (kwargs[\"type\"] == \"loc\" && !isColumnSplit) {\n          col_index = ndframe.columns.indexOf(columns[i]);\n\n          if (col_index == -1) {\n            throw new Error(`Column ${columns[i]} does not exist`);\n          }\n        } else {\n          col_index = columns[i];\n          let max_colIndex = ndframe.columns.length - 1;\n\n          if (col_index > max_colIndex) {\n            throw new Error(`column index ${col_index} is bigger than ${max_colIndex}`);\n          }\n        }\n\n        let elem = value[col_index];\n        row_data.push(elem);\n      }\n\n      new_data.push(row_data);\n    } else {\n      new_data.push(data_values[row_val]);\n    }\n  }\n\n  let column_names = [];\n\n  if (kwargs[\"type\"] == \"iloc\" || isColumnSplit) {\n    columns.map(col => {\n      column_names.push(ndframe.columns[col]);\n    });\n  } else {\n    column_names = columns;\n  }\n\n  let final_row = [];\n  rows.forEach(i => {\n    final_row.push(ndframe.index[i]);\n  });\n  return [new_data, column_names, final_row];\n};\n\nexports.indexLoc = indexLoc;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/danfojs-node/dist/core/indexing.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}}],"sources":{"node_modules/danfojs-node/dist/core/indexing.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexLoc = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst utils = new _utils.Utils();\n\nconst indexLoc = (ndframe, kwargs) => {\n  let rows = null;\n  let columns = null;\n  let isColumnSplit = false;\n\n  if (Object.prototype.hasOwnProperty.call(kwargs, \"rows\")) {\n    if (Array.isArray(kwargs[\"rows\"])) {\n      if (kwargs[\"rows\"].length == 1 && typeof kwargs[\"rows\"][0] == \"string\") {\n        if (kwargs[\"rows\"][0].includes(\":\")) {\n          let row_split = kwargs[\"rows\"][0].split(\":\");\n\n          if (kwargs['type'] == 'loc') {\n            let start, end;\n\n            if (isNaN(Number(row_split[0]))) {\n              start = ndframe.index.indexOf(row_split[0]);\n            } else {\n              start = Number(row_split[0]);\n            }\n\n            if (isNaN(Number(row_split[1]))) {\n              end = ndframe.index.lastIndexOf(row_split[1]) - 1 || ndframe.values.length - 1;\n            } else {\n              end = Number(row_split[1]) - 1 || ndframe.values.length - 1;\n            }\n\n            rows = utils.__range(start, end);\n          } else {\n            let start = parseInt(row_split[0]) || 0;\n            let end = parseInt(row_split[1]) - 1 || ndframe.values.length - 1;\n\n            if (typeof start == \"number\" && typeof end == \"number\") {\n              rows = utils.__range(start, end);\n            }\n          }\n        } else {\n          if (kwargs[\"type\"] == \"loc\") {\n            let row_idx = [];\n            ndframe.index.map((idx, i) => {\n              if (kwargs['rows'][0] == idx) {\n                row_idx.push(i);\n              }\n            });\n            rows = row_idx;\n          } else {\n            throw new Error(\"Slice index must be separated by ':'\");\n          }\n        }\n      } else {\n        if (kwargs[\"type\"] == \"loc\") {\n          let row_idx = [];\n          ndframe.index.map((idx, i) => {\n            if (kwargs['rows'].includes(idx)) {\n              row_idx.push(i);\n            }\n          });\n          rows = row_idx;\n        } else {\n          rows = kwargs[\"rows\"];\n        }\n      }\n    } else {\n      throw new Error(\"rows parameter must be a Array\");\n    }\n  } else {\n    if (kwargs[\"type\"] == \"loc\") {\n      rows = utils.__range(0, Number(ndframe.shape[0]) - 1);\n    } else {\n      rows = utils.__range(0, Number(ndframe.shape[0]) - 1);\n    }\n  }\n\n  if (Object.prototype.hasOwnProperty.call(kwargs, \"columns\")) {\n    if (Array.isArray(kwargs[\"columns\"])) {\n      if (kwargs[\"columns\"].length == 1 && kwargs[\"columns\"][0].includes(\":\")) {\n        let row_split = kwargs[\"columns\"][0].split(\":\");\n        let start, end;\n\n        if (kwargs[\"type\"] == \"iloc\" || row_split[0] == \"\") {\n          start = parseInt(row_split[0]) || 0;\n          end = parseInt(row_split[1]) - 1 || ndframe.values[0].length - 1;\n        } else {\n          start = parseInt(ndframe.columns.indexOf(row_split[0]));\n          end = parseInt(ndframe.columns.indexOf(row_split[1])) - 1;\n        }\n\n        if (typeof start == \"number\" && typeof end == \"number\") {\n          columns = utils.__range(start, end);\n          isColumnSplit = true;\n        }\n      } else {\n        columns = kwargs[\"columns\"];\n      }\n    } else {\n      throw new Error(\"columns must be a list\");\n    }\n  } else {\n    if (kwargs[\"type\"] == \"loc\") {\n      columns = ndframe.column_names;\n    } else {\n      columns = utils.__range(0, Number(ndframe.shape[1]) - 1);\n    }\n  }\n\n  let data_values = ndframe.values;\n  let new_data = [];\n\n  for (var index = 0; index < rows.length; index++) {\n    let row_val = rows[index];\n    let max_rowIndex = data_values.length - 1;\n\n    if (row_val > max_rowIndex) {\n      throw new Error(`Specified row index ${row_val} is bigger than maximum row index of ${max_rowIndex}`);\n    }\n\n    if (Array.isArray(data_values[0])) {\n      let value = data_values[row_val];\n      let row_data = [];\n\n      for (var i in columns) {\n        var col_index;\n\n        if (kwargs[\"type\"] == \"loc\" && !isColumnSplit) {\n          col_index = ndframe.columns.indexOf(columns[i]);\n\n          if (col_index == -1) {\n            throw new Error(`Column ${columns[i]} does not exist`);\n          }\n        } else {\n          col_index = columns[i];\n          let max_colIndex = ndframe.columns.length - 1;\n\n          if (col_index > max_colIndex) {\n            throw new Error(`column index ${col_index} is bigger than ${max_colIndex}`);\n          }\n        }\n\n        let elem = value[col_index];\n        row_data.push(elem);\n      }\n\n      new_data.push(row_data);\n    } else {\n      new_data.push(data_values[row_val]);\n    }\n  }\n\n  let column_names = [];\n\n  if (kwargs[\"type\"] == \"iloc\" || isColumnSplit) {\n    columns.map(col => {\n      column_names.push(ndframe.columns[col]);\n    });\n  } else {\n    column_names = columns;\n  }\n\n  let final_row = [];\n  rows.forEach(i => {\n    final_row.push(ndframe.index[i]);\n  });\n  return [new_data, column_names, final_row];\n};\n\nexports.indexLoc = indexLoc;"},"lineCount":176}},"error":null,"hash":"beb61d3b780fc5bac6b05c94d6496c0a","cacheData":{"env":{}}}