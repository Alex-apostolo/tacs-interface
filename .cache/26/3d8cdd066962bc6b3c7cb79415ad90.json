{"id":"node_modules/table/dist/calculateCellWidthIndex.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/table/dist/calculateCellWidthIndex.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/table/package.json","includedInParent":true,"mtime":499162500000},{"name":"string-width","loc":{"line":8,"column":50},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/table/dist/calculateCellWidthIndex.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/table/node_modules/string-width/index.js"}],"generated":{"js":"\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _stringWidth = _interopRequireDefault(require(\"string-width\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Calculates width of each cell contents.\n *\n * @param {string[]} cells\n * @returns {number[]}\n */\n\n\nvar calculateCellWidthIndex = function (cells) {\n  return cells.map(function (value) {\n    return Math.max.apply(Math, _toConsumableArray(value.split('\\n').map(function (line) {\n      return (0, _stringWidth.default)(line);\n    })));\n  });\n};\n\nvar _default = calculateCellWidthIndex;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":4}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":16}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":19}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":41}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":42}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":49}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":50}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":64}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":65}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":1,"column":0},"generated":{"line":20,"column":66}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":3,"column":0},"generated":{"line":27,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":"cells","original":{"line":9,"column":16},"generated":{"line":35,"column":30}},{"source":"../src/calculateCellWidthIndex.js","name":"cells","original":{"line":9,"column":16},"generated":{"line":35,"column":40}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":9,"column":26},"generated":{"line":35,"column":47}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":2},"generated":{"line":36,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":"cells","original":{"line":10,"column":9},"generated":{"line":36,"column":9}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":14},"generated":{"line":36,"column":14}},{"source":"../src/calculateCellWidthIndex.js","name":"map","original":{"line":10,"column":15},"generated":{"line":36,"column":15}},{"source":"../src/calculateCellWidthIndex.js","name":"cells","original":{"line":10,"column":9},"generated":{"line":36,"column":18}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":10,"column":20},"generated":{"line":36,"column":19}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":10,"column":20},"generated":{"line":36,"column":29}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":19},"generated":{"line":36,"column":34}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":30},"generated":{"line":36,"column":36}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":11,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":"Math","original":{"line":11,"column":11},"generated":{"line":37,"column":11}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":11,"column":15},"generated":{"line":37,"column":15}},{"source":"../src/calculateCellWidthIndex.js","name":"max","original":{"line":11,"column":16},"generated":{"line":37,"column":16}},{"source":"../src/calculateCellWidthIndex.js","name":"Math","original":{"line":11,"column":11},"generated":{"line":37,"column":19}},{"source":"../src/calculateCellWidthIndex.js","name":"Math","original":{"line":11,"column":11},"generated":{"line":37,"column":26}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":11,"column":15},"generated":{"line":37,"column":30}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":12,"column":9},"generated":{"line":37,"column":51}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":12,"column":14},"generated":{"line":37,"column":56}},{"source":"../src/calculateCellWidthIndex.js","name":"split","original":{"line":12,"column":15},"generated":{"line":37,"column":57}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":12,"column":9},"generated":{"line":37,"column":62}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":12,"column":21},"generated":{"line":37,"column":63}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":12,"column":9},"generated":{"line":37,"column":67}},{"source":"../src/calculateCellWidthIndex.js","name":"map","original":{"line":12,"column":27},"generated":{"line":37,"column":69}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":12,"column":9},"generated":{"line":37,"column":72}},{"source":"../src/calculateCellWidthIndex.js","name":"line","original":{"line":12,"column":32},"generated":{"line":37,"column":73}},{"source":"../src/calculateCellWidthIndex.js","name":"line","original":{"line":12,"column":32},"generated":{"line":37,"column":83}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":12,"column":31},"generated":{"line":37,"column":87}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":12,"column":41},"generated":{"line":37,"column":89}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":8},"generated":{"line":38,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":13}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":14}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":17}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":29}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":30}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":37}},{"source":"../src/calculateCellWidthIndex.js","name":"line","original":{"line":13,"column":27},"generated":{"line":38,"column":39}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":15},"generated":{"line":38,"column":43}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":13,"column":8},"generated":{"line":38,"column":44}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":12,"column":9},"generated":{"line":39,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":"value","original":{"line":12,"column":9},"generated":{"line":39,"column":5}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":11,"column":15},"generated":{"line":39,"column":6}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":11,"column":4},"generated":{"line":39,"column":8}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":9},"generated":{"line":40,"column":0}},{"source":"../src/calculateCellWidthIndex.js","name":"cells","original":{"line":10,"column":9},"generated":{"line":40,"column":3}},{"source":"../src/calculateCellWidthIndex.js","name":null,"original":{"line":10,"column":2},"generated":{"line":40,"column":4}}],"sources":{"../src/calculateCellWidthIndex.js":"import stringWidth from 'string-width';\n\n/**\n * Calculates width of each cell contents.\n *\n * @param {string[]} cells\n * @returns {number[]}\n */\nexport default (cells) => {\n  return cells.map((value) => {\n    return Math.max(\n      ...value.split('\\n').map((line) => {\n        return stringWidth(line);\n      })\n    );\n  });\n};\n"},"lineCount":null}},"error":null,"hash":"20c7bbaf5267c1f902e50ffc6f1866c9","cacheData":{"env":{}}}