{"id":"node_modules/danfojs-node/dist/core/frame.js","dependencies":[{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/package.json","includedInParent":true,"mtime":1615769723745},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/.babelrc","includedInParent":true,"mtime":1614894608398},{"name":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/package.json","includedInParent":true,"mtime":499162500000},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/interopRequireWildcard","loc":{"line":5,"column":38},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/@babel/runtime/helpers/interopRequireWildcard.js"},{"name":"@tensorflow/tfjs-node","loc":{"line":12,"column":41},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/@tensorflow/tfjs-node/dist/index.js"},{"name":"./generic","loc":{"line":14,"column":46},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/generic.js"},{"name":"./series","loc":{"line":16,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/series.js"},{"name":"./utils","loc":{"line":18,"column":21},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/utils.js"},{"name":"./groupby","loc":{"line":20,"column":23},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/groupby.js"},{"name":"./indexing","loc":{"line":22,"column":24},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/indexing.js"},{"name":"./concat.js","loc":{"line":24,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/concat.js"},{"name":"mathjs","loc":{"line":26,"column":22},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/mathjs/main/esm/index.js"},{"name":"fs","loc":{"line":65,"column":25},"parent":"/Users/alex/SoftwareDevelopment/Web/tacs-interface/node_modules/danfojs-node/dist/core/frame.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataFrame = void 0;\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs-node\"));\n\nvar _generic = _interopRequireDefault(require(\"./generic\"));\n\nvar _series = require(\"./series\");\n\nvar _utils = require(\"./utils\");\n\nvar _groupby = require(\"./groupby\");\n\nvar _indexing = require(\"./indexing\");\n\nvar _concat = require(\"./concat.js\");\n\nvar _mathjs = require(\"mathjs\");\n\nconst utils = new _utils.Utils();\n\nclass DataFrame extends _generic.default {\n  constructor(data, kwargs) {\n    super(data, kwargs);\n\n    this._set_column_property();\n  }\n\n  _set_column_property() {\n    let col_vals = this.col_data;\n    let col_names = this.column_names;\n    col_vals.forEach((col, i) => {\n      this[col_names[i]] = null;\n      Object.defineProperty(this, col_names[i], {\n        get() {\n          return new _series.Series(this.col_data[i], {\n            columns: col_names[i],\n            index: this.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: col_names[i],\n            value: value\n          });\n        }\n\n      });\n    });\n  }\n\n  async to_csv(csvFilePath = \"\") {\n    const csvContent = await super.to_csv();\n\n    if (typeof window === \"undefined\") {\n      const fs = require(\"fs\");\n\n      fs.writeFileSync(csvFilePath, csvContent, err => err && console.error(err));\n    } else {\n      const webCSV = \"data:text/csv;charset=utf-8,\" + csvContent;\n      window.open(encodeURI(webCSV));\n    }\n\n    return csvContent;\n  }\n\n  drop(kwargs = {}) {\n    let params_needed = [\"columns\", \"index\", \"inplace\", \"axis\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"inplace\"] = kwargs[\"inplace\"] || false;\n\n    if (!(\"axis\" in kwargs)) {\n      kwargs[\"axis\"] = 1;\n    }\n\n    let to_drop = null;\n\n    if (\"index\" in kwargs && kwargs[\"axis\"] == 0) {\n      to_drop = kwargs[\"index\"];\n    } else {\n      to_drop = kwargs[\"columns\"];\n    }\n\n    if (kwargs[\"axis\"] == 1) {\n      if (!(\"columns\" in kwargs)) {\n        throw Error(\"No column found. Axis of 1 must be accompanied by an array of column(s) names\");\n      }\n\n      let self = this;\n      let new_col_data = {};\n      let new_dtype = [];\n      const index = to_drop.map(x => {\n        let col_idx = self.columns.indexOf(x);\n\n        if (col_idx == -1) {\n          throw new Error(`column \"${x}\" does not exist`);\n        }\n\n        return col_idx;\n      });\n      this.col_data.forEach((col, idx) => {\n        if (!index.includes(idx)) {\n          new_col_data[self.column_names[idx]] = col;\n          new_dtype.push(self.dtypes[idx]);\n        }\n      });\n\n      if (!kwargs[\"inplace\"]) {\n        let old_cols = self.columns;\n        let new_columns = Object.keys(new_col_data);\n        let df = new DataFrame(new_col_data, {\n          index: self.index,\n          dtypes: new_dtype\n        });\n\n        df.__set_col_property(df, df.col_data, new_columns, old_cols);\n\n        return df;\n      } else {\n        let old_cols = self.columns;\n        let new_columns = Object.keys(new_col_data);\n\n        this.__update_frame_in_place(null, null, new_col_data, null, new_dtype);\n\n        this.__set_col_property(self, self.col_data, new_columns, old_cols);\n      }\n    } else {\n      if (!utils.__key_in_object(kwargs, \"index\")) {\n        throw Error(\"No index label found. Axis of 0 must be accompanied by an array of index labels\");\n      }\n\n      to_drop.forEach(x => {\n        if (!this.index.includes(x)) throw new Error(`${x} does not exist in index`);\n      });\n      const values = this.values;\n      let data_idx = [];\n      let new_data, new_index;\n\n      if (typeof to_drop[0] == \"string\") {\n        this.index.forEach((idx, i) => {\n          if (to_drop.includes(idx)) {\n            data_idx.push(i);\n          }\n        });\n        new_data = utils.__remove_arr(values, data_idx);\n        new_index = utils.__remove_arr(this.index, data_idx);\n      } else {\n        new_data = utils.__remove_arr(values, to_drop);\n        new_index = utils.__remove_arr(this.index, to_drop);\n      }\n\n      if (!kwargs[\"inplace\"]) {\n        return new DataFrame(new_data, {\n          columns: this.columns,\n          index: new_index\n        });\n      } else {\n        this.row_data_tensor = tf.tensor(new_data);\n        this.data = new_data;\n\n        this.__set_index(new_index);\n      }\n    }\n  }\n\n  loc(kwargs = {}) {\n    let params_needed = [\"columns\", \"rows\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"type\"] = \"loc\";\n    let [new_data, columns, rows] = (0, _indexing.indexLoc)(this, kwargs);\n    let df_columns = {\n      columns: columns\n    };\n    let df = new DataFrame(new_data, df_columns);\n\n    df.__set_index(rows);\n\n    return df;\n  }\n\n  iloc(kwargs = {}) {\n    let params_needed = [\"columns\", \"rows\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"type\"] = \"iloc\";\n    let [new_data, columns, rows] = (0, _indexing.indexLoc)(this, kwargs);\n    let df_columns = {\n      columns: columns\n    };\n    let df = new DataFrame(new_data, df_columns);\n\n    df.__set_index(rows);\n\n    return df;\n  }\n\n  head(rows = 5) {\n    if (rows > this.values.length || rows < 1) {\n      return this;\n    } else {\n      let data = this.values.slice(0, rows);\n      let idx = this.index.slice(0, rows);\n      let config = {\n        columns: this.column_names,\n        index: idx\n      };\n      let df = new DataFrame(data, config);\n      return df;\n    }\n  }\n\n  tail(rows = 5) {\n    let row_len = this.values.length;\n\n    if (rows > row_len || rows < 1) {\n      return this;\n    } else {\n      let data = this.values.slice(row_len - rows);\n      let indx = this.index.slice(row_len - rows);\n      let config = {\n        columns: this.column_names,\n        index: indx\n      };\n      let df = new DataFrame(data, config);\n      return df;\n    }\n  }\n\n  async sample(num = -1, seed = 1) {\n    if (num > this.shape[0]) {\n      throw new Error(\"Sample size n cannot be bigger than size of dataset\");\n    }\n\n    if (num < -1 || num == 0) {\n      throw new Error(\"Sample size cannot be less than -1 or 0\");\n    }\n\n    num = num === -1 ? this.shape[0] : num;\n    const shuffled_index = await tf.data.array(this.index).shuffle(num, seed).take(num).toArray();\n    const df = this.iloc({\n      rows: shuffled_index\n    });\n    return df;\n  }\n\n  add(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let sum_vals = tensors[0].add(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(sum_vals, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  sub(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].sub(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mul(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].mul(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  div(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].div(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  pow(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].pow(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mod(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].mod(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mean(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.mean(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  median(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals, idx;\n\n      if (axis == 1) {\n        tensor_vals = this.col_data_tensor.arraySync();\n        idx = this.column_names;\n      } else {\n        tensor_vals = this.row_data_tensor.arraySync();\n        idx = this.index;\n      }\n\n      let median = utils.__median(tensor_vals, false);\n\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  min(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.min(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  max(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.max(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  std(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals = this.col_data_tensor.arraySync();\n      let idx;\n\n      if (axis == 1) {\n        idx = this.column_names;\n      } else {\n        idx = this.index;\n      }\n\n      let median = (0, _mathjs.std)(tensor_vals, axis);\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  var(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals = this.col_data_tensor.arraySync();\n      let idx;\n\n      if (axis == 1) {\n        idx = this.column_names;\n      } else {\n        idx = this.index;\n      }\n\n      let median = (0, _mathjs.variance)(tensor_vals, axis);\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  count(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals, idx;\n\n      if (axis == 1) {\n        tensor_vals = this.col_data_tensor.arraySync();\n        idx = this.column_names;\n      } else {\n        tensor_vals = this.row_data_tensor.arraySync();\n        idx = this.index;\n      }\n\n      let counts = utils.__count_nan(tensor_vals, true, false);\n\n      let sf = new _series.Series(counts, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  round(dp = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let values = this.values;\n      let idx = this.index;\n\n      let new_vals = utils.__round(values, dp, false);\n\n      let options = {\n        columns: this.column_names,\n        index: idx\n      };\n      let df = new DataFrame(new_vals, options);\n      return df;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  __cum_ops(axis = 0, ops) {\n    if (!(axis == 0) && !(axis == 1)) {\n      throw new Error(\"axis must be between 0 or 1\");\n    }\n\n    if (this.__frame_is_compactible_for_operation) {\n      let data = [];\n      let df_data = null;\n\n      if (axis == 0) {\n        df_data = this.col_data;\n      } else {\n        df_data = this.values;\n      }\n\n      for (let i = 0; i < df_data.length; i++) {\n        let value = df_data[i];\n        let temp_val = value[0];\n        let temp_data = [temp_val];\n\n        for (let j = 1; j < value.length; j++) {\n          let curr_val = value[j];\n\n          switch (ops) {\n            case \"max\":\n              if (curr_val > temp_val) {\n                temp_val = curr_val;\n                temp_data.push(curr_val);\n              } else {\n                temp_data.push(temp_val);\n              }\n\n              break;\n\n            case \"min\":\n              if (curr_val < temp_val) {\n                temp_val = curr_val;\n                temp_data.push(curr_val);\n              } else {\n                temp_data.push(temp_val);\n              }\n\n              break;\n\n            case \"sum\":\n              temp_val = temp_val + curr_val;\n              temp_data.push(temp_val);\n              break;\n\n            case \"prod\":\n              temp_val = temp_val * curr_val;\n              temp_data.push(temp_val);\n              break;\n          }\n        }\n\n        data.push(temp_data);\n      }\n\n      if (axis == 0) {\n        data = utils.__get_col_values(data);\n      }\n\n      return new DataFrame(data, {\n        columns: this.columns\n      });\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  cumsum(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"sum\");\n\n    return data;\n  }\n\n  cummin(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"min\");\n\n    return data;\n  }\n\n  cummax(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"max\");\n\n    return data;\n  }\n\n  cumprod(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"prod\");\n\n    return data;\n  }\n\n  copy() {\n    let df = new DataFrame([...this.values], {\n      columns: [...this.column_names],\n      index: this.index,\n      dtypes: this.dtypes\n    });\n    return df;\n  }\n\n  reset_index(inplace = false) {\n    if (inplace) {\n      this.__reset_index();\n    } else {\n      let df = this.copy();\n\n      df.__reset_index();\n\n      return df;\n    }\n  }\n\n  set_index(kwargs = {}) {\n    let params_needed = [\"key\", \"drop\", \"inplace\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"key\")) {\n      throw Error(\"Index ValueError: You must specify an array of index\");\n    }\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"drop\")) {\n      kwargs[\"drop\"] = true;\n    }\n\n    if (Array.isArray(kwargs[\"key\"]) && kwargs[\"key\"].length != this.index.length) {\n      throw Error(`Index LengthError: Lenght of new Index array ${kwargs[\"key\"].length} must match lenght of existing index ${this.index.length}`);\n    }\n\n    if (typeof kwargs[\"key\"] == \"string\" && this.column_names.includes(kwargs[\"key\"])) {\n      kwargs[\"key_name\"] = kwargs[\"key\"];\n      kwargs[\"key\"] = this[kwargs[\"key\"]].values;\n    }\n\n    if (kwargs[\"inplace\"]) {\n      this.__set_index(kwargs[\"key\"]);\n\n      if (kwargs[\"drop\"] && typeof kwargs[\"key_name\"] == \"string\") {\n        this.drop({\n          columns: [kwargs[\"key_name\"]],\n          inplace: true,\n          axis: 1\n        });\n      }\n    } else {\n      let df = this.copy();\n\n      df.__set_index(kwargs[\"key\"]);\n\n      if (kwargs[\"drop\"] && typeof kwargs[\"key_name\"] == \"string\") {\n        df.drop({\n          columns: [kwargs[\"key_name\"]],\n          axis: 1,\n          inplace: true\n        });\n      }\n\n      return df;\n    }\n  }\n\n  describe() {\n    let numeric_df = this.select_dtypes([\"float32\", \"int32\"]);\n    let col_names = numeric_df.column_names;\n    let index = [\"count\", \"mean\", \"std\", \"min\", \"median\", \"max\", \"variance\"];\n    let stats_arr = {};\n    col_names.forEach(name => {\n      let col_series = numeric_df[name];\n      let count = col_series.count();\n      let mean = col_series.mean();\n      let std = col_series.std();\n      let min = col_series.min();\n      let median = col_series.median();\n      let max = col_series.max();\n      let variance = col_series.var();\n      let _stats = [count, mean, std, min, median, max, variance];\n      stats_arr[name] = _stats;\n    });\n    let df = new DataFrame(stats_arr, {\n      index: index\n    });\n    return df.round(6);\n  }\n\n  select_dtypes(include) {\n    let dtypes = this.dtypes;\n    let col_names = this.column_names;\n    let col_vals = {};\n    let original_col_vals = this.col_data;\n    const __supported_dtypes = [\"float32\", \"int32\", \"string\", \"boolean\"];\n\n    if (include == undefined) {\n      let df = this.copy();\n      return df;\n    } else {\n      include.forEach(type => {\n        if (!__supported_dtypes.includes(type)) {\n          throw Error(`Dtype Error: dtype ${type} not supported.`);\n        }\n      });\n      dtypes.forEach((dtype, i) => {\n        if (include.includes(dtype)) {\n          col_vals[col_names[i]] = original_col_vals[i];\n        }\n      });\n      let df = new DataFrame(col_vals);\n      return df;\n    }\n  }\n\n  sum(kwargs = {\n    axis: 1\n  }) {\n    if (this.__frame_is_compactible_for_operation()) {\n      let values;\n      let val_sums = [];\n\n      if (kwargs[\"axis\"] == 1) {\n        values = this.col_data;\n      } else {\n        values = this.values;\n      }\n\n      values.map(arr => {\n        let temp_sum = tf.tensor(arr).sum().arraySync();\n        val_sums.push(Number(temp_sum.toFixed(5)));\n      });\n      let new_index;\n\n      if (kwargs[\"axis\"] == 1) {\n        new_index = this.column_names;\n      } else {\n        new_index = this.index;\n      }\n\n      let sf = new _series.Series(val_sums, {\n        columns: \"sum\",\n        index: new_index\n      });\n      return sf;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  abs() {\n    let data = this.values;\n    let tensor_data = tf.tensor(data);\n    let abs_data = tensor_data.abs().arraySync();\n    let df = new DataFrame(utils.__round(abs_data, 2, false), {\n      columns: this.column_names,\n      index: this.index\n    });\n    return df;\n  }\n\n  __get_tensor_and_idx(df, axis) {\n    let tensor_vals, idx, t_axis;\n\n    if (axis == 1) {\n      tensor_vals = df.row_data_tensor;\n      idx = df.column_names;\n      t_axis = 0;\n    } else {\n      tensor_vals = df.row_data_tensor;\n      idx = df.index;\n      t_axis = 1;\n    }\n\n    return [tensor_vals, idx, t_axis];\n  }\n\n  query(kwargs) {\n    let operators = [\">\", \"<\", \"<=\", \">=\", \"==\", \"!=\"];\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    let column_index, operator, value;\n\n    if (utils.__key_in_object(kwargs, \"column\")) {\n      if (this.columns.includes(kwargs[\"column\"])) {\n        column_index = this.columns.indexOf(kwargs[\"column\"]);\n      } else {\n        throw new Error(`column ${kwargs[\"column\"]} does not exist`);\n      }\n    } else {\n      throw new Error(\"specify the column\");\n    }\n\n    if (utils.__key_in_object(kwargs, \"is\")) {\n      if (operators.includes(kwargs[\"is\"])) {\n        operator = kwargs[\"is\"];\n      } else {\n        throw new Error(` ${kwargs[\"is\"]} is not a supported logical operator`);\n      }\n    } else {\n      throw new Error(\"specify an operator in param [is]\");\n    }\n\n    if (utils.__key_in_object(kwargs, \"to\")) {\n      value = kwargs[\"to\"];\n    } else {\n      throw new Error(\"specify a value in param [to]\");\n    }\n\n    let data = this.values;\n    let index = this.index;\n    let new_data = [];\n    let new_index = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let data_value = data[i];\n      let elem = data_value[column_index];\n\n      if (eval(`elem${operator}value`)) {\n        new_data.push(data_value);\n        new_index.push(index[i]);\n      }\n    }\n\n    if (new_data.length == 0) {\n      throw new Error(`query returned empty data; is either ${value} does not exist in column ${kwargs[\"column\"]}`);\n    }\n\n    if (kwargs[\"inplace\"]) {\n      this.__update_frame_in_place(new_data, this.columns, null, new_index, null);\n    } else {\n      let new_df = new DataFrame(new_data, {\n        columns: this.columns,\n        index: new_index\n      });\n      return new_df;\n    }\n  }\n\n  addColumn(kwargs) {\n    utils.__in_object(kwargs, \"column\", \"column name not specified\");\n\n    utils.__in_object(kwargs, \"value\", \"column value not specified\");\n\n    let column_name = kwargs[\"column\"];\n    let data_length = this.shape[0];\n    let value;\n\n    if (kwargs[\"value\"] instanceof _series.Series) {\n      value = kwargs[\"value\"].values;\n    } else {\n      value = kwargs[\"value\"];\n    }\n\n    if (value.length != data_length) {\n      throw new Error(`Array length ${value.length} not equal to ${data_length}`);\n    }\n\n    if (this.columns.includes(column_name)) {\n      let col_idx = this.columns.indexOf(column_name);\n      let new_data = [];\n      this.values.map((val, index) => {\n        let new_val = val.slice();\n        new_val[col_idx] = value[index];\n        new_data.push(new_val);\n      });\n\n      this.__update_frame_in_place(new_data, null, null, null, null);\n    } else {\n      let data = this.values;\n      let new_data = [];\n      data.map(function (val, index) {\n        let new_val = val.slice();\n        new_val.push(value[index]);\n        new_data.push(new_val);\n      });\n      let new_dtypes = [...this.dtypes];\n      new_dtypes.push(utils.__get_t(value)[0]);\n      let new_col_names = [...this.columns];\n      new_col_names.push(column_name);\n\n      this.__update_frame_in_place(new_data, new_col_names, null, null, new_dtypes);\n\n      Object.defineProperty(this, column_name, {\n        get() {\n          return new _series.Series(value, {\n            columns: column_name,\n            index: this.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: column_name,\n            value: value\n          });\n        }\n\n      });\n    }\n  }\n\n  groupby(col) {\n    let len = this.shape[0];\n    let column_names = this.column_names;\n    let col_dict = {};\n    let key_column = null;\n\n    if (col.length == 2) {\n      if (column_names.includes(col[0])) {\n        var [data1, col_name1] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[0]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[0]} does not exist`);\n      }\n\n      if (column_names.includes(col[1])) {\n        var [data2, col_name2] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[1]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[1]} does not exist`);\n      }\n\n      key_column = [col[0], col[1]];\n\n      var column_1_Unique = utils.__unique(data1);\n\n      var column_2_unique = utils.__unique(data2);\n\n      for (var i = 0; i < column_1_Unique.length; i++) {\n        let col_value = column_1_Unique[i];\n        col_dict[col_value] = {};\n\n        for (var j = 0; j < column_2_unique.length; j++) {\n          let col2_value = column_2_unique[j];\n          col_dict[col_value][col2_value] = [];\n        }\n      }\n    } else {\n      if (column_names.includes(col[0])) {\n        var [data1, col_name1] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[0]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[0]} does not exist`);\n      }\n\n      key_column = [col[0]];\n\n      var column_Unique = utils.__unique(data1);\n\n      for (let i = 0; i < column_Unique.length; i++) {\n        let col_value = column_Unique[i];\n        col_dict[col_value] = [];\n      }\n    }\n\n    let groups = new _groupby.GroupBy(col_dict, key_column, this.values, column_names).group();\n    return groups;\n  }\n\n  column(col_name) {\n    if (!this.columns.includes(col_name)) {\n      throw new Error(`column ${col_name} does not exist`);\n    }\n\n    let col_indx_objs = utils.__arr_to_obj(this.columns);\n\n    let indx = col_indx_objs[col_name];\n    let data = this.col_data[indx];\n    return new _series.Series(data, {\n      columns: [col_name]\n    });\n  }\n\n  fillna(kwargs = {}) {\n    let params_needed = [\"columns\", \"values\", \"inplace\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (utils.__key_in_object(kwargs, \"columns\")) {\n      kwargs[\"columns\"].map(col => {\n        if (!this.column_names.includes(col)) {\n          throw Error(`Value Error: Specified columns must be one of ${this.column_names}, got ${col}`);\n        }\n      });\n\n      if (kwargs[\"columns\"].length != kwargs[\"values\"].length) {\n        throw Error(`Lenght Error: The lenght of the columns names must be equal to the lenght of the values,\n                 got column of length ${kwargs[\"columns\"].length} but values of length ${kwargs[\"values\"].length}`);\n      }\n\n      let new_col_data = this.col_data;\n      kwargs[\"columns\"].map((col, i) => {\n        let col_idx = this.column_names.indexOf(col);\n        let col_data = this.col_data[col_idx];\n        let __temp = [];\n        col_data.map(val => {\n          if (isNaN(val) && typeof val != \"string\") {\n            __temp.push(kwargs[\"values\"][i]);\n          } else {\n            __temp.push(val);\n          }\n        });\n        new_col_data[col_idx] = __temp;\n      });\n      let final_data = {};\n      new_col_data.map((col, i) => {\n        final_data[this.column_names[i]] = col;\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.__update_frame_in_place(null, null, final_data, null, null);\n      } else {\n        return new DataFrame(final_data, {\n          index: this.index\n        });\n      }\n    } else {\n      if (!utils.__key_in_object(kwargs, \"values\")) {\n        throw Error(\"Value Error: Please specify a fill value\");\n      }\n\n      let nan_val;\n\n      if (Array.isArray(kwargs[\"values\"])) {\n        nan_val = kwargs[\"values\"][0];\n      } else {\n        nan_val = kwargs[\"values\"];\n      }\n\n      let data = [];\n      let values = this.values;\n      let columns = this.columns;\n\n      for (let i = 0; i < values.length; i++) {\n        let temp_data = [];\n        let row_value = values[i];\n\n        for (let j = 0; j < row_value.length; j++) {\n          if (isNaN(row_value[j]) && typeof row_value[j] != \"string\") {\n            temp_data.push(nan_val);\n          } else {\n            temp_data.push(row_value[j]);\n          }\n        }\n\n        data.push(temp_data);\n      }\n\n      if (kwargs[\"inplace\"]) {\n        this.__update_frame_in_place(data, null, null, null, null);\n      } else {\n        return new DataFrame(data, {\n          columns: columns,\n          index: this.index\n        });\n      }\n    }\n  }\n\n  isna() {\n    let new_row_data = this.__isna();\n\n    let columns = this.column_names;\n    return new DataFrame(new_row_data, {\n      columns: columns,\n      index: this.index\n    });\n  }\n\n  nanIndex() {\n    let df_values = this.values;\n    let index_data = [];\n\n    for (let i = 0; i < df_values.length; i++) {\n      let row_values = df_values[i];\n\n      if (row_values.includes(NaN)) {\n        index_data.push(i);\n      }\n    }\n\n    return index_data;\n  }\n\n  dropna(kwargs = {}) {\n    let axis = kwargs[\"axis\"] || 0;\n    let inplace = kwargs[\"inplace\"] || false;\n\n    if (axis != 0 && axis != 1) {\n      throw new Error(\"axis must either be 1 or 0\");\n    }\n\n    let df_values = null;\n    let columns = null;\n\n    if (axis == 0) {\n      df_values = this.values;\n      columns = this.columns;\n    } else {\n      df_values = this.col_data;\n      columns = [];\n    }\n\n    let data = [];\n\n    for (let i = 0; i < df_values.length; i++) {\n      let values = df_values[i];\n\n      if (!values.includes(NaN)) {\n        if (axis == 0) {\n          data.push(values);\n        } else {\n          columns.push(this.columns[i]);\n\n          if (data.length == 0) {\n            for (let j = 0; j < values.length; j++) {\n              data.push([values[j]]);\n            }\n          } else {\n            for (let j = 0; j < data.length; j++) {\n              data[j].push(values[j]);\n            }\n          }\n        }\n      }\n    }\n\n    if (inplace == true) {\n      this.data = data;\n\n      this.__reset_index();\n\n      this.columns = columns;\n    } else {\n      return new DataFrame(data, {\n        columns: columns\n      });\n    }\n  }\n\n  apply(kwargs) {\n    let is_callable = utils.__is_function(kwargs[\"callable\"]);\n\n    if (!is_callable) {\n      throw new Error(\"the argument must be a function\");\n    }\n\n    let callable = kwargs[\"callable\"];\n    let data = [];\n\n    if (utils.__key_in_object(kwargs, \"axis\")) {\n      let axis = kwargs[\"axis\"];\n      let df_data;\n\n      if (axis == 0) {\n        df_data = this.values;\n      } else {\n        df_data = this.col_data;\n      }\n\n      for (let i = 0; i < df_data.length; i++) {\n        let value = tf.tensor(df_data[i]);\n        let callable_data;\n\n        try {\n          callable_data = callable(value).arraySync();\n        } catch (error) {\n          throw Error(`Callable Error: You can only apply JavaScript functions on DataFrames when axis is not specified. This operation is applied on all element, and returns a DataFrame of the same shape.`);\n        }\n\n        data.push(callable_data);\n      }\n    } else {\n      let df_data = this.values;\n      let new_data = [];\n      df_data.forEach(row => {\n        let new_row = [];\n        row.forEach(val => {\n          new_row.push(callable(val));\n        });\n        new_data.push(new_row);\n      });\n      data = new_data;\n    }\n\n    if (utils.__is_1D_array(data)) {\n      if (kwargs[\"axis\"] == 0) {\n        let sf = new _series.Series(data, {\n          index: this.index\n        });\n        return sf;\n      } else {\n        let sf = new _series.Series(data, {\n          index: this.column_names\n        });\n        return sf;\n      }\n    } else {\n      let df = new DataFrame(data, {\n        columns: this.column_names,\n        index: this.index\n      });\n      return df;\n    }\n  }\n\n  lt(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"lt\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  gt(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"gt\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  le(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"le\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  ge(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"ge\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  ne(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"ne\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  eq(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"eq\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  replace(kwargs = {}) {\n    let params_needed = [\"replace\", \"with\", \"in\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (utils.__key_in_object(kwargs, \"in\")) {\n      kwargs[\"in\"].map(col => {\n        if (!this.column_names.includes(col)) {\n          throw Error(`Value Error: Specified columns must be one of ${this.column_names}, got ${col}`);\n        }\n      });\n\n      if (utils.__key_in_object(kwargs, \"replace\") && utils.__key_in_object(kwargs, \"with\")) {\n        let new_col_data_obj = {};\n        this.column_names.map((col, idx) => {\n          if (kwargs[\"in\"].includes(col)) {\n            let temp_col_data = this.col_data[idx];\n            let __temp = [];\n            temp_col_data.map(val => {\n              if (val == kwargs[\"replace\"]) {\n                __temp.push(kwargs[\"with\"]);\n              } else {\n                __temp.push(val);\n              }\n            });\n            new_col_data_obj[col] = __temp;\n          } else {\n            new_col_data_obj[col] = this.col_data[idx];\n          }\n        });\n        return new DataFrame(new_col_data_obj, {\n          columns: this.column_names,\n          index: this.index\n        });\n      } else {\n        throw Error(\"Params Error: Must specify both 'replace' and 'with' parameters.\");\n      }\n    } else {\n      if (utils.__key_in_object(kwargs, \"replace\") && utils.__key_in_object(kwargs, \"with\")) {\n        let replaced_arr = [];\n        let old_arr = this.values;\n        old_arr.map(inner_arr => {\n          let temp = [];\n          inner_arr.map(val => {\n            if (val == kwargs[\"replace\"]) {\n              temp.push(kwargs[\"with\"]);\n            } else {\n              temp.push(val);\n            }\n          });\n          replaced_arr.push(temp);\n        });\n        let df = new DataFrame(replaced_arr, {\n          index: this.index,\n          columns: this.column_names\n        });\n        return df;\n      } else {\n        throw Error(\"Params Error: Must specify both 'replace' and 'with' parameters.\");\n      }\n    }\n  }\n\n  __logical_ops(val, logical_type, axis) {\n    let int_vals, other;\n\n    if (utils.__is_number(val)) {\n      other = val;\n    } else {\n      if (val.series) {\n        if (axis == 0) {\n          if (val.values.length != this.shape[0]) {\n            throw Error(`Shape Error: Operands could not be broadcast together with shapes ${this.shape} and ${val.values.length}.`);\n          }\n\n          other = tf.tensor(val.values);\n        } else {\n          if (val.values.length != this.shape[1]) {\n            throw Error(`Shape Error: Operands could not be broadcast together with shapes ${this.shape} and ${val.values.length}.`);\n          }\n\n          other = tf.tensor(val.values);\n        }\n      } else if (Array.isArray(val)) {\n        other = tf.tensor(val);\n      } else {\n        other = val.row_data_tensor;\n      }\n    }\n\n    switch (logical_type) {\n      case \"lt\":\n        int_vals = tf.tensor(this.values).less(other).arraySync();\n        break;\n\n      case \"gt\":\n        int_vals = tf.tensor(this.values).greater(other).arraySync();\n        break;\n\n      case \"le\":\n        int_vals = tf.tensor(this.values).lessEqual(other).arraySync();\n        break;\n\n      case \"ge\":\n        int_vals = tf.tensor(this.values).greaterEqual(other).arraySync();\n        break;\n\n      case \"ne\":\n        int_vals = tf.tensor(this.values).notEqual(other).arraySync();\n        break;\n\n      case \"eq\":\n        int_vals = tf.tensor(this.values).equal(other).arraySync();\n        break;\n    }\n\n    let bool_vals = utils.__map_int_to_bool(int_vals, 2);\n\n    let df = new DataFrame(bool_vals, {\n      columns: this.column_names,\n      index: this.index\n    });\n    return df;\n  }\n\n  __get_df_from_tensor(val, col_names) {\n    let len = val.shape[0];\n    let new_array = [];\n\n    for (let i = 0; i < len; i++) {\n      let arr = val.slice([i], [1]).arraySync()[0];\n      new_array.push(arr);\n    }\n\n    return new DataFrame(new_array, {\n      columns: col_names\n    });\n  }\n\n  __frame_is_compactible_for_operation() {\n    let dtypes = this.dtypes;\n\n    const str = element => element == \"string\";\n\n    if (dtypes.some(str)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  __get_ops_tensors(tensors, axis) {\n    if (utils.__is_undefined(tensors[1].series)) {\n      let tensors_arr = [];\n\n      if (utils.__is_undefined(axis) || axis == 1) {\n        tensors_arr.push(tensors[0].row_data_tensor);\n        tensors_arr.push(tensors[1]);\n        return tensors_arr;\n      } else {\n        tensors_arr.push(tensors[0].col_data_tensor);\n        tensors_arr.push(tensors[1]);\n        return tensors_arr;\n      }\n    } else {\n      let tensors_arr = [];\n\n      if (utils.__is_undefined(axis) || axis == 1) {\n        let this_tensor, other_tensor;\n        this_tensor = tensors[0].row_data_tensor;\n\n        if (tensors[1].series) {\n          other_tensor = tf.tensor(tensors[1].values, [1, tensors[1].values.length]);\n        } else {\n          other_tensor = tensors[1].row_data_tensor;\n        }\n\n        tensors_arr.push(this_tensor);\n        tensors_arr.push(other_tensor);\n        return tensors_arr;\n      } else {\n        let this_tensor, other_tensor;\n        this_tensor = tensors[0].row_data_tensor;\n\n        if (tensors[1].series) {\n          other_tensor = tf.tensor(tensors[1].values, [tensors[1].values.length, 1]);\n        } else {\n          other_tensor = tensors[1].row_data_tensor;\n        }\n\n        tensors_arr.push(this_tensor);\n        tensors_arr.push(other_tensor);\n        return tensors_arr;\n      }\n    }\n  }\n\n  transpose() {\n    let new_values = this.col_data;\n    let new_index = this.column_names;\n    let new_col_names = this.index;\n    let df = new DataFrame(new_values, {\n      columns: new_col_names,\n      index: new_index\n    });\n    return df;\n  }\n\n  get T() {\n    return this.transpose();\n  }\n\n  get ctypes() {\n    let cols = this.column_names;\n    let d_types = this.col_types;\n    let sf = new _series.Series(d_types, {\n      index: cols\n    });\n    return sf;\n  }\n\n  plot(div) {\n    const plt = new Plot(this, div);\n    return plt;\n  }\n\n  get tensor() {\n    return this.row_data_tensor;\n  }\n\n  astype(kwargs = {}) {\n    if (!utils.__key_in_object(kwargs, \"column\")) {\n      throw Error(\"Value Error: Please specify a column to cast\");\n    }\n\n    if (!utils.__key_in_object(kwargs, \"dtype\")) {\n      throw Error(\"Value Error: Please specify dtype to cast to\");\n    }\n\n    if (!this.column_names.includes(kwargs[\"column\"])) {\n      throw Error(`'${kwargs[\"column\"]}' not found in columns`);\n    }\n\n    let col_idx = this.column_names.indexOf(kwargs[\"column\"]);\n    let new_types = this.col_types;\n    let col_values = this.col_data;\n    new_types[col_idx] = kwargs[\"dtype\"];\n    let new_col_values = [];\n    let temp_col = col_values[col_idx];\n\n    switch (kwargs[\"dtype\"]) {\n      case \"float32\":\n        temp_col.map(val => {\n          new_col_values.push(Number(val));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      case \"int32\":\n        temp_col.map(val => {\n          new_col_values.push(Number(Number(val).toFixed()));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      case \"string\":\n        temp_col.map(val => {\n          new_col_values.push(String(val));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      default:\n        break;\n    }\n\n    let new_col_obj = {};\n    this.column_names.forEach((cname, i) => {\n      new_col_obj[cname] = col_values[i];\n    });\n    let df = new DataFrame(new_col_obj, {\n      dtypes: new_types,\n      index: this.index\n    });\n    return df;\n  }\n\n  unique(axis = 1) {\n    if (axis == undefined || axis > 1 || axis < 0) {\n      throw Error(`Axis Error: Please specify a correct axis. Axis must either be '0' or '1', got ${axis}`);\n    }\n\n    let _unique = {};\n\n    if (axis == 1) {\n      let col_names = this.column_names;\n      col_names.forEach(cname => {\n        _unique[cname] = this[cname].unique().values;\n      });\n    } else {\n      let rows = this.values;\n      let _index = this.index;\n      rows.forEach((row, i) => {\n        let data_set = new Set(row);\n        _unique[_index[i]] = Array.from(data_set);\n      });\n    }\n\n    return _unique;\n  }\n\n  nunique(axis = 1) {\n    if (axis == undefined || axis > 1 || axis < 0) {\n      throw Error(`Axis Error: Please specify a correct axis. Axis must either be '0' or '1', got ${axis}`);\n    }\n\n    let _nunique = [];\n\n    if (axis == 1) {\n      let col_names = this.column_names;\n      col_names.forEach(cname => {\n        _nunique.push(this[cname].unique().values.length);\n      });\n      let sf = new _series.Series(_nunique, {\n        index: this.column_names\n      });\n      return sf;\n    } else {\n      let rows = this.values;\n      rows.forEach(row => {\n        let data_set = new Set(row);\n\n        _nunique.push(Array.from(data_set).length);\n      });\n    }\n\n    let sf = new _series.Series(_nunique, {\n      index: this.index\n    });\n    return sf;\n  }\n\n  rename(kwargs = {}) {\n    let params_needed = [\"mapper\", \"inplace\", \"axis\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      kwargs[\"axis\"] = 1;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"mapper\")) {\n      throw Error(\"Please specify a mapper object\");\n    }\n\n    if (kwargs[\"axis\"] == 1) {\n      let old_col_names = Object.keys(kwargs[\"mapper\"]);\n      let new_col_names = Object.values(kwargs[\"mapper\"]);\n      let col_names = [...this.column_names];\n      old_col_names.forEach((cname, i) => {\n        if (!col_names.includes(cname)) {\n          throw Error(`Label Error: Specified column '${cname}' not found in column axis`);\n        }\n\n        let idx = col_names.indexOf(cname);\n        col_names[idx] = new_col_names[i];\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.columns = col_names;\n\n        this.__set_col_property(this, this.col_data, col_names, old_col_names);\n      } else {\n        let df = this.copy();\n        df.columns = col_names;\n\n        df.__set_col_property(df, df.col_data, col_names, old_col_names);\n\n        return df;\n      }\n    } else {\n      let old_index = Object.keys(kwargs[\"mapper\"]);\n      let row_index = this.index;\n      let new_index = [];\n      row_index.forEach(idx => {\n        if (old_index.includes(idx)) {\n          new_index.push(kwargs[\"mapper\"][idx]);\n        } else {\n          new_index.push(idx);\n        }\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.__set_index(new_index);\n      } else {\n        let df = this.copy();\n\n        df.__set_index(new_index);\n\n        return df;\n      }\n    }\n  }\n\n  sort_index(kwargs = {}) {\n    let inplace = typeof kwargs[\"inplace\"] == \"undefined\" ? false : kwargs[\"inplace\"];\n    let asc = typeof kwargs[\"ascending\"] == \"undefined\" ? true : kwargs[\"ascending\"];\n    let index_val = this.index;\n\n    let [data, index] = this.__sort_by(index_val, index_val, asc);\n\n    if (inplace) {\n      this.__update_frame_in_place(data, null, null, index, null);\n    } else {\n      let df = this.copy();\n\n      df.__update_frame_in_place(data, null, null, index, null);\n\n      return df;\n    }\n  }\n\n  sort_values(kwargs = {}) {\n    if (!utils.__key_in_object(kwargs, \"by\")) {\n      throw Error(`use col_name to specify column name`);\n    }\n\n    let inplace = typeof kwargs[\"inplace\"] == \"undefined\" ? false : kwargs[\"inplace\"];\n    let asc = typeof kwargs[\"ascending\"] == \"undefined\" ? true : kwargs[\"ascending\"];\n    let index_val = this.index;\n    let column_val = this.column(kwargs[\"by\"]).values;\n\n    let [data, index] = this.__sort_by(column_val, index_val, asc);\n\n    if (inplace) {\n      this.__update_frame_in_place(data, null, null, index, null);\n    } else {\n      let df = this.copy();\n\n      df.__update_frame_in_place(data, null, null, index, null);\n\n      return df;\n    }\n  }\n\n  __set_col_property(self, col_vals, col_names, old_col_names) {\n    old_col_names.forEach(name => {\n      delete self[name];\n    });\n    col_vals.forEach((col, i) => {\n      Object.defineProperty(self, col_names[i], {\n        get() {\n          return new _series.Series(col, {\n            columns: col_names[i],\n            index: self.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: col_names[i],\n            value: value\n          });\n        }\n\n      });\n    });\n  }\n\n  __update_frame_in_place(row_data, column_names, col_obj, index, dtypes) {\n    if (row_data != undefined) {\n      this.data = row_data;\n    } else {\n      if (col_obj != undefined) {\n        let _res = utils._get_row_and_col_values(col_obj);\n\n        this.data = _res[0];\n        this.columns = _res[1];\n        column_names = _res[1];\n      }\n    }\n\n    if (col_obj != undefined) {\n      this.col_data = Object.values(col_obj);\n      this.columns = Object.keys(col_obj);\n      column_names = Object.keys(col_obj);\n    } else {\n      if (row_data != undefined) {\n        this.col_data = utils.__get_col_values(row_data);\n      }\n    }\n\n    if (column_names != undefined) {\n      this.columns = column_names;\n    }\n\n    if (index != undefined) {\n      this.index_arr = index;\n    }\n\n    if (dtypes != undefined) {\n      this.col_types = dtypes;\n    }\n  }\n\n  __sort_by(col_value, df_index, asc) {\n    let values = this.values;\n\n    let sorted_val = utils.__sort(col_value, asc);\n\n    let duplicate_obj = utils.__get_duplicate(col_value);\n\n    let data = [];\n    let indexs = [];\n\n    for (let row_i = 0; row_i < sorted_val.length; row_i++) {\n      let val = sorted_val[row_i];\n      let index = null;\n\n      if (duplicate_obj.hasOwnProperty(val)) {\n        index = duplicate_obj[val][\"index\"][0];\n        duplicate_obj[val][\"index\"].splice(0, 1);\n      } else {\n        index = col_value.indexOf(val);\n      }\n\n      data.push(values[index]);\n      indexs.push(df_index[index]);\n    }\n\n    return [data, indexs];\n  }\n\n  append(val) {\n    let df2 = null;\n\n    if (Array.isArray(val)) {\n      if (Array.isArray(val[0])) {\n        if (val[0].length != this.shape[1]) {\n          throw Error(`length Mixmatch: The lenght of provided value (${val.length}) does not match the original DataFrame (${this.shape[1]})`);\n        }\n\n        df2 = new DataFrame(val);\n      }\n    } else if (utils.__is_object(val)) {\n      df2 = new DataFrame(val);\n    } else if (val instanceof DataFrame) {\n      df2 = val.copy();\n    }\n\n    let concat_df = (0, _concat.concat)({\n      df_list: [this, df2],\n      axis: 0\n    });\n    return concat_df;\n  }\n\n}\n\nexports.DataFrame = DataFrame;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1402,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1403,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1404,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1405,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1406,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1407,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1408,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1409,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1410,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1411,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1412,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1413,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1414,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1415,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1416,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1417,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1418,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1419,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1420,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1421,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1422,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1423,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1424,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1425,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1426,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1427,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1428,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1429,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1430,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1431,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1432,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1433,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1434,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1435,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1436,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1437,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1438,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1439,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1440,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1441,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1442,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1443,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1444,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1445,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1446,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1447,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1448,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1449,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1450,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1451,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1452,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1453,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1454,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1455,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1456,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1457,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1458,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1459,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1460,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1461,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1462,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1463,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1464,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1465,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1466,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1467,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1468,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1469,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1470,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1471,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1472,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1473,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1474,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1475,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1476,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1477,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1478,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1479,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1480,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1481,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1482,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1483,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1484,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1485,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1486,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1487,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1488,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1489,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1490,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1491,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1492,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1493,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1494,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1495,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1496,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1497,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1498,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1499,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1500,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1501,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1502,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1503,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1504,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1505,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1506,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1507,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1508,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1509,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1510,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1511,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1512,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1513,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1514,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1515,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1516,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1517,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1518,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1519,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1520,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1521,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1522,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1523,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1524,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1525,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1526,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1527,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1528,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1529,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1530,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1531,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1532,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1533,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1534,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1535,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1536,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1537,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1538,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1539,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1540,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1541,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1542,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1543,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1544,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1545,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1546,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1547,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1548,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1549,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1550,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1551,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1552,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1553,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1554,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1555,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1556,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1557,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1558,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1559,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1560,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1561,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1562,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1563,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1564,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1565,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1566,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1567,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1568,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1569,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1570,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1571,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1572,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1573,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1574,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1575,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1576,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1577,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1578,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1579,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1580,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1581,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1582,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1583,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1584,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1585,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1586,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1587,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1588,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1589,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1590,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1591,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1592,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1593,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1594,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1595,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1596,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1597,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1598,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1599,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1600,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1601,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1602,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1603,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1604,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1605,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1606,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1607,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1608,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1609,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1610,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1611,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1612,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1613,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1614,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1615,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1616,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1617,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1618,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1619,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1620,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1621,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1622,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1623,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1624,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1625,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1626,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1627,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1628,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1629,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1630,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1631,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1632,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1633,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1634,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1635,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1636,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1637,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1638,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1639,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1640,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1641,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1642,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1643,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1644,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1645,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1646,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1647,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1648,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1649,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1650,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1651,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1652,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1653,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1654,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1655,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1656,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1657,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1658,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1659,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1660,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1661,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1662,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1663,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1664,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1665,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1666,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1667,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1668,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1669,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1670,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1671,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1672,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1673,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1674,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1675,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1676,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1677,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1678,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1679,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1680,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1681,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1682,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1683,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1684,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1685,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1686,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1687,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1688,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1689,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1690,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1691,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1692,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1693,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1694,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1695,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1696,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1697,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1698,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1699,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1700,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1701,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1702,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1703,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1704,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1705,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1706,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1707,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1708,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1709,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1710,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1711,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1712,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1713,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1714,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1715,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1716,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1717,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1718,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1719,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1720,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1721,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1722,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1723,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1724,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1725,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1726,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1727,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1728,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1729,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1730,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1731,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1732,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1733,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1734,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1735,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1736,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1737,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1738,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1739,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1740,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1741,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1742,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1743,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1744,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1745,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1746,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1747,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1748,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1749,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1750,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1751,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1752,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1753,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1754,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1755,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1756,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1757,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1758,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1759,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1760,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1761,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1762,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1763,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1764,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1765,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1766,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1767,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1768,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1769,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1770,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1771,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1772,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1773,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1774,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1775,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1776,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1777,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1778,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1779,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1780,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1781,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1782,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1783,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1784,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1785,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1786,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1787,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1788,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1789,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1790,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1791,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1792,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1793,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1794,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1795,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1796,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1797,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1798,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1799,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1800,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1801,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1802,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1803,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1804,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1805,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1806,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1807,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1808,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1809,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1810,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1811,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1812,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1813,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1814,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1815,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1816,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1817,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1818,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1819,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1820,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1821,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1822,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1823,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1824,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1825,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1826,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1827,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1828,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1829,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1830,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1831,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1832,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1833,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1834,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1835,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1836,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1837,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1838,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1839,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1840,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1841,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1842,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1843,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1844,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1845,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1846,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1847,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1848,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1849,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1850,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1851,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1852,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1853,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1854,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1855,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1856,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1857,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1858,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1859,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1860,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1861,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1862,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1863,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1864,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1865,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1866,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1867,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1868,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1869,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1870,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1871,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1872,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1873,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1874,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1875,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1876,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1877,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1878,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1879,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1880,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1881,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1882,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1883,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1884,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1885,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1886,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1887,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1888,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1889,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1890,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/danfojs-node/dist/core/frame.js","original":{"line":1891,"column":0},"generated":{"line":1891,"column":0}}],"sources":{"node_modules/danfojs-node/dist/core/frame.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataFrame = void 0;\n\nvar tf = _interopRequireWildcard(require(\"@tensorflow/tfjs-node\"));\n\nvar _generic = _interopRequireDefault(require(\"./generic\"));\n\nvar _series = require(\"./series\");\n\nvar _utils = require(\"./utils\");\n\nvar _groupby = require(\"./groupby\");\n\nvar _indexing = require(\"./indexing\");\n\nvar _concat = require(\"./concat.js\");\n\nvar _mathjs = require(\"mathjs\");\n\nconst utils = new _utils.Utils();\n\nclass DataFrame extends _generic.default {\n  constructor(data, kwargs) {\n    super(data, kwargs);\n\n    this._set_column_property();\n  }\n\n  _set_column_property() {\n    let col_vals = this.col_data;\n    let col_names = this.column_names;\n    col_vals.forEach((col, i) => {\n      this[col_names[i]] = null;\n      Object.defineProperty(this, col_names[i], {\n        get() {\n          return new _series.Series(this.col_data[i], {\n            columns: col_names[i],\n            index: this.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: col_names[i],\n            value: value\n          });\n        }\n\n      });\n    });\n  }\n\n  async to_csv(csvFilePath = \"\") {\n    const csvContent = await super.to_csv();\n\n    if (typeof window === \"undefined\") {\n      const fs = require(\"fs\");\n\n      fs.writeFileSync(csvFilePath, csvContent, err => err && console.error(err));\n    } else {\n      const webCSV = \"data:text/csv;charset=utf-8,\" + csvContent;\n      window.open(encodeURI(webCSV));\n    }\n\n    return csvContent;\n  }\n\n  drop(kwargs = {}) {\n    let params_needed = [\"columns\", \"index\", \"inplace\", \"axis\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"inplace\"] = kwargs[\"inplace\"] || false;\n\n    if (!(\"axis\" in kwargs)) {\n      kwargs[\"axis\"] = 1;\n    }\n\n    let to_drop = null;\n\n    if (\"index\" in kwargs && kwargs[\"axis\"] == 0) {\n      to_drop = kwargs[\"index\"];\n    } else {\n      to_drop = kwargs[\"columns\"];\n    }\n\n    if (kwargs[\"axis\"] == 1) {\n      if (!(\"columns\" in kwargs)) {\n        throw Error(\"No column found. Axis of 1 must be accompanied by an array of column(s) names\");\n      }\n\n      let self = this;\n      let new_col_data = {};\n      let new_dtype = [];\n      const index = to_drop.map(x => {\n        let col_idx = self.columns.indexOf(x);\n\n        if (col_idx == -1) {\n          throw new Error(`column \"${x}\" does not exist`);\n        }\n\n        return col_idx;\n      });\n      this.col_data.forEach((col, idx) => {\n        if (!index.includes(idx)) {\n          new_col_data[self.column_names[idx]] = col;\n          new_dtype.push(self.dtypes[idx]);\n        }\n      });\n\n      if (!kwargs[\"inplace\"]) {\n        let old_cols = self.columns;\n        let new_columns = Object.keys(new_col_data);\n        let df = new DataFrame(new_col_data, {\n          index: self.index,\n          dtypes: new_dtype\n        });\n\n        df.__set_col_property(df, df.col_data, new_columns, old_cols);\n\n        return df;\n      } else {\n        let old_cols = self.columns;\n        let new_columns = Object.keys(new_col_data);\n\n        this.__update_frame_in_place(null, null, new_col_data, null, new_dtype);\n\n        this.__set_col_property(self, self.col_data, new_columns, old_cols);\n      }\n    } else {\n      if (!utils.__key_in_object(kwargs, \"index\")) {\n        throw Error(\"No index label found. Axis of 0 must be accompanied by an array of index labels\");\n      }\n\n      to_drop.forEach(x => {\n        if (!this.index.includes(x)) throw new Error(`${x} does not exist in index`);\n      });\n      const values = this.values;\n      let data_idx = [];\n      let new_data, new_index;\n\n      if (typeof to_drop[0] == \"string\") {\n        this.index.forEach((idx, i) => {\n          if (to_drop.includes(idx)) {\n            data_idx.push(i);\n          }\n        });\n        new_data = utils.__remove_arr(values, data_idx);\n        new_index = utils.__remove_arr(this.index, data_idx);\n      } else {\n        new_data = utils.__remove_arr(values, to_drop);\n        new_index = utils.__remove_arr(this.index, to_drop);\n      }\n\n      if (!kwargs[\"inplace\"]) {\n        return new DataFrame(new_data, {\n          columns: this.columns,\n          index: new_index\n        });\n      } else {\n        this.row_data_tensor = tf.tensor(new_data);\n        this.data = new_data;\n\n        this.__set_index(new_index);\n      }\n    }\n  }\n\n  loc(kwargs = {}) {\n    let params_needed = [\"columns\", \"rows\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"type\"] = \"loc\";\n    let [new_data, columns, rows] = (0, _indexing.indexLoc)(this, kwargs);\n    let df_columns = {\n      columns: columns\n    };\n    let df = new DataFrame(new_data, df_columns);\n\n    df.__set_index(rows);\n\n    return df;\n  }\n\n  iloc(kwargs = {}) {\n    let params_needed = [\"columns\", \"rows\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    kwargs[\"type\"] = \"iloc\";\n    let [new_data, columns, rows] = (0, _indexing.indexLoc)(this, kwargs);\n    let df_columns = {\n      columns: columns\n    };\n    let df = new DataFrame(new_data, df_columns);\n\n    df.__set_index(rows);\n\n    return df;\n  }\n\n  head(rows = 5) {\n    if (rows > this.values.length || rows < 1) {\n      return this;\n    } else {\n      let data = this.values.slice(0, rows);\n      let idx = this.index.slice(0, rows);\n      let config = {\n        columns: this.column_names,\n        index: idx\n      };\n      let df = new DataFrame(data, config);\n      return df;\n    }\n  }\n\n  tail(rows = 5) {\n    let row_len = this.values.length;\n\n    if (rows > row_len || rows < 1) {\n      return this;\n    } else {\n      let data = this.values.slice(row_len - rows);\n      let indx = this.index.slice(row_len - rows);\n      let config = {\n        columns: this.column_names,\n        index: indx\n      };\n      let df = new DataFrame(data, config);\n      return df;\n    }\n  }\n\n  async sample(num = -1, seed = 1) {\n    if (num > this.shape[0]) {\n      throw new Error(\"Sample size n cannot be bigger than size of dataset\");\n    }\n\n    if (num < -1 || num == 0) {\n      throw new Error(\"Sample size cannot be less than -1 or 0\");\n    }\n\n    num = num === -1 ? this.shape[0] : num;\n    const shuffled_index = await tf.data.array(this.index).shuffle(num, seed).take(num).toArray();\n    const df = this.iloc({\n      rows: shuffled_index\n    });\n    return df;\n  }\n\n  add(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let sum_vals = tensors[0].add(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(sum_vals, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  sub(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].sub(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mul(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].mul(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  div(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].div(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  pow(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].pow(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mod(other, axis) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensors = this.__get_ops_tensors([this, other], axis);\n\n      let result = tensors[0].mod(tensors[1]);\n      let col_names = this.columns;\n      return this.__get_df_from_tensor(result, col_names);\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  mean(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.mean(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  median(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals, idx;\n\n      if (axis == 1) {\n        tensor_vals = this.col_data_tensor.arraySync();\n        idx = this.column_names;\n      } else {\n        tensor_vals = this.row_data_tensor.arraySync();\n        idx = this.index;\n      }\n\n      let median = utils.__median(tensor_vals, false);\n\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  min(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.min(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  max(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let operands = this.__get_tensor_and_idx(this, axis);\n\n      let tensor_vals = operands[0];\n      let idx = operands[1];\n      let result = tensor_vals.max(operands[2]);\n      let sf = new _series.Series(result.arraySync(), {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  std(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals = this.col_data_tensor.arraySync();\n      let idx;\n\n      if (axis == 1) {\n        idx = this.column_names;\n      } else {\n        idx = this.index;\n      }\n\n      let median = (0, _mathjs.std)(tensor_vals, axis);\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  var(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals = this.col_data_tensor.arraySync();\n      let idx;\n\n      if (axis == 1) {\n        idx = this.column_names;\n      } else {\n        idx = this.index;\n      }\n\n      let median = (0, _mathjs.variance)(tensor_vals, axis);\n      let sf = new _series.Series(median, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  count(axis = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let tensor_vals, idx;\n\n      if (axis == 1) {\n        tensor_vals = this.col_data_tensor.arraySync();\n        idx = this.column_names;\n      } else {\n        tensor_vals = this.row_data_tensor.arraySync();\n        idx = this.index;\n      }\n\n      let counts = utils.__count_nan(tensor_vals, true, false);\n\n      let sf = new _series.Series(counts, {\n        index: idx\n      });\n      return sf;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  round(dp = 1) {\n    if (this.__frame_is_compactible_for_operation) {\n      let values = this.values;\n      let idx = this.index;\n\n      let new_vals = utils.__round(values, dp, false);\n\n      let options = {\n        columns: this.column_names,\n        index: idx\n      };\n      let df = new DataFrame(new_vals, options);\n      return df;\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  __cum_ops(axis = 0, ops) {\n    if (!(axis == 0) && !(axis == 1)) {\n      throw new Error(\"axis must be between 0 or 1\");\n    }\n\n    if (this.__frame_is_compactible_for_operation) {\n      let data = [];\n      let df_data = null;\n\n      if (axis == 0) {\n        df_data = this.col_data;\n      } else {\n        df_data = this.values;\n      }\n\n      for (let i = 0; i < df_data.length; i++) {\n        let value = df_data[i];\n        let temp_val = value[0];\n        let temp_data = [temp_val];\n\n        for (let j = 1; j < value.length; j++) {\n          let curr_val = value[j];\n\n          switch (ops) {\n            case \"max\":\n              if (curr_val > temp_val) {\n                temp_val = curr_val;\n                temp_data.push(curr_val);\n              } else {\n                temp_data.push(temp_val);\n              }\n\n              break;\n\n            case \"min\":\n              if (curr_val < temp_val) {\n                temp_val = curr_val;\n                temp_data.push(curr_val);\n              } else {\n                temp_data.push(temp_val);\n              }\n\n              break;\n\n            case \"sum\":\n              temp_val = temp_val + curr_val;\n              temp_data.push(temp_val);\n              break;\n\n            case \"prod\":\n              temp_val = temp_val * curr_val;\n              temp_data.push(temp_val);\n              break;\n          }\n        }\n\n        data.push(temp_data);\n      }\n\n      if (axis == 0) {\n        data = utils.__get_col_values(data);\n      }\n\n      return new DataFrame(data, {\n        columns: this.columns\n      });\n    } else {\n      throw Error(\"TypeError: Dtypes of columns must be Float of Int\");\n    }\n  }\n\n  cumsum(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"sum\");\n\n    return data;\n  }\n\n  cummin(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"min\");\n\n    return data;\n  }\n\n  cummax(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"max\");\n\n    return data;\n  }\n\n  cumprod(kwargs = {}) {\n    let axis;\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      axis = 0;\n    } else {\n      axis = kwargs[\"axis\"];\n    }\n\n    let data = this.__cum_ops(axis, \"prod\");\n\n    return data;\n  }\n\n  copy() {\n    let df = new DataFrame([...this.values], {\n      columns: [...this.column_names],\n      index: this.index,\n      dtypes: this.dtypes\n    });\n    return df;\n  }\n\n  reset_index(inplace = false) {\n    if (inplace) {\n      this.__reset_index();\n    } else {\n      let df = this.copy();\n\n      df.__reset_index();\n\n      return df;\n    }\n  }\n\n  set_index(kwargs = {}) {\n    let params_needed = [\"key\", \"drop\", \"inplace\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"key\")) {\n      throw Error(\"Index ValueError: You must specify an array of index\");\n    }\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"drop\")) {\n      kwargs[\"drop\"] = true;\n    }\n\n    if (Array.isArray(kwargs[\"key\"]) && kwargs[\"key\"].length != this.index.length) {\n      throw Error(`Index LengthError: Lenght of new Index array ${kwargs[\"key\"].length} must match lenght of existing index ${this.index.length}`);\n    }\n\n    if (typeof kwargs[\"key\"] == \"string\" && this.column_names.includes(kwargs[\"key\"])) {\n      kwargs[\"key_name\"] = kwargs[\"key\"];\n      kwargs[\"key\"] = this[kwargs[\"key\"]].values;\n    }\n\n    if (kwargs[\"inplace\"]) {\n      this.__set_index(kwargs[\"key\"]);\n\n      if (kwargs[\"drop\"] && typeof kwargs[\"key_name\"] == \"string\") {\n        this.drop({\n          columns: [kwargs[\"key_name\"]],\n          inplace: true,\n          axis: 1\n        });\n      }\n    } else {\n      let df = this.copy();\n\n      df.__set_index(kwargs[\"key\"]);\n\n      if (kwargs[\"drop\"] && typeof kwargs[\"key_name\"] == \"string\") {\n        df.drop({\n          columns: [kwargs[\"key_name\"]],\n          axis: 1,\n          inplace: true\n        });\n      }\n\n      return df;\n    }\n  }\n\n  describe() {\n    let numeric_df = this.select_dtypes([\"float32\", \"int32\"]);\n    let col_names = numeric_df.column_names;\n    let index = [\"count\", \"mean\", \"std\", \"min\", \"median\", \"max\", \"variance\"];\n    let stats_arr = {};\n    col_names.forEach(name => {\n      let col_series = numeric_df[name];\n      let count = col_series.count();\n      let mean = col_series.mean();\n      let std = col_series.std();\n      let min = col_series.min();\n      let median = col_series.median();\n      let max = col_series.max();\n      let variance = col_series.var();\n      let _stats = [count, mean, std, min, median, max, variance];\n      stats_arr[name] = _stats;\n    });\n    let df = new DataFrame(stats_arr, {\n      index: index\n    });\n    return df.round(6);\n  }\n\n  select_dtypes(include) {\n    let dtypes = this.dtypes;\n    let col_names = this.column_names;\n    let col_vals = {};\n    let original_col_vals = this.col_data;\n    const __supported_dtypes = [\"float32\", \"int32\", \"string\", \"boolean\"];\n\n    if (include == undefined) {\n      let df = this.copy();\n      return df;\n    } else {\n      include.forEach(type => {\n        if (!__supported_dtypes.includes(type)) {\n          throw Error(`Dtype Error: dtype ${type} not supported.`);\n        }\n      });\n      dtypes.forEach((dtype, i) => {\n        if (include.includes(dtype)) {\n          col_vals[col_names[i]] = original_col_vals[i];\n        }\n      });\n      let df = new DataFrame(col_vals);\n      return df;\n    }\n  }\n\n  sum(kwargs = {\n    axis: 1\n  }) {\n    if (this.__frame_is_compactible_for_operation()) {\n      let values;\n      let val_sums = [];\n\n      if (kwargs[\"axis\"] == 1) {\n        values = this.col_data;\n      } else {\n        values = this.values;\n      }\n\n      values.map(arr => {\n        let temp_sum = tf.tensor(arr).sum().arraySync();\n        val_sums.push(Number(temp_sum.toFixed(5)));\n      });\n      let new_index;\n\n      if (kwargs[\"axis\"] == 1) {\n        new_index = this.column_names;\n      } else {\n        new_index = this.index;\n      }\n\n      let sf = new _series.Series(val_sums, {\n        columns: \"sum\",\n        index: new_index\n      });\n      return sf;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  abs() {\n    let data = this.values;\n    let tensor_data = tf.tensor(data);\n    let abs_data = tensor_data.abs().arraySync();\n    let df = new DataFrame(utils.__round(abs_data, 2, false), {\n      columns: this.column_names,\n      index: this.index\n    });\n    return df;\n  }\n\n  __get_tensor_and_idx(df, axis) {\n    let tensor_vals, idx, t_axis;\n\n    if (axis == 1) {\n      tensor_vals = df.row_data_tensor;\n      idx = df.column_names;\n      t_axis = 0;\n    } else {\n      tensor_vals = df.row_data_tensor;\n      idx = df.index;\n      t_axis = 1;\n    }\n\n    return [tensor_vals, idx, t_axis];\n  }\n\n  query(kwargs) {\n    let operators = [\">\", \"<\", \"<=\", \">=\", \"==\", \"!=\"];\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    let column_index, operator, value;\n\n    if (utils.__key_in_object(kwargs, \"column\")) {\n      if (this.columns.includes(kwargs[\"column\"])) {\n        column_index = this.columns.indexOf(kwargs[\"column\"]);\n      } else {\n        throw new Error(`column ${kwargs[\"column\"]} does not exist`);\n      }\n    } else {\n      throw new Error(\"specify the column\");\n    }\n\n    if (utils.__key_in_object(kwargs, \"is\")) {\n      if (operators.includes(kwargs[\"is\"])) {\n        operator = kwargs[\"is\"];\n      } else {\n        throw new Error(` ${kwargs[\"is\"]} is not a supported logical operator`);\n      }\n    } else {\n      throw new Error(\"specify an operator in param [is]\");\n    }\n\n    if (utils.__key_in_object(kwargs, \"to\")) {\n      value = kwargs[\"to\"];\n    } else {\n      throw new Error(\"specify a value in param [to]\");\n    }\n\n    let data = this.values;\n    let index = this.index;\n    let new_data = [];\n    let new_index = [];\n\n    for (var i = 0; i < data.length; i++) {\n      let data_value = data[i];\n      let elem = data_value[column_index];\n\n      if (eval(`elem${operator}value`)) {\n        new_data.push(data_value);\n        new_index.push(index[i]);\n      }\n    }\n\n    if (new_data.length == 0) {\n      throw new Error(`query returned empty data; is either ${value} does not exist in column ${kwargs[\"column\"]}`);\n    }\n\n    if (kwargs[\"inplace\"]) {\n      this.__update_frame_in_place(new_data, this.columns, null, new_index, null);\n    } else {\n      let new_df = new DataFrame(new_data, {\n        columns: this.columns,\n        index: new_index\n      });\n      return new_df;\n    }\n  }\n\n  addColumn(kwargs) {\n    utils.__in_object(kwargs, \"column\", \"column name not specified\");\n\n    utils.__in_object(kwargs, \"value\", \"column value not specified\");\n\n    let column_name = kwargs[\"column\"];\n    let data_length = this.shape[0];\n    let value;\n\n    if (kwargs[\"value\"] instanceof _series.Series) {\n      value = kwargs[\"value\"].values;\n    } else {\n      value = kwargs[\"value\"];\n    }\n\n    if (value.length != data_length) {\n      throw new Error(`Array length ${value.length} not equal to ${data_length}`);\n    }\n\n    if (this.columns.includes(column_name)) {\n      let col_idx = this.columns.indexOf(column_name);\n      let new_data = [];\n      this.values.map((val, index) => {\n        let new_val = val.slice();\n        new_val[col_idx] = value[index];\n        new_data.push(new_val);\n      });\n\n      this.__update_frame_in_place(new_data, null, null, null, null);\n    } else {\n      let data = this.values;\n      let new_data = [];\n      data.map(function (val, index) {\n        let new_val = val.slice();\n        new_val.push(value[index]);\n        new_data.push(new_val);\n      });\n      let new_dtypes = [...this.dtypes];\n      new_dtypes.push(utils.__get_t(value)[0]);\n      let new_col_names = [...this.columns];\n      new_col_names.push(column_name);\n\n      this.__update_frame_in_place(new_data, new_col_names, null, null, new_dtypes);\n\n      Object.defineProperty(this, column_name, {\n        get() {\n          return new _series.Series(value, {\n            columns: column_name,\n            index: this.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: column_name,\n            value: value\n          });\n        }\n\n      });\n    }\n  }\n\n  groupby(col) {\n    let len = this.shape[0];\n    let column_names = this.column_names;\n    let col_dict = {};\n    let key_column = null;\n\n    if (col.length == 2) {\n      if (column_names.includes(col[0])) {\n        var [data1, col_name1] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[0]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[0]} does not exist`);\n      }\n\n      if (column_names.includes(col[1])) {\n        var [data2, col_name2] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[1]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[1]} does not exist`);\n      }\n\n      key_column = [col[0], col[1]];\n\n      var column_1_Unique = utils.__unique(data1);\n\n      var column_2_unique = utils.__unique(data2);\n\n      for (var i = 0; i < column_1_Unique.length; i++) {\n        let col_value = column_1_Unique[i];\n        col_dict[col_value] = {};\n\n        for (var j = 0; j < column_2_unique.length; j++) {\n          let col2_value = column_2_unique[j];\n          col_dict[col_value][col2_value] = [];\n        }\n      }\n    } else {\n      if (column_names.includes(col[0])) {\n        var [data1, col_name1] = (0, _indexing.indexLoc)(this, {\n          rows: [`0:${len}`],\n          columns: [`${col[0]}`],\n          type: \"loc\"\n        });\n      } else {\n        throw new Error(`column ${col[0]} does not exist`);\n      }\n\n      key_column = [col[0]];\n\n      var column_Unique = utils.__unique(data1);\n\n      for (let i = 0; i < column_Unique.length; i++) {\n        let col_value = column_Unique[i];\n        col_dict[col_value] = [];\n      }\n    }\n\n    let groups = new _groupby.GroupBy(col_dict, key_column, this.values, column_names).group();\n    return groups;\n  }\n\n  column(col_name) {\n    if (!this.columns.includes(col_name)) {\n      throw new Error(`column ${col_name} does not exist`);\n    }\n\n    let col_indx_objs = utils.__arr_to_obj(this.columns);\n\n    let indx = col_indx_objs[col_name];\n    let data = this.col_data[indx];\n    return new _series.Series(data, {\n      columns: [col_name]\n    });\n  }\n\n  fillna(kwargs = {}) {\n    let params_needed = [\"columns\", \"values\", \"inplace\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (utils.__key_in_object(kwargs, \"columns\")) {\n      kwargs[\"columns\"].map(col => {\n        if (!this.column_names.includes(col)) {\n          throw Error(`Value Error: Specified columns must be one of ${this.column_names}, got ${col}`);\n        }\n      });\n\n      if (kwargs[\"columns\"].length != kwargs[\"values\"].length) {\n        throw Error(`Lenght Error: The lenght of the columns names must be equal to the lenght of the values,\n                 got column of length ${kwargs[\"columns\"].length} but values of length ${kwargs[\"values\"].length}`);\n      }\n\n      let new_col_data = this.col_data;\n      kwargs[\"columns\"].map((col, i) => {\n        let col_idx = this.column_names.indexOf(col);\n        let col_data = this.col_data[col_idx];\n        let __temp = [];\n        col_data.map(val => {\n          if (isNaN(val) && typeof val != \"string\") {\n            __temp.push(kwargs[\"values\"][i]);\n          } else {\n            __temp.push(val);\n          }\n        });\n        new_col_data[col_idx] = __temp;\n      });\n      let final_data = {};\n      new_col_data.map((col, i) => {\n        final_data[this.column_names[i]] = col;\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.__update_frame_in_place(null, null, final_data, null, null);\n      } else {\n        return new DataFrame(final_data, {\n          index: this.index\n        });\n      }\n    } else {\n      if (!utils.__key_in_object(kwargs, \"values\")) {\n        throw Error(\"Value Error: Please specify a fill value\");\n      }\n\n      let nan_val;\n\n      if (Array.isArray(kwargs[\"values\"])) {\n        nan_val = kwargs[\"values\"][0];\n      } else {\n        nan_val = kwargs[\"values\"];\n      }\n\n      let data = [];\n      let values = this.values;\n      let columns = this.columns;\n\n      for (let i = 0; i < values.length; i++) {\n        let temp_data = [];\n        let row_value = values[i];\n\n        for (let j = 0; j < row_value.length; j++) {\n          if (isNaN(row_value[j]) && typeof row_value[j] != \"string\") {\n            temp_data.push(nan_val);\n          } else {\n            temp_data.push(row_value[j]);\n          }\n        }\n\n        data.push(temp_data);\n      }\n\n      if (kwargs[\"inplace\"]) {\n        this.__update_frame_in_place(data, null, null, null, null);\n      } else {\n        return new DataFrame(data, {\n          columns: columns,\n          index: this.index\n        });\n      }\n    }\n  }\n\n  isna() {\n    let new_row_data = this.__isna();\n\n    let columns = this.column_names;\n    return new DataFrame(new_row_data, {\n      columns: columns,\n      index: this.index\n    });\n  }\n\n  nanIndex() {\n    let df_values = this.values;\n    let index_data = [];\n\n    for (let i = 0; i < df_values.length; i++) {\n      let row_values = df_values[i];\n\n      if (row_values.includes(NaN)) {\n        index_data.push(i);\n      }\n    }\n\n    return index_data;\n  }\n\n  dropna(kwargs = {}) {\n    let axis = kwargs[\"axis\"] || 0;\n    let inplace = kwargs[\"inplace\"] || false;\n\n    if (axis != 0 && axis != 1) {\n      throw new Error(\"axis must either be 1 or 0\");\n    }\n\n    let df_values = null;\n    let columns = null;\n\n    if (axis == 0) {\n      df_values = this.values;\n      columns = this.columns;\n    } else {\n      df_values = this.col_data;\n      columns = [];\n    }\n\n    let data = [];\n\n    for (let i = 0; i < df_values.length; i++) {\n      let values = df_values[i];\n\n      if (!values.includes(NaN)) {\n        if (axis == 0) {\n          data.push(values);\n        } else {\n          columns.push(this.columns[i]);\n\n          if (data.length == 0) {\n            for (let j = 0; j < values.length; j++) {\n              data.push([values[j]]);\n            }\n          } else {\n            for (let j = 0; j < data.length; j++) {\n              data[j].push(values[j]);\n            }\n          }\n        }\n      }\n    }\n\n    if (inplace == true) {\n      this.data = data;\n\n      this.__reset_index();\n\n      this.columns = columns;\n    } else {\n      return new DataFrame(data, {\n        columns: columns\n      });\n    }\n  }\n\n  apply(kwargs) {\n    let is_callable = utils.__is_function(kwargs[\"callable\"]);\n\n    if (!is_callable) {\n      throw new Error(\"the argument must be a function\");\n    }\n\n    let callable = kwargs[\"callable\"];\n    let data = [];\n\n    if (utils.__key_in_object(kwargs, \"axis\")) {\n      let axis = kwargs[\"axis\"];\n      let df_data;\n\n      if (axis == 0) {\n        df_data = this.values;\n      } else {\n        df_data = this.col_data;\n      }\n\n      for (let i = 0; i < df_data.length; i++) {\n        let value = tf.tensor(df_data[i]);\n        let callable_data;\n\n        try {\n          callable_data = callable(value).arraySync();\n        } catch (error) {\n          throw Error(`Callable Error: You can only apply JavaScript functions on DataFrames when axis is not specified. This operation is applied on all element, and returns a DataFrame of the same shape.`);\n        }\n\n        data.push(callable_data);\n      }\n    } else {\n      let df_data = this.values;\n      let new_data = [];\n      df_data.forEach(row => {\n        let new_row = [];\n        row.forEach(val => {\n          new_row.push(callable(val));\n        });\n        new_data.push(new_row);\n      });\n      data = new_data;\n    }\n\n    if (utils.__is_1D_array(data)) {\n      if (kwargs[\"axis\"] == 0) {\n        let sf = new _series.Series(data, {\n          index: this.index\n        });\n        return sf;\n      } else {\n        let sf = new _series.Series(data, {\n          index: this.column_names\n        });\n        return sf;\n      }\n    } else {\n      let df = new DataFrame(data, {\n        columns: this.column_names,\n        index: this.index\n      });\n      return df;\n    }\n  }\n\n  lt(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"lt\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  gt(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"gt\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  le(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"le\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  ge(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"ge\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  ne(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"ne\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  eq(other, axis) {\n    if (this.__frame_is_compactible_for_operation()) {\n      if (axis == undefined) {\n        axis = 0;\n      }\n\n      let df = this.__logical_ops(other, \"eq\", axis);\n\n      return df;\n    } else {\n      throw Error(\"Dtype Error: Operation can not be performed on string type\");\n    }\n  }\n\n  replace(kwargs = {}) {\n    let params_needed = [\"replace\", \"with\", \"in\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (utils.__key_in_object(kwargs, \"in\")) {\n      kwargs[\"in\"].map(col => {\n        if (!this.column_names.includes(col)) {\n          throw Error(`Value Error: Specified columns must be one of ${this.column_names}, got ${col}`);\n        }\n      });\n\n      if (utils.__key_in_object(kwargs, \"replace\") && utils.__key_in_object(kwargs, \"with\")) {\n        let new_col_data_obj = {};\n        this.column_names.map((col, idx) => {\n          if (kwargs[\"in\"].includes(col)) {\n            let temp_col_data = this.col_data[idx];\n            let __temp = [];\n            temp_col_data.map(val => {\n              if (val == kwargs[\"replace\"]) {\n                __temp.push(kwargs[\"with\"]);\n              } else {\n                __temp.push(val);\n              }\n            });\n            new_col_data_obj[col] = __temp;\n          } else {\n            new_col_data_obj[col] = this.col_data[idx];\n          }\n        });\n        return new DataFrame(new_col_data_obj, {\n          columns: this.column_names,\n          index: this.index\n        });\n      } else {\n        throw Error(\"Params Error: Must specify both 'replace' and 'with' parameters.\");\n      }\n    } else {\n      if (utils.__key_in_object(kwargs, \"replace\") && utils.__key_in_object(kwargs, \"with\")) {\n        let replaced_arr = [];\n        let old_arr = this.values;\n        old_arr.map(inner_arr => {\n          let temp = [];\n          inner_arr.map(val => {\n            if (val == kwargs[\"replace\"]) {\n              temp.push(kwargs[\"with\"]);\n            } else {\n              temp.push(val);\n            }\n          });\n          replaced_arr.push(temp);\n        });\n        let df = new DataFrame(replaced_arr, {\n          index: this.index,\n          columns: this.column_names\n        });\n        return df;\n      } else {\n        throw Error(\"Params Error: Must specify both 'replace' and 'with' parameters.\");\n      }\n    }\n  }\n\n  __logical_ops(val, logical_type, axis) {\n    let int_vals, other;\n\n    if (utils.__is_number(val)) {\n      other = val;\n    } else {\n      if (val.series) {\n        if (axis == 0) {\n          if (val.values.length != this.shape[0]) {\n            throw Error(`Shape Error: Operands could not be broadcast together with shapes ${this.shape} and ${val.values.length}.`);\n          }\n\n          other = tf.tensor(val.values);\n        } else {\n          if (val.values.length != this.shape[1]) {\n            throw Error(`Shape Error: Operands could not be broadcast together with shapes ${this.shape} and ${val.values.length}.`);\n          }\n\n          other = tf.tensor(val.values);\n        }\n      } else if (Array.isArray(val)) {\n        other = tf.tensor(val);\n      } else {\n        other = val.row_data_tensor;\n      }\n    }\n\n    switch (logical_type) {\n      case \"lt\":\n        int_vals = tf.tensor(this.values).less(other).arraySync();\n        break;\n\n      case \"gt\":\n        int_vals = tf.tensor(this.values).greater(other).arraySync();\n        break;\n\n      case \"le\":\n        int_vals = tf.tensor(this.values).lessEqual(other).arraySync();\n        break;\n\n      case \"ge\":\n        int_vals = tf.tensor(this.values).greaterEqual(other).arraySync();\n        break;\n\n      case \"ne\":\n        int_vals = tf.tensor(this.values).notEqual(other).arraySync();\n        break;\n\n      case \"eq\":\n        int_vals = tf.tensor(this.values).equal(other).arraySync();\n        break;\n    }\n\n    let bool_vals = utils.__map_int_to_bool(int_vals, 2);\n\n    let df = new DataFrame(bool_vals, {\n      columns: this.column_names,\n      index: this.index\n    });\n    return df;\n  }\n\n  __get_df_from_tensor(val, col_names) {\n    let len = val.shape[0];\n    let new_array = [];\n\n    for (let i = 0; i < len; i++) {\n      let arr = val.slice([i], [1]).arraySync()[0];\n      new_array.push(arr);\n    }\n\n    return new DataFrame(new_array, {\n      columns: col_names\n    });\n  }\n\n  __frame_is_compactible_for_operation() {\n    let dtypes = this.dtypes;\n\n    const str = element => element == \"string\";\n\n    if (dtypes.some(str)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  __get_ops_tensors(tensors, axis) {\n    if (utils.__is_undefined(tensors[1].series)) {\n      let tensors_arr = [];\n\n      if (utils.__is_undefined(axis) || axis == 1) {\n        tensors_arr.push(tensors[0].row_data_tensor);\n        tensors_arr.push(tensors[1]);\n        return tensors_arr;\n      } else {\n        tensors_arr.push(tensors[0].col_data_tensor);\n        tensors_arr.push(tensors[1]);\n        return tensors_arr;\n      }\n    } else {\n      let tensors_arr = [];\n\n      if (utils.__is_undefined(axis) || axis == 1) {\n        let this_tensor, other_tensor;\n        this_tensor = tensors[0].row_data_tensor;\n\n        if (tensors[1].series) {\n          other_tensor = tf.tensor(tensors[1].values, [1, tensors[1].values.length]);\n        } else {\n          other_tensor = tensors[1].row_data_tensor;\n        }\n\n        tensors_arr.push(this_tensor);\n        tensors_arr.push(other_tensor);\n        return tensors_arr;\n      } else {\n        let this_tensor, other_tensor;\n        this_tensor = tensors[0].row_data_tensor;\n\n        if (tensors[1].series) {\n          other_tensor = tf.tensor(tensors[1].values, [tensors[1].values.length, 1]);\n        } else {\n          other_tensor = tensors[1].row_data_tensor;\n        }\n\n        tensors_arr.push(this_tensor);\n        tensors_arr.push(other_tensor);\n        return tensors_arr;\n      }\n    }\n  }\n\n  transpose() {\n    let new_values = this.col_data;\n    let new_index = this.column_names;\n    let new_col_names = this.index;\n    let df = new DataFrame(new_values, {\n      columns: new_col_names,\n      index: new_index\n    });\n    return df;\n  }\n\n  get T() {\n    return this.transpose();\n  }\n\n  get ctypes() {\n    let cols = this.column_names;\n    let d_types = this.col_types;\n    let sf = new _series.Series(d_types, {\n      index: cols\n    });\n    return sf;\n  }\n\n  plot(div) {\n    const plt = new Plot(this, div);\n    return plt;\n  }\n\n  get tensor() {\n    return this.row_data_tensor;\n  }\n\n  astype(kwargs = {}) {\n    if (!utils.__key_in_object(kwargs, \"column\")) {\n      throw Error(\"Value Error: Please specify a column to cast\");\n    }\n\n    if (!utils.__key_in_object(kwargs, \"dtype\")) {\n      throw Error(\"Value Error: Please specify dtype to cast to\");\n    }\n\n    if (!this.column_names.includes(kwargs[\"column\"])) {\n      throw Error(`'${kwargs[\"column\"]}' not found in columns`);\n    }\n\n    let col_idx = this.column_names.indexOf(kwargs[\"column\"]);\n    let new_types = this.col_types;\n    let col_values = this.col_data;\n    new_types[col_idx] = kwargs[\"dtype\"];\n    let new_col_values = [];\n    let temp_col = col_values[col_idx];\n\n    switch (kwargs[\"dtype\"]) {\n      case \"float32\":\n        temp_col.map(val => {\n          new_col_values.push(Number(val));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      case \"int32\":\n        temp_col.map(val => {\n          new_col_values.push(Number(Number(val).toFixed()));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      case \"string\":\n        temp_col.map(val => {\n          new_col_values.push(String(val));\n        });\n        col_values[col_idx] = new_col_values;\n        break;\n\n      default:\n        break;\n    }\n\n    let new_col_obj = {};\n    this.column_names.forEach((cname, i) => {\n      new_col_obj[cname] = col_values[i];\n    });\n    let df = new DataFrame(new_col_obj, {\n      dtypes: new_types,\n      index: this.index\n    });\n    return df;\n  }\n\n  unique(axis = 1) {\n    if (axis == undefined || axis > 1 || axis < 0) {\n      throw Error(`Axis Error: Please specify a correct axis. Axis must either be '0' or '1', got ${axis}`);\n    }\n\n    let _unique = {};\n\n    if (axis == 1) {\n      let col_names = this.column_names;\n      col_names.forEach(cname => {\n        _unique[cname] = this[cname].unique().values;\n      });\n    } else {\n      let rows = this.values;\n      let _index = this.index;\n      rows.forEach((row, i) => {\n        let data_set = new Set(row);\n        _unique[_index[i]] = Array.from(data_set);\n      });\n    }\n\n    return _unique;\n  }\n\n  nunique(axis = 1) {\n    if (axis == undefined || axis > 1 || axis < 0) {\n      throw Error(`Axis Error: Please specify a correct axis. Axis must either be '0' or '1', got ${axis}`);\n    }\n\n    let _nunique = [];\n\n    if (axis == 1) {\n      let col_names = this.column_names;\n      col_names.forEach(cname => {\n        _nunique.push(this[cname].unique().values.length);\n      });\n      let sf = new _series.Series(_nunique, {\n        index: this.column_names\n      });\n      return sf;\n    } else {\n      let rows = this.values;\n      rows.forEach(row => {\n        let data_set = new Set(row);\n\n        _nunique.push(Array.from(data_set).length);\n      });\n    }\n\n    let sf = new _series.Series(_nunique, {\n      index: this.index\n    });\n    return sf;\n  }\n\n  rename(kwargs = {}) {\n    let params_needed = [\"mapper\", \"inplace\", \"axis\"];\n\n    utils._throw_wrong_params_error(kwargs, params_needed);\n\n    if (!utils.__key_in_object(kwargs, \"inplace\")) {\n      kwargs[\"inplace\"] = false;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"axis\")) {\n      kwargs[\"axis\"] = 1;\n    }\n\n    if (!utils.__key_in_object(kwargs, \"mapper\")) {\n      throw Error(\"Please specify a mapper object\");\n    }\n\n    if (kwargs[\"axis\"] == 1) {\n      let old_col_names = Object.keys(kwargs[\"mapper\"]);\n      let new_col_names = Object.values(kwargs[\"mapper\"]);\n      let col_names = [...this.column_names];\n      old_col_names.forEach((cname, i) => {\n        if (!col_names.includes(cname)) {\n          throw Error(`Label Error: Specified column '${cname}' not found in column axis`);\n        }\n\n        let idx = col_names.indexOf(cname);\n        col_names[idx] = new_col_names[i];\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.columns = col_names;\n\n        this.__set_col_property(this, this.col_data, col_names, old_col_names);\n      } else {\n        let df = this.copy();\n        df.columns = col_names;\n\n        df.__set_col_property(df, df.col_data, col_names, old_col_names);\n\n        return df;\n      }\n    } else {\n      let old_index = Object.keys(kwargs[\"mapper\"]);\n      let row_index = this.index;\n      let new_index = [];\n      row_index.forEach(idx => {\n        if (old_index.includes(idx)) {\n          new_index.push(kwargs[\"mapper\"][idx]);\n        } else {\n          new_index.push(idx);\n        }\n      });\n\n      if (kwargs[\"inplace\"]) {\n        this.__set_index(new_index);\n      } else {\n        let df = this.copy();\n\n        df.__set_index(new_index);\n\n        return df;\n      }\n    }\n  }\n\n  sort_index(kwargs = {}) {\n    let inplace = typeof kwargs[\"inplace\"] == \"undefined\" ? false : kwargs[\"inplace\"];\n    let asc = typeof kwargs[\"ascending\"] == \"undefined\" ? true : kwargs[\"ascending\"];\n    let index_val = this.index;\n\n    let [data, index] = this.__sort_by(index_val, index_val, asc);\n\n    if (inplace) {\n      this.__update_frame_in_place(data, null, null, index, null);\n    } else {\n      let df = this.copy();\n\n      df.__update_frame_in_place(data, null, null, index, null);\n\n      return df;\n    }\n  }\n\n  sort_values(kwargs = {}) {\n    if (!utils.__key_in_object(kwargs, \"by\")) {\n      throw Error(`use col_name to specify column name`);\n    }\n\n    let inplace = typeof kwargs[\"inplace\"] == \"undefined\" ? false : kwargs[\"inplace\"];\n    let asc = typeof kwargs[\"ascending\"] == \"undefined\" ? true : kwargs[\"ascending\"];\n    let index_val = this.index;\n    let column_val = this.column(kwargs[\"by\"]).values;\n\n    let [data, index] = this.__sort_by(column_val, index_val, asc);\n\n    if (inplace) {\n      this.__update_frame_in_place(data, null, null, index, null);\n    } else {\n      let df = this.copy();\n\n      df.__update_frame_in_place(data, null, null, index, null);\n\n      return df;\n    }\n  }\n\n  __set_col_property(self, col_vals, col_names, old_col_names) {\n    old_col_names.forEach(name => {\n      delete self[name];\n    });\n    col_vals.forEach((col, i) => {\n      Object.defineProperty(self, col_names[i], {\n        get() {\n          return new _series.Series(col, {\n            columns: col_names[i],\n            index: self.index\n          });\n        },\n\n        set(value) {\n          this.addColumn({\n            column: col_names[i],\n            value: value\n          });\n        }\n\n      });\n    });\n  }\n\n  __update_frame_in_place(row_data, column_names, col_obj, index, dtypes) {\n    if (row_data != undefined) {\n      this.data = row_data;\n    } else {\n      if (col_obj != undefined) {\n        let _res = utils._get_row_and_col_values(col_obj);\n\n        this.data = _res[0];\n        this.columns = _res[1];\n        column_names = _res[1];\n      }\n    }\n\n    if (col_obj != undefined) {\n      this.col_data = Object.values(col_obj);\n      this.columns = Object.keys(col_obj);\n      column_names = Object.keys(col_obj);\n    } else {\n      if (row_data != undefined) {\n        this.col_data = utils.__get_col_values(row_data);\n      }\n    }\n\n    if (column_names != undefined) {\n      this.columns = column_names;\n    }\n\n    if (index != undefined) {\n      this.index_arr = index;\n    }\n\n    if (dtypes != undefined) {\n      this.col_types = dtypes;\n    }\n  }\n\n  __sort_by(col_value, df_index, asc) {\n    let values = this.values;\n\n    let sorted_val = utils.__sort(col_value, asc);\n\n    let duplicate_obj = utils.__get_duplicate(col_value);\n\n    let data = [];\n    let indexs = [];\n\n    for (let row_i = 0; row_i < sorted_val.length; row_i++) {\n      let val = sorted_val[row_i];\n      let index = null;\n\n      if (duplicate_obj.hasOwnProperty(val)) {\n        index = duplicate_obj[val][\"index\"][0];\n        duplicate_obj[val][\"index\"].splice(0, 1);\n      } else {\n        index = col_value.indexOf(val);\n      }\n\n      data.push(values[index]);\n      indexs.push(df_index[index]);\n    }\n\n    return [data, indexs];\n  }\n\n  append(val) {\n    let df2 = null;\n\n    if (Array.isArray(val)) {\n      if (Array.isArray(val[0])) {\n        if (val[0].length != this.shape[1]) {\n          throw Error(`length Mixmatch: The lenght of provided value (${val.length}) does not match the original DataFrame (${this.shape[1]})`);\n        }\n\n        df2 = new DataFrame(val);\n      }\n    } else if (utils.__is_object(val)) {\n      df2 = new DataFrame(val);\n    } else if (val instanceof DataFrame) {\n      df2 = val.copy();\n    }\n\n    let concat_df = (0, _concat.concat)({\n      df_list: [this, df2],\n      axis: 0\n    });\n    return concat_df;\n  }\n\n}\n\nexports.DataFrame = DataFrame;"},"lineCount":1891}},"error":null,"hash":"e490988648d19b9d5bc435e3250a3215","cacheData":{"env":{}}}